{"version":3,"sources":["business/Player/MiniPlayer/index.module.scss","shared/components/MusicList/index.module.scss","shared/components/Confirm/index.module.scss","pages/Recommend/index.module.scss","shared/components/SongList/index.module.scss","pages/rank/List/index.module.scss","shared/components/Header/index.module.scss","business/Player/FullScreenPlayer/ProgressBar/index.module.scss","pages/singer/List/index.module.scss","shared/lib/message/styles.module.scss","shared/components/Tabs/index.module.scss","business/Player/MiniPlayer/ProgressCircle/index.module.scss","pages/singer/Detail/index.module.scss","pages/rank/Detail/index.module.scss","business/Player/FullScreenPlayer/index.module.scss","business/Player/PlayListModal/index.module.scss","shared/hooks/storage/useStorage.ts","shared/hooks/storage/useLocalStorage.ts","shared/typings/index.ts","shared/constants/local.ts","shared/request/http.ts","shared/request/index.ts","shared/constants/external.ts","shared/domain/song/repo.ts","shared/domain/song/index.ts","shared/domain/song/usecase.ts","shared/lib/message/MessageItem.tsx","shared/lib/message/Container.tsx","shared/lib/message/utils.ts","shared/lib/message/index.tsx","shared/container/index.ts","shared/utils/index.ts","shared/components/Header/index.tsx","shared/components/Tabs/index.tsx","business/Player/FullScreenPlayer/ProgressBar/index.tsx","business/Player/common.ts","business/Player/FullScreenPlayer/index.tsx","business/Player/MiniPlayer/ProgressCircle/index.tsx","business/Player/MiniPlayer/index.tsx","business/Player/PlayListModal/index.tsx","shared/components/Confirm/index.tsx","shared/lyric-parser/index.ts","business/Player/index.tsx","pages/Recommend/index.tsx","pages/singer/List/index.tsx","shared/hooks/useAsyncTask/index.ts","shared/hooks/usePagination/fetcher-strategies/roll.ts","shared/hooks/usePagination/fetcher-strategies/index.ts","shared/hooks/usePagination/index.ts","shared/components/SongList/index.tsx","shared/components/MusicList/index.tsx","pages/singer/Detail/index.tsx","pages/rank/List/index.tsx","pages/rank/Detail/index.tsx","pages/Routes.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","isFunction","obj","useStorage","storage","key","defaultValue","useState","getStoredValue","state","setState","raw","getItem","JSON","parse","value","removeItem","currentState","setItem","stringify","useLocalStorage","PlayMode","localStorage","LOCAL_PATHS","routePath","getPathByParams","list","detail","singerId","type","ResponseError","code","message","Error","request","defaults","reqInterceptors","resInterceptors","instance","this","Axios","create","timeout","interceptors","use","onFulfilled","cfg","onRejected","err","Promise","reject","response","res","status","ret","success","data","url","head","params","config","get","handleResponse","delete","post","put","patch","promises","all","callback","spread","baseURL","API_DOMAIN","headers","common","app_id","process","app_secret","resData","responseType","result","msg","query","keyWord","songId","lyricLink","usecase","getRecommendList","a","SongRepo","responseList","map","song","song_id","songName","title","ting_uid","singerPic","pic_singer","singerName","author","albumTitle","album_title","language","proxyCompany","si_proxycompany","info","hugeSongPic","pic_huge","bigSongPic","pic_big","premiumSongPic","pic_premium","smallSongPic","pic_small","publishTime","publishtime","getRankList","name","comment","firstPic","pic_s192","secondPic","pic_s444","thirdPic","pic_s260","forthPic","pic_s210","getRankSongList","fulfilledList","duration","file_duration","lrcLink","lrclink","country","songPic","searchSingerList","getSingerDetail","artistId","artist_id","stature","avatar","constellation","intro","company","birth","getSingerSongList","searchSongList","getSongDetail","id","albumName","artistName","time","songLink","replace","format","rate","size","getLyric","MessageItem","props","className","content","option","onDestroy","useEffect","timer","setTimeout","clearTimeout","classNames","styles","MessageContainer","forwardRef","_","ref","setMessage","generateMessageId","Date","now","length","characters","charactersLength","Array","fill","charAt","Math","floor","random","join","generateRandomString","useImperativeHandle","createMessage","messageId","destroyMessage","useCallback","undefined","container","containerRef","createRef","document","createElement","body","appendChild","ReactDOM","render","current","createContainer","isPlaying","setIsPlaying","isPlayerFullScreen","setIsPlayerFullScreen","playList","setPlayList","playingSong","setPlayingSong","sequenceList","setSequenceList","Sequence","playMode","setPlayMode","songIndex","setSongIndex","historyTerms","setHistoryTerms","favoriteList","setFavoriteList","SongUsecase","lyric","image","playUrl","selectPlay","index","randomPlay","Random","randomPlayList","array","min","max","slice","i","j","temp","shuffle","addAndPlaySong","targetIndex","findIndex","item","prev","clearPlayList","saveFavorite","compare","maxLength","splice","unshift","pop","insertToArray","deleteFavorite","deleteFromArray","Header","onUserIconClick","header","icon","text","mine","iconMine","onClick","Tabs","tabs","tab","path","to","link","label","ProgressBar","percent","onPercentChange","useRef","progressRef","progressBtnRef","touch","initiated","startX","left","containerWidth","clientWidth","progressMaxWidth","progressCurrentWidth","offset","offsetWidth","style","width","transform","inner","progress","progressBtnWrapper","onTouchStart","e","touches","pageX","onTouchMove","deltaX","newOffsetWidth","onTouchEnd","progressBtn","syncWrapperTransform","wrapper","transformStyle","getComputedStyle","getPropertyValue","FullScreenPlayer","visible","currentTime","onBack","onPlayingToggle","onPlayModeChange","onPrevClick","onNextClick","cdWrapperRef","cdImageRef","pad","val","n","toString","timeFormat","minute","second","background","height","src","alt","top","back","backIcon","subtitle","middle","middleLeft","cdWrapper","cdImage","playing","lyricWrapper","bottom","progressWrapper","progressBar","right","operations","leftIcon","Loop","modes","Object","values","nextIndex","mode","centerIcon","rightIcon","ProgressCircle","radius","children","dashArray","PI","dashOffset","viewBox","version","cx","cy","r","strokeDasharray","strokeDashoffset","MiniPlayer","onPlayerClick","onPlayListShow","cd","cdImageWrapper","desc","control","playIcon","stopPropagation","listIcon","playModeDescMap","PlayListModal","playingSongId","onClose","onSelect","onFavoriteSave","onFavoriteDelete","onRemove","onClear","selectSong","toggleFavorite","isFavorite","removeSong","modeIcon","modeText","clear","clearIcon","like","close","Confirm","maskClosable","confirmText","cancelText","onConfirm","onCancel","mask","footer","footerBtn","closeBtn","timeExp","tagRegMap","artist","album","by","noop","LyricParser","handler","tags","lines","curNum","startStamp","pauseStamp","init","startTime","skipLast","findCurNum","callHandler","playRest","stop","play","initTag","initLines","tag","hasOwnProperty","matches","match","RegExp","split","line","exec","lyricText","trim","push","sort","b","lineNum","delay","Player","Container","useContainer","isConfirmVisible","setIsConfirmVisible","isPlayListVisible","setIsPlayListVisible","isAudioReady","setIsAudioReady","lyricParser","setLyricParser","playingLyric","setPlayingLyric","audioRef","currentPlayingTime","setCurrentPlayingTime","currentPercent","togglePlaying","loop","seek","handleLyric","playListWithFavorite","useMemo","find","togglePlay","pause","onCanPlay","onTimeUpdate","target","onEnded","listLength","next","onError","Recommend","recommendList","setRecommendList","listTitle","SingerList","singerList","setSingerList","onSingerClick","singer","history","useAsyncTask","task","isLoaded","setIsLoaded","isPending","setIsPending","createStrategy","fetcher","pageNo","queryData","rollFetcher","page","getFetcherStrategy","rollStrategy","usePagination","pageSize","initialPageNo","disabled","isDisabled","setIsDisabled","setPage","setData","dataRef","hasMore","isRefetch","strategy","fetch","fulfilledResult","curData","previousPageData","nextPageData","concat","finalTask","refetchTask","refetch","loadMore","SongList","songList","onSongSelect","rank","MusicList","cover","onRandomPlay","backgroundImage","playerWrapper","songListContainer","SingerDetail","setSinger","initialLoad","threshold","useWindow","goBack","RankList","rankList","setRankList","onRankClick","RankDetail","rankType","Number","setRank","matched","Routes","exact","component","require","App","Provider","basename","Boolean","window","location","hostname","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.11eb0a30.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MiniPlayer_container__1fcGD\",\"visible\":\"MiniPlayer_visible__3Dz5A\",\"cd\":\"MiniPlayer_cd__3HsXL\",\"cdImageWrapper\":\"MiniPlayer_cdImageWrapper__2tfuC\",\"cdImage\":\"MiniPlayer_cdImage__3M2rJ\",\"playing\":\"MiniPlayer_playing__2EPEA\",\"rotate\":\"MiniPlayer_rotate__2jjF3\",\"text\":\"MiniPlayer_text__1UzVX\",\"name\":\"MiniPlayer_name__nSDYy\",\"desc\":\"MiniPlayer_desc__2I3fU\",\"control\":\"MiniPlayer_control__2t91O\",\"playIcon\":\"MiniPlayer_playIcon__28-Nl\",\"listIcon\":\"MiniPlayer_listIcon__2ASrg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MusicList_header__2DSAu\",\"backIcon\":\"MusicList_backIcon__ePdxO\",\"title\":\"MusicList_title__37IYn\",\"cover\":\"MusicList_cover__vrLrC\",\"mask\":\"MusicList_mask__3Z-Vc\",\"playerWrapper\":\"MusicList_playerWrapper__3wUJP\",\"play\":\"MusicList_play__tskpk\",\"playIcon\":\"MusicList_playIcon__1Ln_z\",\"text\":\"MusicList_text__3jabf\",\"songListContainer\":\"MusicList_songListContainer__1KQLk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mask\":\"Confirm_mask__2URXs\",\"visible\":\"Confirm_visible__GxLGs\",\"body\":\"Confirm_body__3F1Jn\",\"content\":\"Confirm_content__2c74C\",\"footer\":\"Confirm_footer__3gJ17\",\"footerBtn\":\"Confirm_footerBtn__1UKhk\",\"closeBtn\":\"Confirm_closeBtn__2Q5QL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Recommend_container__1_pE7\",\"content\":\"Recommend_content__3O6lw\",\"listTitle\":\"Recommend_listTitle__22osE\",\"item\":\"Recommend_item__VMkzA\",\"icon\":\"Recommend_icon__2aP8r\",\"text\":\"Recommend_text__3uP3k\",\"name\":\"Recommend_name__2WM6a\",\"desc\":\"Recommend_desc__2c1DP\",\"loading-container\":\"Recommend_loading-container__3ctAi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"SongList_item__1boDc\",\"rank\":\"SongList_rank__Ff-ju\",\"icon\":\"SongList_icon__2Z1k4\",\"text\":\"SongList_text__bwiI0\",\"content\":\"SongList_content__coXSI\",\"name\":\"SongList_name__1R3FQ\",\"desc\":\"SongList_desc__3LlhI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"List_container__28AaT\",\"list\":\"List_list__2O6T7\",\"item\":\"List_item__2T6I7\",\"icon\":\"List_icon__IDvQM\",\"info\":\"List_info__3TZOt\",\"name\":\"List_name__1hi-u\",\"comment\":\"List_comment__H9sM8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3VPBX\",\"icon\":\"Header_icon__3K7p0\",\"text\":\"Header_text__2nUCj\",\"mine\":\"Header_mine__1ifKZ\",\"iconMine\":\"Header_iconMine__1ynUa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProgressBar_container__-ZAvS\",\"inner\":\"ProgressBar_inner__1EIxV\",\"progress\":\"ProgressBar_progress__3mEJg\",\"progressBtnWrapper\":\"ProgressBar_progressBtnWrapper__1O2X1\",\"progressBtn\":\"ProgressBar_progressBtn__1OCt0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"List_container__189Un\",\"list\":\"List_list__3dnNW\",\"item\":\"List_item__iZXqJ\",\"avatar\":\"List_avatar__1hjoO\",\"name\":\"List_name__26KdE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3PIvH\",\"message\":\"styles_message__2w9kq\",\"content\":\"styles_content__TvzOl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab\":\"Tabs_tab__2UsYl\",\"item\":\"Tabs_item__3ZvGw\",\"link\":\"Tabs_link__PNMpC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProgressCircle_container__1W7ZF\",\"background\":\"ProgressCircle_background__2bFqW\",\"progress\":\"ProgressCircle_progress__1rjw9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Detail_container__3Z3sL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Detail_container__35C0U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FullScreenPlayer_container__1WBCF\",\"visible\":\"FullScreenPlayer_visible__3wYjU\",\"background\":\"FullScreenPlayer_background__EhGlJ\",\"top\":\"FullScreenPlayer_top__3dxkU\",\"back\":\"FullScreenPlayer_back__24XoF\",\"backIcon\":\"FullScreenPlayer_backIcon__nl8Za\",\"title\":\"FullScreenPlayer_title__2whcd\",\"subtitle\":\"FullScreenPlayer_subtitle__15SDT\",\"middle\":\"FullScreenPlayer_middle__3mfhj\",\"middleLeft\":\"FullScreenPlayer_middleLeft__3jXL2\",\"cdWrapper\":\"FullScreenPlayer_cdWrapper__9QpDm\",\"cdImage\":\"FullScreenPlayer_cdImage__2Tir_\",\"playing\":\"FullScreenPlayer_playing__PlMf-\",\"rotate\":\"FullScreenPlayer_rotate__2o1sX\",\"lyricWrapper\":\"FullScreenPlayer_lyricWrapper__3QkAU\",\"lyric\":\"FullScreenPlayer_lyric__u2TmU\",\"bottom\":\"FullScreenPlayer_bottom__Qn1G5\",\"progressWrapper\":\"FullScreenPlayer_progressWrapper__3bjBe\",\"time\":\"FullScreenPlayer_time__G0wxb\",\"left\":\"FullScreenPlayer_left__AQYyE\",\"right\":\"FullScreenPlayer_right__1g-nO\",\"progressBar\":\"FullScreenPlayer_progressBar__2RYdW\",\"operations\":\"FullScreenPlayer_operations__1zkkf\",\"icon\":\"FullScreenPlayer_icon__3g624\",\"disable\":\"FullScreenPlayer_disable__1UPqk\",\"leftIcon\":\"FullScreenPlayer_leftIcon__3xJ0-\",\"centerIcon\":\"FullScreenPlayer_centerIcon__3Xqyh\",\"rightIcon\":\"FullScreenPlayer_rightIcon__14U9V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PlayListModal_container__374-Z\",\"visible\":\"PlayListModal_visible__36jZw\",\"body\":\"PlayListModal_body__34_-S\",\"header\":\"PlayListModal_header__S-RLN\",\"modeIcon\":\"PlayListModal_modeIcon__1ENBU\",\"modeText\":\"PlayListModal_modeText__2l8oY\",\"clear\":\"PlayListModal_clear__2gMK6\",\"clearIcon\":\"PlayListModal_clearIcon__ZtDnR\",\"list\":\"PlayListModal_list__3qi0u\",\"item\":\"PlayListModal_item__2Caa-\",\"current\":\"PlayListModal_current__2r4d2\",\"songName\":\"PlayListModal_songName__1qGO5\",\"like\":\"PlayListModal_like__1o4kB\",\"delete\":\"PlayListModal_delete__7ohBb\",\"close\":\"PlayListModal_close__lqFSM\"};","import { useState } from 'react';\r\n\r\ninterface IFuncUpdater<T> {\r\n  (previousState?: T): T;\r\n}\r\n\r\nfunction isFunction<T>(obj: any): obj is T {\r\n  return typeof obj === 'function';\r\n}\r\n\r\nconst useStorage = <T>(\r\n  storage: Storage,\r\n  key: string,\r\n  defaultValue?: T | IFuncUpdater<T>\r\n) => {\r\n  const [state, setState] = useState<T | undefined>(() => getStoredValue());\r\n\r\n  function getStoredValue() {\r\n    const raw = storage.getItem(key);\r\n    if (raw) {\r\n      return JSON.parse(raw);\r\n    }\r\n    if (isFunction<IFuncUpdater<T>>(defaultValue)) {\r\n      return defaultValue();\r\n    }\r\n\r\n    return defaultValue;\r\n  }\r\n\r\n  const updateState = (value?: T | IFuncUpdater<T>) => {\r\n    if (typeof value === 'undefined') {\r\n      storage.removeItem(key);\r\n      setState(defaultValue);\r\n    } else if (isFunction<IFuncUpdater<T>>(value)) {\r\n      const previousState = getStoredValue();\r\n      const currentState = value(previousState);\r\n      storage.setItem(key, JSON.stringify(currentState));\r\n      setState(currentState);\r\n    } else {\r\n      storage.setItem(key, JSON.stringify(value));\r\n      setState(value);\r\n    }\r\n  };\r\n  return [state, updateState];\r\n};\r\n\r\nexport default useStorage;\r\n","import useStorage from './useStorage';\r\n\r\nfunction useLocalStorage<T = undefined>(\r\n  key: string\r\n): [T | undefined, (value?: T | ((previousState?: T) => T)) => void];\r\n\r\nfunction useLocalStorage<T>(\r\n  key: string,\r\n  defaultValue: T | (() => T)\r\n): [T, (value?: T | ((previousState?: T) => T)) => void];\r\n\r\nfunction useLocalStorage<T>(key: string, defaultValue?: T | (() => T)) {\r\n  return useStorage(localStorage, key, defaultValue);\r\n}\r\n\r\nexport default useLocalStorage;\r\n","/**\r\n * 分页查询基本参数\r\n * https://github.com/MZCretin/RollToolsApi\r\n */\r\ninterface RollApiBasicPaginationQuery {\r\n  page: number;\r\n}\r\n\r\n/**\r\n * 分页查询参数\r\n */\r\nexport type RollApiPaginationQuery<T> = T extends\r\n  | void\r\n  | undefined\r\n  | null\r\n  | never\r\n  ? RollApiBasicPaginationQuery\r\n  : T & RollApiBasicPaginationQuery;\r\n\r\n/**\r\n * 分页查询结果\r\n */\r\nexport interface RollApiPaginationResult<T> {\r\n  page: number; // 当前页数\r\n  totalCount: number; // 总数量\r\n  totalPage: number; // 总页数\r\n  list: T; // 具体数据模型\r\n  limit: number; // 每页数量\r\n}\r\n\r\n/**\r\n * 播放模式\r\n */\r\nexport enum PlayMode {\r\n  Sequence = 'SEQUENCE', // 顺序播放\r\n  Loop = 'LOOP', // 单曲循环\r\n  Random = 'RANDOM' // 随机播放\r\n}\r\n","export const LOCAL_PATHS = {\r\n  recommend: {\r\n    routePath: '/recommend',\r\n    getPathByParams: () => '/recommend'\r\n  },\r\n  singer: {\r\n    list: {\r\n      routePath: '/singer/list',\r\n      getPathByParams: () => '/singer/list'\r\n    },\r\n    detail: {\r\n      routePath: '/singer/detail/:id',\r\n      getPathByParams: (singerId: string) => `/singer/detail/${singerId}`\r\n    }\r\n  },\r\n  rank: {\r\n    list: {\r\n      routePath: '/rank/list',\r\n      getPathByParams: () => '/rank/list'\r\n    },\r\n    detail: {\r\n      routePath: '/rank/detail/:type',\r\n      getPathByParams: (type: number) => `/rank/detail/${type}`\r\n    }\r\n  },\r\n  search: {\r\n    routePath: '/search',\r\n    getPathByParams: () => '/search'\r\n  }\r\n};\r\n\r\n// storage\r\nexport const STORATE_PLAY_LIST_KEY = 'music_mweb:play_list';\r\nexport const STORAGE_HISTORY_TERMS_KEY = 'music_mweb:history_terms';\r\nexport const STORAGE_FAVORITE_LIST_KEY = 'music_mweb:favorite_list';\r\n\r\n// config\r\nexport const MAX_FAVORITE_LIST_LENGTH = 200;\r\n","import Axios, {\r\n  AxiosInstance,\r\n  AxiosRequestConfig,\r\n  AxiosResponse,\r\n  AxiosError\r\n} from 'axios';\r\n\r\nimport {\r\n  RES_FAILED_DEFAULT_CODE,\r\n  RES_FAILED_DEFAULT_MSG\r\n} from 'shared/constants';\r\n\r\ninterface ResponseErrorOption {\r\n  code: string | number;\r\n  message: string;\r\n}\r\n\r\n/**\r\n * 封装请求响应 Error\r\n */\r\nexport class ResponseError extends Error {\r\n  code: string | number;\r\n\r\n  constructor({ code = '', message = '' }: ResponseErrorOption) {\r\n    super(message);\r\n    this.code = code;\r\n  }\r\n}\r\n\r\nexport interface Response<T> {\r\n  data: T;\r\n  code: number;\r\n  message: string;\r\n  success: boolean;\r\n}\r\n\r\ninterface RequestOption {\r\n  defaults?: AxiosRequestConfig;\r\n  reqInterceptors?: {\r\n    onFulfilled?: (\r\n      config: AxiosRequestConfig\r\n    ) => AxiosRequestConfig | Promise<AxiosRequestConfig>;\r\n    onRejected?: (error: any) => any | undefined;\r\n  };\r\n  resInterceptors?: {\r\n    onFulfilled?: (\r\n      value: AxiosResponse\r\n    ) => AxiosResponse | Promise<AxiosResponse>;\r\n    onRejected?: (err: AxiosError) => Promise<ResponseError>;\r\n  };\r\n}\r\n\r\nclass Request {\r\n  private instance: AxiosInstance;\r\n\r\n  constructor({\r\n    defaults = {},\r\n    reqInterceptors = {},\r\n    resInterceptors = {}\r\n  }: RequestOption) {\r\n    this.instance = Axios.create({\r\n      ...defaults,\r\n      timeout: 50000\r\n    });\r\n\r\n    this.instance.interceptors.request.use(\r\n      reqInterceptors.onFulfilled || (cfg => cfg),\r\n      reqInterceptors.onRejected || (err => Promise.reject(err))\r\n    );\r\n\r\n    const defaultOnFulFilled = (res: AxiosResponse) => res;\r\n    const defaultOnRejected = (err: AxiosError) => {\r\n      return !err.response\r\n        ? Promise.reject(\r\n            new ResponseError({\r\n              code: RES_FAILED_DEFAULT_CODE,\r\n              message: RES_FAILED_DEFAULT_MSG\r\n            })\r\n          )\r\n        : Promise.reject(\r\n            new ResponseError({\r\n              code: err.response.status,\r\n              message: err.message\r\n            })\r\n          );\r\n    };\r\n\r\n    this.instance.interceptors.response.use(\r\n      resInterceptors.onFulfilled || defaultOnFulFilled,\r\n      resInterceptors.onRejected || defaultOnRejected\r\n    );\r\n  }\r\n\r\n  private handleResponse<T>(ret: Response<T>) {\r\n    return ret.success\r\n      ? ret.data\r\n      : Promise.reject(\r\n          new ResponseError({\r\n            code: ret.code,\r\n            message: ret.message\r\n          })\r\n        );\r\n  }\r\n\r\n  public static async all<T>(promises: Promise<T>[]) {\r\n    return Axios.all<T>(promises);\r\n  }\r\n\r\n  public static async spread<T, R>(callback: (...args: T[]) => R) {\r\n    return Axios.spread<T, R>(callback);\r\n  }\r\n\r\n  public async head(url: string) {\r\n    const res = await this.instance.head(url);\r\n\r\n    return res.data;\r\n  }\r\n\r\n  public async get<T = any>(\r\n    url: string,\r\n    params?: object,\r\n    config: AxiosRequestConfig = {}\r\n  ) {\r\n    const { data: ret } = await this.instance.get<Response<T>>(url, {\r\n      ...config,\r\n      params\r\n    });\r\n\r\n    return this.handleResponse(ret);\r\n  }\r\n\r\n  public async delete(url: string) {\r\n    const res = await this.instance.delete(url);\r\n\r\n    return res.data;\r\n  }\r\n\r\n  public async post<T = any>(\r\n    url: string,\r\n    data?: any,\r\n    config?: AxiosRequestConfig\r\n  ) {\r\n    const { data: ret } = await this.instance.post<Response<T>>(\r\n      url,\r\n      data,\r\n      config\r\n    );\r\n\r\n    return this.handleResponse(ret);\r\n  }\r\n\r\n  public async put<T = any>(\r\n    url: string,\r\n    data?: any,\r\n    config?: AxiosRequestConfig\r\n  ) {\r\n    const { data: ret } = await this.instance.put<Response<T>>(\r\n      url,\r\n      data,\r\n      config\r\n    );\r\n\r\n    return this.handleResponse(ret);\r\n  }\r\n\r\n  public async patch<T = any>(\r\n    url: string,\r\n    data?: any,\r\n    config?: AxiosRequestConfig\r\n  ) {\r\n    const { data: ret } = await this.instance.patch<Response<T>>(\r\n      url,\r\n      data,\r\n      config\r\n    );\r\n\r\n    return this.handleResponse(ret);\r\n  }\r\n}\r\n\r\nexport default Request;\r\n","import { AxiosResponse } from 'axios';\r\n\r\nimport Request, { Response, ResponseError } from './http';\r\nimport {\r\n  REQ_BASE_PATH,\r\n  RES_FAILED_DEFAULT_CODE,\r\n  RES_FAILED_DEFAULT_MSG,\r\n  RES_SUCCESS_DEFAULT_CODE,\r\n  RES_SUCCESS_DEFAULT_MSG,\r\n  API_APP_ID,\r\n  API_APP_SECRET\r\n} from 'shared/constants';\r\n\r\n/**\r\n * 服务器返回数据统一格式\r\n */\r\ninterface ServerResponse {\r\n  code: 0 | 1; // 0 返回失败，1 返回成功\r\n  msg: string; // 当 code 返回 0 时候包含错误提示\r\n  data?: any; // 具体接口数据信息\r\n}\r\n\r\nconst request = new Request({\r\n  defaults: {\r\n    baseURL: REQ_BASE_PATH,\r\n    headers: {\r\n      common: {\r\n        app_id: API_APP_ID,\r\n        app_secret: API_APP_SECRET\r\n      }\r\n    }\r\n  },\r\n  reqInterceptors: {\r\n    onFulfilled: config => ({\r\n      ...config,\r\n      params: {\r\n        ...config.params,\r\n        app_id: API_APP_ID,\r\n        app_secret: API_APP_SECRET\r\n      }\r\n    })\r\n  },\r\n  resInterceptors: {\r\n    onFulfilled: (res: AxiosResponse<ServerResponse>) => {\r\n      const {\r\n        data: resData,\r\n        config: { responseType }\r\n      } = res;\r\n      let result: Response<any> = {\r\n        data: null,\r\n        code: RES_SUCCESS_DEFAULT_CODE,\r\n        message: RES_SUCCESS_DEFAULT_MSG,\r\n        success: true\r\n      };\r\n\r\n      if (resData === null || resData === void 0) {\r\n        result.data = {};\r\n      } else if (\r\n        typeof resData !== 'object' ||\r\n        (responseType && responseType !== 'json')\r\n      ) {\r\n        result.data = resData;\r\n      } else {\r\n        result = {\r\n          data: resData.data,\r\n          code: resData.code,\r\n          message: resData.msg,\r\n          success: resData.code === RES_SUCCESS_DEFAULT_CODE\r\n        };\r\n      }\r\n\r\n      return {\r\n        ...res,\r\n        data: result\r\n      };\r\n    },\r\n    onRejected: err => {\r\n      if (!err.response) {\r\n        return Promise.reject(\r\n          new ResponseError({\r\n            code: RES_FAILED_DEFAULT_CODE,\r\n            message: RES_FAILED_DEFAULT_MSG\r\n          })\r\n        );\r\n      }\r\n\r\n      const { code, msg } = err.response.data as ServerResponse;\r\n\r\n      return Promise.reject(\r\n        new ResponseError({\r\n          code: code || err.response.status,\r\n          message: msg || ''\r\n        })\r\n      );\r\n    }\r\n  }\r\n});\r\n\r\nexport default request;\r\n","export const BASE_NAME = process.env.REACT_APP_BASE_NAME as string;\r\n\r\n// request\r\nconst API_DOMAIN = process.env.REACT_APP_API_DOMAIN as string;\r\nconst API_PREFIX_PATH = process.env.REACT_APP_API_PREFIX_PATH as string;\r\nexport const REQ_BASE_PATH = API_DOMAIN + API_PREFIX_PATH;\r\nexport const RES_SUCCESS_DEFAULT_CODE = 1;\r\nexport const RES_FAILED_DEFAULT_CODE = 0;\r\nexport const RES_SUCCESS_DEFAULT_MSG = 'success';\r\nexport const RES_FAILED_DEFAULT_MSG = 'uncaught exception';\r\n\r\n// request secret\r\nexport const API_APP_ID = process.env.REACT_APP_API_APP_ID as string;\r\nexport const API_APP_SECRET = process.env.REACT_APP_API_APP_SECRET as string;\r\n","import request from 'shared/request';\r\n\r\nimport {\r\n  RollApiPaginationQuery,\r\n  RollApiPaginationResult\r\n} from 'shared/typings';\r\nimport {\r\n  ResponseRecommendSong,\r\n  ResponseRank,\r\n  ResponseListSong,\r\n  ResponseSingerDetail,\r\n  ResponseSingerSong,\r\n  ResponseSongDetail,\r\n  ResponseSinger\r\n} from './typings';\r\n\r\nexport default {\r\n  /**\r\n   * 获取每日音乐推荐列表\r\n   */\r\n  getRecommendList: () => {\r\n    return request.get<ResponseRecommendSong[]>('/music/recommend/list');\r\n  },\r\n  /**\r\n   * 获取榜单列表\r\n   */\r\n  getRankList: () => {\r\n    return request.get<ResponseRank[]>('/music/order/list');\r\n  },\r\n  /**\r\n   * 获取指定榜单类型的歌曲列表\r\n   */\r\n  getRankSongList: (query: RollApiPaginationQuery<{ type: number }>) => {\r\n    return request.get<RollApiPaginationResult<ResponseSingerSong[]>>(\r\n      '/music/order/song/list',\r\n      query\r\n    );\r\n  },\r\n  /**\r\n   * 搜索歌手列表\r\n   */\r\n  searchSingerList: (keyWord: string) => {\r\n    return request.get<ResponseSinger[]>('/music/singer/search', { keyWord });\r\n  },\r\n  /**\r\n   * 获取歌手详情\r\n   */\r\n  getSingerDetail: (singerId: string) => {\r\n    return request.get<ResponseSingerDetail>('/music/singer/detail', {\r\n      singerId\r\n    });\r\n  },\r\n  /**\r\n   * 获取歌手的歌曲列表\r\n   */\r\n  getSingerSongList: (query: RollApiPaginationQuery<{ singerId: string }>) => {\r\n    return request.get<RollApiPaginationResult<ResponseSingerSong[]>>(\r\n      '/music/singer/song/list',\r\n      query\r\n    );\r\n  },\r\n  /**\r\n   * 搜索歌曲列表\r\n   */\r\n  searchSongList: (query: RollApiPaginationQuery<{ keyWord: string }>) => {\r\n    return request.get<RollApiPaginationResult<ResponseListSong[]>>(\r\n      '/music/song/search',\r\n      query\r\n    );\r\n  },\r\n  /**\r\n   * 获取歌曲详情\r\n   */\r\n  getSongDetail: (songId: string) => {\r\n    return request.get<ResponseSongDetail>('/music/song/detail', { songId });\r\n  },\r\n  /**\r\n   * 获取歌词\r\n   */\r\n  getLyric: (lyricLink: string) => {\r\n    return request.get<string>(lyricLink, { responseType: 'text' });\r\n  }\r\n};\r\n","import usecase from './usecase';\r\n\r\nexport default usecase;\r\n","import SongRepo from './repo';\r\nimport {\r\n  RollApiPaginationQuery,\r\n  RollApiPaginationResult\r\n} from 'shared/typings';\r\nimport {\r\n  FulfilledRecommendSong,\r\n  FulfilledRank,\r\n  FulfilledSingerSong,\r\n  FulfilledSinger,\r\n  FulfilledSingerDetail,\r\n  FulfilledListSong,\r\n  FulfilledSongDetail\r\n} from './typings';\r\n\r\nexport default {\r\n  getRecommendList: async () => {\r\n    const responseList = await SongRepo.getRecommendList();\r\n    return responseList.map(song => {\r\n      const fulfilledSong: FulfilledRecommendSong = {\r\n        songId: song.song_id,\r\n        songName: song.title,\r\n        singerId: song.ting_uid,\r\n        singerPic: song.pic_singer,\r\n        singerName: song.author,\r\n        albumTitle: song.album_title,\r\n        language: song.language,\r\n        proxyCompany: song.si_proxycompany,\r\n        info: song.info,\r\n        hugeSongPic: song.pic_huge,\r\n        bigSongPic: song.pic_big,\r\n        premiumSongPic: song.pic_premium,\r\n        smallSongPic: song.pic_small,\r\n        publishTime: song.publishtime\r\n      };\r\n\r\n      return fulfilledSong;\r\n    });\r\n  },\r\n  getRankList: async () => {\r\n    const responseList = await SongRepo.getRankList();\r\n    return responseList.map(song => {\r\n      const fulfilledSong: FulfilledRank = {\r\n        name: song.name,\r\n        type: song.type,\r\n        comment: song.comment,\r\n        firstPic: song.pic_s192,\r\n        secondPic: song.pic_s444,\r\n        thirdPic: song.pic_s260,\r\n        forthPic: song.pic_s210\r\n      };\r\n\r\n      return fulfilledSong;\r\n    });\r\n  },\r\n  getRankSongList: async (query: RollApiPaginationQuery<{ type: number }>) => {\r\n    const response = await SongRepo.getRankSongList(query);\r\n    const fulfilledList = response.list.map(song => {\r\n      const fulfilledSong: FulfilledSingerSong = {\r\n        songId: song.song_id,\r\n        songName: song.title,\r\n        singerId: song.ting_uid,\r\n        singerName: song.author,\r\n        proxyCompany: song.si_proxycompany,\r\n        duration: song.file_duration,\r\n        lrcLink: song.lrclink,\r\n        country: song.country,\r\n        songPic: song.pic_big,\r\n        language: song.language,\r\n        publishTime: song.publishtime\r\n      };\r\n\r\n      return fulfilledSong;\r\n    });\r\n    const ret: RollApiPaginationResult<FulfilledSingerSong[]> = {\r\n      ...response,\r\n      list: fulfilledList\r\n    };\r\n\r\n    return ret;\r\n  },\r\n  searchSingerList: async (keyWord: string) => {\r\n    const responseList = await SongRepo.searchSingerList(keyWord);\r\n    return responseList as FulfilledSinger[];\r\n  },\r\n  getSingerDetail: async (singerId: string) => {\r\n    const response = await SongRepo.getSingerDetail(singerId);\r\n    const ret: FulfilledSingerDetail = {\r\n      artistId: response.artist_id,\r\n      singerId: response.singerId,\r\n      singerName: response.name,\r\n      stature: response.stature,\r\n      avatar: response.avatar,\r\n      constellation: response.constellation,\r\n      intro: response.intro,\r\n      company: response.company,\r\n      country: response.country,\r\n      birth: response.birth\r\n    };\r\n\r\n    return ret;\r\n  },\r\n  getSingerSongList: async (\r\n    query: RollApiPaginationQuery<{ singerId: string }>\r\n  ) => {\r\n    const response = await SongRepo.getSingerSongList(query);\r\n    const fulfilledList = response.list.map(song => {\r\n      const fulfilledSong: FulfilledSingerSong = {\r\n        songId: song.song_id,\r\n        songName: song.title,\r\n        singerId: song.ting_uid,\r\n        singerName: song.author,\r\n        proxyCompany: song.si_proxycompany,\r\n        duration: song.file_duration,\r\n        lrcLink: song.lrclink,\r\n        country: song.country,\r\n        songPic: song.pic_big,\r\n        language: song.language,\r\n        publishTime: song.publishtime\r\n      };\r\n\r\n      return fulfilledSong;\r\n    });\r\n    const ret: RollApiPaginationResult<FulfilledSingerSong[]> = {\r\n      ...response,\r\n      list: fulfilledList\r\n    };\r\n\r\n    return ret;\r\n  },\r\n  searchSongList: async (\r\n    query: RollApiPaginationQuery<{ keyWord: string }>\r\n  ) => {\r\n    const response = await SongRepo.searchSongList(query);\r\n    return response as RollApiPaginationResult<FulfilledListSong[]>;\r\n  },\r\n  getSongDetail: async (songId: string) => {\r\n    const response = await SongRepo.getSongDetail(songId);\r\n    const ret: FulfilledSongDetail = {\r\n      songId: response.id,\r\n      songName: response.songName,\r\n      albumName: response.albumName,\r\n      singerName: response.artistName,\r\n      songPic: response.songPic,\r\n      lrcLink: response.lrcLink,\r\n      time: response.time,\r\n      songLink: response.songLink.replace(/http:/g, 'https:'),\r\n      format: response.format,\r\n      rate: response.rate,\r\n      size: response.size\r\n    };\r\n\r\n    return ret;\r\n  },\r\n  getLyric: (lyricLink: string) => {\r\n    return SongRepo.getLyric(lyricLink.replace(/http:/g, 'https:'));\r\n  }\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport { Message } from './typings';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\ninterface Props {\r\n  className?: string;\r\n  message: Message;\r\n  onDestroy: (messageId: string) => void;\r\n}\r\n\r\nconst MessageItem: React.FC<Props> = props => {\r\n  const {\r\n    className = '',\r\n    message: { id, content, option },\r\n    onDestroy\r\n  } = props;\r\n\r\n  const duration = option?.duration || 3000;\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      onDestroy(id);\r\n    }, duration);\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [onDestroy, id, duration]);\r\n\r\n  return (\r\n    <div\r\n      className={classNames({\r\n        [styles.message]: true,\r\n        [className]: true\r\n      })}\r\n    >\r\n      <main className={styles.content}>{content}</main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageItem;\r\n","import React, {\r\n  useState,\r\n  useCallback,\r\n  forwardRef,\r\n  useImperativeHandle\r\n} from 'react';\r\n\r\nimport MessageItem from './MessageItem';\r\nimport { MessageType, Message, MessageOption } from './typings';\r\nimport { generateRandomString } from './utils';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nexport interface MessageContainerRef {\r\n  createMessage: (\r\n    type: MessageType,\r\n    content: React.ReactNode,\r\n    option?: MessageOption\r\n  ) => void;\r\n}\r\n\r\nconst MessageContainer = forwardRef<MessageContainerRef>((_, ref) => {\r\n  const [message, setMessage] = useState<Message>();\r\n\r\n  const generateMessageId = () => {\r\n    return `${Date.now()}-${generateRandomString()}`;\r\n  };\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    createMessage: (\r\n      type: MessageType,\r\n      content: React.ReactNode,\r\n      option?: MessageOption\r\n    ) => {\r\n      const messageId = generateMessageId();\r\n      setMessage({\r\n        id: messageId,\r\n        type,\r\n        content,\r\n        option\r\n      });\r\n    }\r\n  }));\r\n\r\n  const destroyMessage = useCallback((messageId: string) => {\r\n    setMessage(undefined);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {message && <MessageItem message={message} onDestroy={destroyMessage} />}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MessageContainer;\r\n","/**\r\n * 生成随机字符串\r\n */\r\nexport const generateRandomString = (length: number = 5) => {\r\n  const characters =\r\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n  const charactersLength = characters.length;\r\n\r\n  return Array(length)\r\n    .fill(null)\r\n    .map(() => characters.charAt(Math.floor(Math.random() * charactersLength)))\r\n    .join('');\r\n};\r\n","import React, { createRef } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport MessageContainer, { MessageContainerRef } from './Container';\r\n\r\nimport { MessageType, MessageOption } from './typings';\r\n\r\nconst containerRef = createRef<MessageContainerRef>();\r\n\r\nconst container = document.createElement('div');\r\ndocument.body.appendChild(container);\r\n\r\nReactDOM.render(<MessageContainer ref={containerRef} />, container);\r\n\r\nconst createMessage = (\r\n  type: MessageType,\r\n  content: React.ReactNode,\r\n  option?: MessageOption\r\n) => {\r\n  if (containerRef.current) {\r\n    containerRef.current.createMessage(type, content, option);\r\n  }\r\n};\r\n\r\nexport default {\r\n  success: (content: string, option?: MessageOption) => {\r\n    createMessage('SUCCESS', content, option);\r\n  },\r\n  error: (content: string, option?: MessageOption) => {\r\n    createMessage('ERROR', content, option);\r\n  },\r\n  info: (content: string, option?: MessageOption) => {\r\n    createMessage('INFO', content, option);\r\n  },\r\n  warning: (content: string, option?: MessageOption) => {\r\n    createMessage('WARNING', content, option);\r\n  }\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { createContainer } from 'unstated-next';\r\n\r\nimport useLocalStorage from 'shared/hooks/storage/useLocalStorage';\r\n\r\nimport SongUsecase from 'shared/domain/song';\r\nimport { shuffle, insertToArray, deleteFromArray } from 'shared/utils';\r\nimport {\r\n  STORATE_PLAY_LIST_KEY,\r\n  STORAGE_HISTORY_TERMS_KEY,\r\n  STORAGE_FAVORITE_LIST_KEY,\r\n  MAX_FAVORITE_LIST_LENGTH\r\n} from 'shared/constants';\r\nimport { PlayerSong, PlayingSong } from 'shared/domain/song/typings';\r\nimport { PlayMode } from 'shared/typings';\r\n\r\nimport message from 'shared/lib/message';\r\n\r\nexport default createContainer(() => {\r\n  // 是否在播放音乐\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  // 播放器是否全屏\r\n  const [isPlayerFullScreen, setIsPlayerFullScreen] = useState(false);\r\n  // 播放列表，当循环播放与随机播放时会跟 sequenceList 不同\r\n  const [playList, setPlayList] = useLocalStorage<PlayerSong[]>(\r\n    STORATE_PLAY_LIST_KEY,\r\n    []\r\n  );\r\n  // 播放中的歌曲，需要额外获取详情的歌词与播放地址\r\n  const [playingSong, setPlayingSong] = useState<PlayingSong>();\r\n  // 顺序播放列表\r\n  const [sequenceList, setSequenceList] = useState<PlayerSong[]>([]);\r\n  // 播放模式\r\n  const [playMode, setPlayMode] = useState<PlayMode>(PlayMode.Sequence);\r\n  // 播放的音乐在列表的索引\r\n  const [songIndex, setSongIndex] = useState(-1);\r\n  // 搜索历史\r\n  const [historyTerms, setHistoryTerms] = useLocalStorage<string[]>(\r\n    STORAGE_HISTORY_TERMS_KEY,\r\n    []\r\n  );\r\n  // 收藏歌曲\r\n  const [favoriteList, setFavoriteList] = useLocalStorage<PlayerSong[]>(\r\n    STORAGE_FAVORITE_LIST_KEY,\r\n    []\r\n  );\r\n\r\n  /**\r\n   * 如果列表无歌曲，则添加，自动播放歌曲\r\n   */\r\n  const addAndPlaySong = (song: PlayerSong) => {\r\n    const targetIndex = playList.findIndex(item => item.songId === song.songId);\r\n    if (targetIndex > -1) {\r\n      setSongIndex(targetIndex);\r\n    } else {\r\n      setPlayList(prev => (prev ? [...prev, song] : [song]));\r\n      setSongIndex(playList.length);\r\n    }\r\n    setIsPlayerFullScreen(true);\r\n  };\r\n\r\n  /**\r\n   * 选择播放\r\n   */\r\n  const selectPlay = (list: PlayerSong[], index: number) => {\r\n    setSequenceList(list);\r\n    // setPlayMode('SEQUENCE');\r\n    setPlayList(list);\r\n    setSongIndex(index);\r\n    setIsPlayerFullScreen(true);\r\n  };\r\n\r\n  /**\r\n   * 随机播放\r\n   */\r\n  const randomPlay = (list: PlayerSong[]) => {\r\n    setSequenceList(list);\r\n    setPlayMode(PlayMode.Random);\r\n    const randomPlayList = shuffle(list);\r\n    setPlayList(randomPlayList);\r\n    setSongIndex(0);\r\n    setIsPlayerFullScreen(true);\r\n  };\r\n\r\n  /**\r\n   * 获取歌曲详情\r\n   */\r\n  const getSongDetail = async (songId: string) => {\r\n    try {\r\n      const result = await SongUsecase.getSongDetail(songId);\r\n      const lyric = await SongUsecase.getLyric(result.lrcLink);\r\n      setPlayingSong({\r\n        songId,\r\n        songName: result.songName,\r\n        singerName: result.singerName,\r\n        image: result.songPic,\r\n        lyric,\r\n        playUrl: result.songLink,\r\n        duration: result.time\r\n      });\r\n      setIsPlaying(true);\r\n    } catch (e) {\r\n      message.error(e.message);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 清空播放列表\r\n   */\r\n  const clearPlayList = () => {\r\n    setPlayList([]);\r\n    setSequenceList([]);\r\n    setSongIndex(-1);\r\n    setIsPlaying(false);\r\n  };\r\n\r\n  /**\r\n   * 收藏歌曲\r\n   */\r\n  const saveFavorite = (song: PlayerSong) => {\r\n    setFavoriteList(prev =>\r\n      prev\r\n        ? insertToArray(\r\n            prev,\r\n            song,\r\n            item => item.songId === song.songId,\r\n            MAX_FAVORITE_LIST_LENGTH\r\n          )\r\n        : [song]\r\n    );\r\n  };\r\n\r\n  /**\r\n   * 取消收藏歌曲\r\n   */\r\n  const deleteFavorite = (song: PlayerSong) => {\r\n    setFavoriteList(prev =>\r\n      prev ? deleteFromArray(prev, item => item.songId === song.songId) : []\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (0 <= songIndex && songIndex < playList.length) {\r\n      const playSong = playList[songIndex];\r\n      const songId = playSong.songId;\r\n      getSongDetail(songId);\r\n    }\r\n  }, [playList, songIndex]);\r\n\r\n  return {\r\n    isPlaying,\r\n    setIsPlaying,\r\n    isPlayerFullScreen,\r\n    setIsPlayerFullScreen,\r\n    playList,\r\n    setPlayList,\r\n    sequenceList,\r\n    setSequenceList,\r\n    playMode,\r\n    setPlayMode,\r\n    songIndex,\r\n    setSongIndex,\r\n    historyTerms,\r\n    setHistoryTerms,\r\n    selectPlay,\r\n    randomPlay,\r\n    playingSong,\r\n    addAndPlaySong,\r\n    clearPlayList,\r\n    favoriteList,\r\n    saveFavorite,\r\n    deleteFavorite\r\n  };\r\n});\r\n","/**\r\n * 随机抽取（包含） min 到 max 之间的数\r\n */\r\nfunction getRandomInt(min: number, max: number): number {\r\n  return Math.floor(Math.random() * (max - min + 1) + min); // +1 是保证能取到上限的值\r\n}\r\n\r\n/**\r\n * 把数组元素打乱，经典的 shuffle 算法\r\n */\r\nexport function shuffle<T extends any[]>(array: T): T {\r\n  const res = array.slice() as T;\r\n\r\n  for (let i = 0; i < res.length; i++) {\r\n    const j = getRandomInt(0, i);\r\n    const temp = res[i];\r\n    res[i] = array[j];\r\n    res[j] = temp;\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\n/**\r\n * 往数组头部插入元素，限制最大长度\r\n */\r\nexport function insertToArray<T>(\r\n  array: T[],\r\n  item: T,\r\n  compare: (item: T) => boolean,\r\n  maxLength: number\r\n) {\r\n  array = array.slice(); // 复制数组，避免影响原数组\r\n  const index = array.findIndex(compare);\r\n  if (index === 0) {\r\n    // 如果存在该数据并且在最前面，则什么都不干\r\n    return array;\r\n  } else if (index > 0) {\r\n    // 如果存在该数据但不是在最前面，则删掉这个数据\r\n    array.splice(index, 1);\r\n  }\r\n  array.unshift(item); // 在数组最前面插入这个值\r\n  if (maxLength && array.length > maxLength) {\r\n    // 如果数组超出最大长度，则删除最后一个\r\n    array.pop();\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\n/**\r\n * 从数组删除元素\r\n */\r\nexport function deleteFromArray<T>(array: T[], compare: (item: T) => boolean) {\r\n  array = array.slice(); // 复制数组，避免影响原数组\r\n  const index = array.findIndex(compare);\r\n  if (index > -1) {\r\n    array.splice(index, 1);\r\n  }\r\n\r\n  return array;\r\n}\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport styles from './index.module.scss';\r\n\r\ninterface HeaderProps {\r\n  onUserIconClick?: () => void;\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = props => {\r\n  const { onUserIconClick } = props;\r\n\r\n  const onClick = () => {\r\n    onUserIconClick && onUserIconClick();\r\n  };\r\n\r\n  return (\r\n    <header className={styles.header}>\r\n      <i className={styles.icon} />\r\n      <h1 className={styles.text}>大力音乐</h1>\r\n      <div className={styles.mine}>\r\n        <i\r\n          className={classNames({\r\n            'icon-mine': true,\r\n            [styles.iconMine]: true\r\n          })}\r\n          onClick={onClick}\r\n        />\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport styles from './index.module.scss';\r\n\r\ninterface Tab {\r\n  label: string;\r\n  path: string;\r\n}\r\n\r\ninterface TabsProps {\r\n  tabs: Tab[];\r\n}\r\n\r\nconst Tabs: React.FC<TabsProps> = props => {\r\n  const { tabs } = props;\r\n\r\n  return (\r\n    <div className={styles.tab}>\r\n      {tabs.map(tab => (\r\n        <NavLink key={tab.path} to={tab.path} className={styles.item}>\r\n          <span className={styles.link}>{tab.label}</span>\r\n        </NavLink>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tabs;\r\n","import React, { useEffect, useRef, TouchEvent } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport styles from './index.module.scss';\r\n\r\ninterface ProgressBarProps {\r\n  className?: string;\r\n  percent?: number;\r\n  onPercentChange?: (percent: number) => void;\r\n}\r\n\r\nconst ProgressBar: React.FC<ProgressBarProps> = props => {\r\n  const { className = '', percent = 0, onPercentChange } = props;\r\n\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const progressRef = useRef<HTMLDivElement>(null);\r\n  const progressBtnRef = useRef<HTMLDivElement>(null);\r\n  const touch = useRef({\r\n    initiated: false, // 是否在拖动模式中\r\n    startX: -1, // 触发 touchstart 时候鼠标 X 轴位置\r\n    left: -1 // 触发 touchstart 时候进度条长度\r\n  });\r\n\r\n  const progressBtnWidth = 16;\r\n  const containerWidth = containerRef.current?.clientWidth || 0;\r\n  const progressMaxWidth = containerWidth - progressBtnWidth; // 因按钮占 16px，故 100% 的长度也只能是总的扣去 16\r\n  const progressCurrentWidth = progressRef.current?.clientWidth || 0; // 当前进度条长度\r\n\r\n  const progressTouchStart = (e: TouchEvent<HTMLDivElement>) => {\r\n    touch.current.initiated = true;\r\n    touch.current.startX = e.touches[0].pageX;\r\n    touch.current.left = progressCurrentWidth;\r\n  };\r\n\r\n  const progressTouchMove = (e: TouchEvent<HTMLDivElement>) => {\r\n    const currentX = e.touches[0].pageX;\r\n    const deltaX = currentX - touch.current.startX; // 如果用户向右拖则为正数，向左则为负数\r\n    const newOffsetWidth = Math.min(\r\n      Math.max(0, touch.current.left + deltaX),\r\n      containerWidth - progressBtnWidth\r\n    );\r\n    offset(newOffsetWidth);\r\n  };\r\n\r\n  const progressTouchEnd = () => {\r\n    touch.current.initiated = false;\r\n    const newPercent = progressCurrentWidth / progressMaxWidth;\r\n    onPercentChange && onPercentChange(newPercent);\r\n  };\r\n\r\n  const offset = (offsetWidth: number) => {\r\n    if (progressRef.current) {\r\n      progressRef.current.style.width = `${offsetWidth}px`;\r\n    }\r\n    if (progressBtnRef.current) {\r\n      progressBtnRef.current.style.transform = `translate3d(${offsetWidth}px, 0, 0)`;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 不在拖动模式时，才自动更新播放条进度\r\n    if (percent >= 0 && !touch.current.initiated) {\r\n      offset(progressMaxWidth * percent);\r\n    }\r\n  }, [percent, touch, progressMaxWidth]);\r\n\r\n  return (\r\n    <div\r\n      className={classNames({\r\n        [styles.container]: true,\r\n        [className]: true\r\n      })}\r\n      ref={containerRef}\r\n    >\r\n      <div className={styles.inner}>\r\n        <div className={styles.progress} ref={progressRef}></div>\r\n        <div\r\n          className={styles.progressBtnWrapper}\r\n          ref={progressBtnRef}\r\n          onTouchStart={progressTouchStart}\r\n          onTouchMove={progressTouchMove}\r\n          onTouchEnd={progressTouchEnd}\r\n        >\r\n          <span className={styles.progressBtn}></span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","/**\r\n * 同步内层 transform 到外层容器\r\n */\r\nexport function syncWrapperTransform(wrapper: HTMLElement, inner: HTMLElement) {\r\n  const innerStyle = getComputedStyle(inner);\r\n  const transformStyle = innerStyle.getPropertyValue('transform');\r\n  wrapper.style.transform = transformStyle;\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport ProgressBar from './ProgressBar';\r\n\r\nimport { syncWrapperTransform } from '../common';\r\nimport { PlayingSong } from 'shared/domain/song/typings';\r\nimport { PlayMode } from 'shared/typings';\r\n\r\nimport styles from './index.module.scss';\r\n\r\ninterface FullScreenPlayerProps {\r\n  className?: string;\r\n  visible?: boolean; // 是否可见\r\n  lyric?: string; // 当前展示的歌词\r\n  playMode?: PlayMode; // 播放模式\r\n  playingSong?: PlayingSong; // 播放中的歌曲\r\n  currentTime?: number; // 当前播放时间\r\n  isPlaying?: boolean; // 是否播放中\r\n  onBack?: () => void; // 回退按钮回调\r\n  onPlayingToggle?: () => void; // 切换播放\r\n  onPercentChange?: (percent: number) => void; // 播放时间进度改变的回调\r\n  onPlayModeChange?: (mode: PlayMode) => void; // 播放模式改变的回调\r\n  onPrevClick?: () => void; // 左箭头图标点击的回调\r\n  onNextClick?: () => void; // 右箭头图标点击的回调\r\n}\r\n\r\nconst FullScreenPlayer: React.FC<FullScreenPlayerProps> = props => {\r\n  const {\r\n    className = '',\r\n    visible,\r\n    lyric,\r\n    playMode,\r\n    currentTime,\r\n    playingSong,\r\n    isPlaying,\r\n    onBack,\r\n    onPlayingToggle,\r\n    onPercentChange,\r\n    onPlayModeChange,\r\n    onPrevClick,\r\n    onNextClick\r\n  } = props;\r\n\r\n  const cdWrapperRef = useRef<HTMLDivElement>(null);\r\n  const cdImageRef = useRef<HTMLImageElement>(null);\r\n\r\n  const percent =\r\n    currentTime && playingSong ? currentTime / playingSong.duration : 0;\r\n\r\n  const pad = (val: string | number, n = 2) => {\r\n    let length = val.toString().length;\r\n    while (length < n) {\r\n      val = '0' + val;\r\n      length++;\r\n    }\r\n\r\n    return val;\r\n  };\r\n\r\n  const timeFormat = (time: number = 0) => {\r\n    time = Math.floor(time);\r\n    const minute = Math.floor(time / 60);\r\n    const second = pad(time % 60);\r\n\r\n    return `${minute}:${second}`;\r\n  };\r\n\r\n  const onModeChange = () => {\r\n    const modes = Object.values(PlayMode);\r\n    const index = modes.findIndex(mode => mode === playMode);\r\n    const nextIndex = (index + 1) % modes.length;\r\n    onPlayModeChange && onPlayModeChange(modes[nextIndex]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isPlaying && cdWrapperRef.current && cdImageRef.current) {\r\n      syncWrapperTransform(cdWrapperRef.current, cdImageRef.current);\r\n    }\r\n  }, [isPlaying, cdWrapperRef, cdImageRef]);\r\n\r\n  return (\r\n    <div\r\n      className={classNames({\r\n        [styles.container]: true,\r\n        [styles.visible]: visible,\r\n        [className]: true\r\n      })}\r\n    >\r\n      <div className={styles.background}>\r\n        <img\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          src={playingSong?.image}\r\n          alt={playingSong?.songName}\r\n        />\r\n      </div>\r\n      <header\r\n        className={classNames({\r\n          [styles.top]: true,\r\n          [styles.visible]: visible\r\n        })}\r\n      >\r\n        <div className={styles.back} onClick={onBack}>\r\n          <i\r\n            className={classNames({\r\n              'icon-back': true,\r\n              [styles.backIcon]: true\r\n            })}\r\n          />\r\n        </div>\r\n        <h1 className={styles.title}>{playingSong?.songName}</h1>\r\n        <h2 className={styles.subtitle}>{playingSong?.singerName}</h2>\r\n      </header>\r\n      <main className={styles.middle}>\r\n        <section className={styles.middleLeft}>\r\n          <div className={styles.cdWrapper} ref={cdWrapperRef}>\r\n            <img\r\n              className={classNames({\r\n                [styles.cdImage]: true,\r\n                [styles.playing]: isPlaying\r\n              })}\r\n              src={playingSong?.image}\r\n              alt={playingSong?.songName}\r\n              ref={cdImageRef}\r\n            />\r\n          </div>\r\n          <div className={styles.lyricWrapper}>\r\n            <span className={styles.lyric}>{lyric}</span>\r\n          </div>\r\n        </section>\r\n      </main>\r\n      <footer\r\n        className={classNames({\r\n          [styles.bottom]: true,\r\n          [styles.visible]: visible\r\n        })}\r\n      >\r\n        <div className={styles.progressWrapper}>\r\n          <span\r\n            className={classNames({\r\n              [styles.time]: true,\r\n              [styles.left]: true\r\n            })}\r\n          >\r\n            {timeFormat(currentTime)}\r\n          </span>\r\n          <ProgressBar\r\n            className={styles.progressBar}\r\n            percent={percent}\r\n            onPercentChange={onPercentChange}\r\n          />\r\n          <span\r\n            className={classNames({\r\n              [styles.time]: true,\r\n              [styles.right]: true\r\n            })}\r\n          >\r\n            {timeFormat(playingSong?.duration)}\r\n          </span>\r\n        </div>\r\n        <div className={styles.operations}>\r\n          <div\r\n            className={classNames({\r\n              'icon-left': true,\r\n              [styles.icon]: true,\r\n              [styles.leftIcon]: true\r\n            })}\r\n          >\r\n            <i\r\n              className={classNames({\r\n                'icon-sequence': playMode === PlayMode.Sequence,\r\n                'icon-loop': playMode === PlayMode.Loop,\r\n                'icon-random': playMode === PlayMode.Random\r\n              })}\r\n              onClick={onModeChange}\r\n            />\r\n          </div>\r\n          <div\r\n            className={classNames({\r\n              [styles.icon]: true,\r\n              [styles.leftIcon]: true\r\n            })}\r\n          >\r\n            <i className=\"icon-prev\" onClick={onPrevClick} />\r\n          </div>\r\n          <div\r\n            className={classNames({\r\n              [styles.icon]: true,\r\n              [styles.centerIcon]: true\r\n            })}\r\n          >\r\n            <i\r\n              className={classNames({\r\n                'icon-pause': isPlaying,\r\n                'icon-play': !isPlaying\r\n              })}\r\n              onClick={onPlayingToggle}\r\n            />\r\n          </div>\r\n          <div\r\n            className={classNames({\r\n              [styles.icon]: true,\r\n              [styles.rightIcon]: true\r\n            })}\r\n          >\r\n            <i className=\"icon-next\" onClick={onNextClick} />\r\n          </div>\r\n          <div\r\n            className={classNames({\r\n              [styles.icon]: true,\r\n              [styles.rightIcon]: true\r\n            })}\r\n          >\r\n            <i\r\n              className={classNames({\r\n                'icon-favorite': false,\r\n                'icon-not-favorite': true\r\n              })}\r\n            />\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FullScreenPlayer;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport styles from './index.module.scss';\r\n\r\ninterface ProgressCircleProps {\r\n  className?: string;\r\n  radius?: number;\r\n  percent?: number;\r\n}\r\n\r\nconst ProgressCircle: React.FC<ProgressCircleProps> = props => {\r\n  const { className = '', radius = 100, percent = 0, children } = props;\r\n\r\n  const dashArray = Math.PI * 100;\r\n  const dashOffset = (1 - percent) * dashArray;\r\n\r\n  return (\r\n    <div\r\n      className={classNames({\r\n        [styles.container]: true,\r\n        [className]: true\r\n      })}\r\n    >\r\n      <svg width={radius} height={radius} viewBox=\"0 0 100 100\" version=\"1.1\">\r\n        <circle\r\n          className={styles.background}\r\n          cx=\"50\"\r\n          cy=\"50\"\r\n          r=\"50\"\r\n          fill=\"transparent\"\r\n        />\r\n        <circle\r\n          className={styles.progress}\r\n          r=\"50\"\r\n          cx=\"50\"\r\n          cy=\"50\"\r\n          fill=\"transparent\"\r\n          strokeDasharray={dashArray}\r\n          strokeDashoffset={dashOffset}\r\n        />\r\n      </svg>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressCircle;\r\n","import React, { useEffect, useRef, MouseEvent } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport ProgressCircle from './ProgressCircle';\r\n\r\nimport { syncWrapperTransform } from '../common';\r\nimport { PlayingSong } from 'shared/domain/song/typings';\r\n\r\nimport styles from './index.module.scss';\r\n\r\ninterface MiniPlayerProps {\r\n  className?: string;\r\n  visible?: boolean; // 是否可见\r\n  percent?: number; // 播放进度\r\n  isPlaying?: boolean; // 是否播放中\r\n  playingSong?: PlayingSong; // 当前播放的歌曲\r\n  onPlayerClick?: () => void; // 点击整个播放器的回调\r\n  onPlayingToggle?: () => void; // 切换播放\r\n  onPlayListShow?: () => void; // 点击列表图标的回调\r\n}\r\n\r\nconst MiniPlayer: React.FC<MiniPlayerProps> = props => {\r\n  const {\r\n    className = '',\r\n    visible,\r\n    percent,\r\n    isPlaying,\r\n    playingSong,\r\n    onPlayerClick,\r\n    onPlayingToggle,\r\n    onPlayListShow\r\n  } = props;\r\n\r\n  const cdWrapperRef = useRef<HTMLDivElement>(null);\r\n  const cdImageRef = useRef<HTMLImageElement>(null);\r\n\r\n  const clickPlayIcon = (e: MouseEvent<HTMLElement>) => {\r\n    e.stopPropagation(); // 阻止触发 onPlayerClick\r\n    onPlayingToggle && onPlayingToggle();\r\n  };\r\n\r\n  const clickListIcon = (e: MouseEvent<HTMLElement>) => {\r\n    e.stopPropagation(); // 阻止触发 onPlayerClick\r\n    onPlayListShow && onPlayListShow();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isPlaying && cdWrapperRef.current && cdImageRef.current) {\r\n      syncWrapperTransform(cdWrapperRef.current, cdImageRef.current);\r\n    }\r\n  }, [isPlaying, cdWrapperRef, cdImageRef]);\r\n\r\n  return (\r\n    <div\r\n      className={classNames({\r\n        [styles.container]: true,\r\n        [styles.visible]: visible,\r\n        [className]: true\r\n      })}\r\n      onClick={onPlayerClick}\r\n    >\r\n      <div className={styles.cd}>\r\n        <div className={styles.cdImageWrapper} ref={cdWrapperRef}>\r\n          <img\r\n            className={classNames({\r\n              [styles.cdImage]: true,\r\n              [styles.playing]: isPlaying\r\n            })}\r\n            width=\"40\"\r\n            height=\"40\"\r\n            src={playingSong?.image}\r\n            alt={playingSong?.songName}\r\n            ref={cdImageRef}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={styles.text}>\r\n        <span className={styles.name}>{playingSong?.songName}</span>\r\n        <span className={styles.desc}>{playingSong?.singerName}</span>\r\n      </div>\r\n      <div className={styles.control}>\r\n        <ProgressCircle percent={percent} radius={32}>\r\n          <i\r\n            className={classNames({\r\n              [styles.playIcon]: true,\r\n              'icon-pause-mini': isPlaying,\r\n              'icon-play-mini': !isPlaying\r\n            })}\r\n            onClick={clickPlayIcon}\r\n          />\r\n        </ProgressCircle>\r\n      </div>\r\n      <div className={styles.control}>\r\n        <i\r\n          className={classNames({\r\n            [styles.listIcon]: true,\r\n            'icon-playlist': true\r\n          })}\r\n          onClick={clickListIcon}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MiniPlayer;\r\n","import React, { MouseEvent } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport { PlayMode } from 'shared/typings';\r\nimport { PlayerSong } from 'shared/domain/song/typings';\r\n\r\nimport styles from './index.module.scss';\r\n\r\ninterface Song extends PlayerSong {\r\n  isFavorite: boolean;\r\n}\r\n\r\ninterface PlayListModalProps {\r\n  className?: string;\r\n  visible?: boolean; // 是否可见\r\n  playMode?: PlayMode; // 播放模式\r\n  playList?: Song[]; // 播放列表\r\n  playingSongId?: string; // 当前播放歌曲 id\r\n  onClose?: () => void; // 关闭回调\r\n  onSelect?: (song: Song) => void; // 选择歌曲回调\r\n  onFavoriteSave?: (song: Song) => void; // 反选歌曲收藏回调\r\n  onFavoriteDelete?: (song: Song) => void;\r\n  onRemove?: (song: Song) => void; // 移除歌曲回调\r\n  onClear?: () => void; // 清空播放列表回调\r\n}\r\n\r\nconst playModeDescMap = {\r\n  [PlayMode.Sequence]: '顺序播放',\r\n  [PlayMode.Random]: '随机播放',\r\n  [PlayMode.Loop]: '单曲循环'\r\n};\r\n\r\nconst PlayListModal: React.FC<PlayListModalProps> = props => {\r\n  const {\r\n    className = '',\r\n    visible,\r\n    playMode,\r\n    playList = [],\r\n    playingSongId,\r\n    onClose,\r\n    onSelect,\r\n    onFavoriteSave,\r\n    onFavoriteDelete,\r\n    onRemove,\r\n    onClear\r\n  } = props;\r\n\r\n  const stopPropagation = (e: MouseEvent<HTMLElement>) => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const selectSong = (song: Song) => () => {\r\n    onSelect && onSelect(song);\r\n  };\r\n\r\n  const toggleFavorite = (song: Song) => (e: MouseEvent<HTMLElement>) => {\r\n    e.stopPropagation();\r\n    if (song.isFavorite) {\r\n      onFavoriteDelete && onFavoriteDelete(song);\r\n    } else {\r\n      onFavoriteSave && onFavoriteSave(song);\r\n    }\r\n  };\r\n\r\n  const removeSong = (song: Song) => (e: MouseEvent<HTMLElement>) => {\r\n    e.stopPropagation();\r\n    onRemove && onRemove(song);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={classNames({\r\n        [styles.container]: true,\r\n        [className]: true,\r\n        [styles.visible]: visible\r\n      })}\r\n      onClick={onClose}\r\n    >\r\n      <div className={styles.body} onClick={stopPropagation}>\r\n        <div className={styles.header}>\r\n          <i\r\n            className={classNames({\r\n              [styles.modeIcon]: true,\r\n              'icon-sequence': playMode === PlayMode.Sequence,\r\n              'icon-loop': playMode === PlayMode.Loop,\r\n              'icon-random': playMode === PlayMode.Random\r\n            })}\r\n          />\r\n          <span className={styles.modeText}>\r\n            {playMode ? playModeDescMap[playMode] : ''}\r\n          </span>\r\n          <span className={styles.clear} onClick={onClear}>\r\n            <i\r\n              className={classNames({\r\n                'icon-clear': true,\r\n                [styles.clearIcon]: true\r\n              })}\r\n            />\r\n          </span>\r\n        </div>\r\n        <ul className={styles.list}>\r\n          {playList.map(song => (\r\n            <li\r\n              key={song.songId}\r\n              className={styles.item}\r\n              onClick={selectSong(song)}\r\n            >\r\n              <i\r\n                className={classNames({\r\n                  [styles.current]: true,\r\n                  'icon-play': song.songId === playingSongId\r\n                })}\r\n              />\r\n              <span className={styles.songName}>{song.songName}</span>\r\n              <span className={styles.like} onClick={toggleFavorite(song)}>\r\n                <i\r\n                  className={classNames({\r\n                    'icon-favorite': song.isFavorite,\r\n                    'icon-not-favorite': !song.isFavorite\r\n                  })}\r\n                />\r\n              </span>\r\n              <span className={styles.delete} onClick={removeSong(song)}>\r\n                <i className=\"icon-delete\" />\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <span className={styles.close} onClick={onClose}>\r\n          关闭\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayListModal;\r\n","import React, { MouseEvent } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport styles from './index.module.scss';\r\n\r\ninterface ConfirmProps {\r\n  className?: string;\r\n  visible?: boolean;\r\n  maskClosable?: boolean;\r\n  content?: React.ReactNode;\r\n  confirmText?: string;\r\n  cancelText?: string;\r\n  onConfirm?: () => void;\r\n  onCancel?: () => void;\r\n}\r\n\r\nconst Confirm: React.FC<ConfirmProps> = props => {\r\n  const {\r\n    className = '',\r\n    visible,\r\n    maskClosable,\r\n    content,\r\n    confirmText = '确定',\r\n    cancelText = '取消',\r\n    onConfirm,\r\n    onCancel\r\n  } = props;\r\n\r\n  const onMaskClick = () => {\r\n    maskClosable && onConfirm && onConfirm();\r\n  };\r\n\r\n  const onFooterClick = (e: MouseEvent<HTMLDivElement>) => {\r\n    // 防止点击事件向 mask 层冒泡\r\n    e.stopPropagation();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={classNames({\r\n        [styles.mask]: true,\r\n        [className]: true,\r\n        [styles.visible]: visible\r\n      })}\r\n      onClick={onMaskClick}\r\n    >\r\n      <div className={styles.body}>\r\n        <div className={styles.content}>{content}</div>\r\n        <div className={styles.footer} onClick={onFooterClick}>\r\n          <span\r\n            className={classNames({\r\n              [styles.footerBtn]: true,\r\n              [styles.closeBtn]: true\r\n            })}\r\n            onClick={onCancel}\r\n          >\r\n            {cancelText}\r\n          </span>\r\n          <span className={styles.footerBtn} onClick={onConfirm}>\r\n            {confirmText}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Confirm;\r\n","/**\r\n * [ti:晴天]\r\n * [ar:周杰伦]\r\n * [al:叶惠美]\r\n * [by:]\r\n * [offset:0]\r\n * [00:00.00]晴天 - 周杰伦 (Jay Chou)\r\n * [00:07.34]词：周杰伦\r\n * [00:14.69]曲：周杰伦\r\n * [00:22.04]编曲：周杰伦\r\n * [00:29.39]故事的小黄花\r\n * [00:32.64]从出生那年就飘着\r\n * [00:36.19]童年的荡秋千\r\n * [00:39.93]随记忆一直晃到现在\r\n * [00:42.99]Re So So Si Do Si La\r\n * [00:46.11]So La Si Si Si Si La Si La So\r\n * [00:49.79]吹着前奏望着天空\r\n * [00:53.35]我想起花瓣试着掉落\r\n * [00:56.78]为你翘课的那一天\r\n * [00:59.03]花落的那一天\r\n * [01:00.65]教室的那一间\r\n * [01:02.21]我怎么看不见\r\n * [01:04.02]消失的下雨天\r\n * [01:05.71]我好想再淋一遍\r\n * [01:09.08]\r\n * [01:09.95]没想到失去的勇气我还留着\r\n * [01:15.01]\r\n * [01:16.13]好想再问一遍\r\n * [01:17.87]你会等待还是离开\r\n * [01:23.18]\r\n * [01:24.74]刮风这天我试过握着你手\r\n * [01:30.42]但偏偏雨渐渐大到我看你不见\r\n * [01:37.66]\r\n * [01:38.84]还要多久我才能在你身边\r\n * [01:44.65]\r\n * [01:45.40]等到放晴的那天也许我会比较好一点\r\n * [01:52.76]从前从前有个人爱你很久\r\n * [01:58.50]但偏偏风渐渐把距离吹得好远\r\n * [02:05.86]\r\n * [02:06.74]好不容易又能再多爱一天\r\n * [02:13.35]但故事的最后你好像还是说了拜拜\r\n * [02:21.46]\r\n * [02:35.00]为你翘课的那一天\r\n * [02:36.75]花落的那一天\r\n * [02:38.63]教室的那一间\r\n * [02:40.31]我怎么看不见\r\n * [02:42.05]消失的下雨天\r\n * [02:43.74]我好想再淋一遍\r\n * [02:46.99]\r\n * [02:47.98]没想到失去的勇气我还留着\r\n * [02:53.60]\r\n * [02:54.53]好想再问一遍\r\n * [02:55.97]你会等待还是离开\r\n * [03:01.77]\r\n * [03:02.77]刮风这天我试过握着你手\r\n * [03:08.45]但偏偏雨渐渐大到我看你不见\r\n * [03:15.94]\r\n * [03:16.87]还要多久我才能在你身边\r\n * [03:23.49]等到放晴的那天也许我会比较好一点\r\n * [03:30.91]从前从前有个人爱你很久\r\n * [03:37.03]偏偏风渐渐把距离吹得好远\r\n * [03:43.89]\r\n * [03:44.77]好不容易又能再多爱一天\r\n * [03:50.38]\r\n * [03:51.07]但故事的最后你好像还是说了拜拜\r\n * [03:59.62]刮风这天我试过握着你手\r\n * [04:02.05]但偏偏雨渐渐大到我看你不见\r\n * [04:05.44]还要多久我才能够在你身边\r\n * [04:08.99]等到放晴那天也许我会比较好一点\r\n * [04:12.86]从前从前有个人爱你很久\r\n * [04:15.86]但偏偏雨渐渐把距离吹得好远\r\n * [04:19.29]好不容易又能再多爱一天\r\n * [04:22.79]但故事的最后你好像还是说了拜\r\n */\r\n\r\n// 源码：https://github.com/ustbhuangyi/lyric-parser\r\n\r\ntype PlayState = 'PLAYING' | 'PAUSE';\r\ntype LyricHandler = (data: { lineNum: number; lyricText: string }) => void;\r\n\r\n/**\r\n * 对于每行歌词，匹配结果是四个：整行歌词，分，秒，毫秒\r\n * 要点：() 是分组符，把项目拆分成若干个单元\r\n */\r\nconst timeExp = /\\[(\\d{2,}):(\\d{2})(?:\\.(\\d{2,3}))?]/g;\r\n\r\nconst tagRegMap: { [key: string]: string } = {\r\n  // 根据例子可知，[] 中除了时间还有特殊标签\r\n  title: 'ti',\r\n  artist: 'ar',\r\n  album: 'al',\r\n  offset: 'offset',\r\n  by: 'by'\r\n};\r\n\r\nconst noop = () => undefined; // dummy 函数\r\n\r\nclass LyricParser {\r\n  private lyric: string; // 所有歌词\r\n  private tags: { [key: string]: string }; // 映射标签与标签内容，{ ti: '晴天' }\r\n  private lines: { time: number; lyricText: string }[]; // 我们需要的结构\r\n  private handler: LyricHandler; // 用户定义的事件回调函数\r\n  private state: PlayState; // 播放状态\r\n  private curNum!: number; // 当前的播放歌词的索引\r\n  private startStamp!: number; // 播放第一句歌词时的绝对时间\r\n  private pauseStamp!: number; // 暂停播放时的绝对时间\r\n  private timer!: NodeJS.Timeout;\r\n\r\n  constructor(lyric: string, handler: LyricHandler = noop) {\r\n    this.lyric = lyric;\r\n    this.tags = {};\r\n    this.lines = [];\r\n    this.handler = handler;\r\n    this.state = 'PAUSE';\r\n    this.init();\r\n  }\r\n\r\n  /**\r\n   * 播放歌词\r\n   *\r\n   * @param {number} startTime 开始播放时间（相对第一句歌词）\r\n   * @param {boolean} skipLast 是否跳过播放上一句歌词\r\n   * @returns {void}\r\n   */\r\n  public play(startTime: number = 0, skipLast?: boolean): void {\r\n    if (!this.lines.length) {\r\n      return;\r\n    }\r\n    this.state = 'PLAYING';\r\n    this.curNum = this.findCurNum(startTime);\r\n    // 由于 startTime 是相对时间，那么 startStamp 指的是播放第一句歌词的绝对时间戳\r\n    this.startStamp = +new Date() - startTime;\r\n    if (!skipLast) {\r\n      this.callHandler(this.curNum - 1);\r\n    }\r\n    if (this.curNum < this.lines.length) {\r\n      clearTimeout(this.timer);\r\n      this.playRest();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 切换播放状态\r\n   */\r\n  public togglePlay(): void {\r\n    const now = +new Date();\r\n    if (this.state === 'PLAYING') {\r\n      this.stop();\r\n      this.pauseStamp = now;\r\n    } else {\r\n      this.state = 'PLAYING';\r\n      this.play((this.pauseStamp || now) - (this.startStamp || now), true);\r\n      this.pauseStamp = 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 暂停播放\r\n   */\r\n  public stop(): void {\r\n    this.state = 'PAUSE';\r\n    clearTimeout(this.timer);\r\n  }\r\n\r\n  /**\r\n   * 跳至第 offset 行歌词\r\n   *\r\n   * @param {number} offset\r\n   * @returns {void}\r\n   */\r\n  public seek(offset: number = 0): void {\r\n    this.play(offset);\r\n  }\r\n\r\n  private init(): void {\r\n    this.initTag();\r\n    this.initLines();\r\n  }\r\n\r\n  private initTag(): void {\r\n    for (const tag in tagRegMap) {\r\n      if (tagRegMap.hasOwnProperty(tag)) {\r\n        // 寻找整个歌词字符串中每个标签对应的内容\r\n        const matches = this.lyric.match(\r\n          new RegExp(`\\\\[${tagRegMap[tag]}:([^\\\\]]*)]`, 'i')\r\n        );\r\n        this.tags[tag] = (matches && matches[1]) || '';\r\n      }\r\n    }\r\n  }\r\n\r\n  private initLines(): void {\r\n    const lines = this.lyric.split('\\n');\r\n    for (const line of lines) {\r\n      const result = timeExp.exec(line);\r\n      if (result) {\r\n        const lyricText = line.replace(timeExp, '').trim();\r\n        if (lyricText) {\r\n          this.lines.push({\r\n            time:\r\n              +result[1] * 60 * 1000 +\r\n              +result[2] * 1000 +\r\n              (+result[3] || 0) * 10,\r\n            lyricText\r\n          });\r\n        }\r\n      }\r\n    }\r\n    this.lines.sort((a, b) => {\r\n      // 按时间升序排序\r\n      return a.time - b.time;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 根据时间点返回相应的歌词索引\r\n   *\r\n   * @param {number} time 相对第一句歌词的时间\r\n   * @returns {number}\r\n   */\r\n  private findCurNum(time: number): number {\r\n    for (let i = 0; i < this.lines.length; i++) {\r\n      if (time <= this.lines[i].time) {\r\n        return i;\r\n      }\r\n    }\r\n    return this.lines.length - 1;\r\n  }\r\n\r\n  /**\r\n   * 调用用户传入的事件函数\r\n   *\r\n   * @param {number} i 当前歌词索引\r\n   * @returns {void}\r\n   */\r\n  private callHandler(i: number): void {\r\n    if (i < 0) {\r\n      return;\r\n    }\r\n    this.handler({ lineNum: i, lyricText: this.lines[i].lyricText });\r\n  }\r\n\r\n  private playRest(): void {\r\n    const line = this.lines[this.curNum];\r\n    const delay = line.time - (+new Date() - this.startStamp);\r\n    this.timer = setTimeout(() => {\r\n      this.callHandler(this.curNum++);\r\n      if (this.curNum < this.lines.length && this.state === 'PLAYING') {\r\n        this.playRest();\r\n      }\r\n    }, delay);\r\n  }\r\n}\r\n\r\nexport default LyricParser;\r\n","import React, { useState, useEffect, useMemo, useRef } from 'react';\r\n\r\nimport Container from 'shared/container';\r\n\r\nimport FullScreenPlayer from './FullScreenPlayer';\r\nimport MiniPlayer from './MiniPlayer';\r\nimport PlayListModal from './PlayListModal';\r\nimport Confirm from 'shared/components/Confirm';\r\n\r\nimport LyricParser from 'shared/lyric-parser';\r\n\r\nimport { PlayMode } from 'shared/typings';\r\n\r\nimport message from 'shared/lib/message';\r\n\r\nimport styles from './index.module.scss';\r\n\r\nconst Player: React.FC = () => {\r\n  const {\r\n    isPlaying,\r\n    playMode,\r\n    setPlayMode,\r\n    playList,\r\n    songIndex,\r\n    setSongIndex,\r\n    setIsPlaying,\r\n    playingSong,\r\n    isPlayerFullScreen,\r\n    setIsPlayerFullScreen,\r\n    clearPlayList,\r\n    favoriteList,\r\n    saveFavorite,\r\n    deleteFavorite\r\n  } = Container.useContainer();\r\n  const [isConfirmVisible, setIsConfirmVisible] = useState(false);\r\n  const [isPlayListVisible, setIsPlayListVisible] = useState(false);\r\n  const [isAudioReady, setIsAudioReady] = useState(false);\r\n  const [lyricParser, setLyricParser] = useState<LyricParser>();\r\n  const [playingLyric, setPlayingLyric] = useState<string>();\r\n  const audioRef = useRef<HTMLAudioElement>(null);\r\n\r\n  const [currentPlayingTime, setCurrentPlayingTime] = useState(0);\r\n\r\n  const currentPercent = playingSong\r\n    ? currentPlayingTime / playingSong.duration\r\n    : 0;\r\n\r\n  const onFullScreenPlayerBack = () => {\r\n    setIsPlayerFullScreen(false);\r\n  };\r\n\r\n  const onMiniPlayerClick = () => {\r\n    setIsPlayerFullScreen(true);\r\n  };\r\n\r\n  const togglePlaying = () => {\r\n    setIsPlaying(prev => !prev);\r\n  };\r\n\r\n  const updatePlayingTime = (e: any) => {\r\n    // 这里没办法，只能用 any\r\n    setCurrentPlayingTime(e.target.currentTime);\r\n  };\r\n\r\n  const onPercentChange = (percent: number) => {\r\n    const time = (playingSong?.duration || 0) * percent;\r\n    if (audioRef.current) {\r\n      audioRef.current.currentTime = time;\r\n    }\r\n    if (!isPlaying) {\r\n      togglePlaying();\r\n    }\r\n    if (lyricParser) {\r\n      lyricParser.seek(time * 1000);\r\n    }\r\n  };\r\n\r\n  const onAudioReady = () => {\r\n    setIsAudioReady(true);\r\n  };\r\n\r\n  const handleAudioError = () => {\r\n    message.error('播放出错');\r\n  };\r\n\r\n  const loop = () => {\r\n    if (audioRef.current) {\r\n      audioRef.current.currentTime = 0;\r\n      audioRef.current.play();\r\n    }\r\n    if (lyricParser) {\r\n      lyricParser.seek();\r\n    }\r\n  };\r\n\r\n  const next = () => {\r\n    const listLength = playList.length;\r\n    if (listLength === 1) {\r\n      loop();\r\n    } else {\r\n      const nextIndex = (songIndex + 1) % listLength;\r\n      setSongIndex(nextIndex);\r\n      if (!isPlaying) {\r\n        togglePlaying();\r\n      }\r\n    }\r\n  };\r\n\r\n  const playingCompleted = () => {\r\n    if (playMode === PlayMode.Loop) {\r\n      loop();\r\n    } else {\r\n      next();\r\n    }\r\n  };\r\n\r\n  const handleLyric = (data: { lineNum: number; lyricText: string }) => {\r\n    setPlayingLyric(data.lyricText);\r\n  };\r\n\r\n  const playPrevSong = () => {\r\n    if (!isAudioReady) {\r\n      return;\r\n    }\r\n    if (playList.length === 1) {\r\n      loop();\r\n    } else {\r\n      setSongIndex(prev => {\r\n        let nextIndex = (prev - 1) % playList.length;\r\n        if (nextIndex === -1) {\r\n          nextIndex = playList.length - 1;\r\n        }\r\n        return nextIndex;\r\n      });\r\n      if (!isPlaying) {\r\n        togglePlaying();\r\n      }\r\n    }\r\n  };\r\n\r\n  const playNextSong = () => {\r\n    if (!isAudioReady) {\r\n      return;\r\n    }\r\n    if (playList.length === 1) {\r\n      loop();\r\n    } else {\r\n      setSongIndex(prev => (prev + 1) % playList.length);\r\n      if (!isPlaying) {\r\n        togglePlaying();\r\n      }\r\n    }\r\n  };\r\n\r\n  const confirmClear = () => {\r\n    clearPlayList();\r\n    setIsConfirmVisible(false);\r\n    setIsPlayListVisible(false);\r\n  };\r\n\r\n  const playListWithFavorite = useMemo(\r\n    () =>\r\n      playList.map(song => ({\r\n        ...song,\r\n        isFavorite: !!favoriteList.find(item => item.songId === song.songId)\r\n      })),\r\n    [playList, favoriteList]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setCurrentPlayingTime(0);\r\n    setIsAudioReady(false);\r\n    if (playingSong) {\r\n      setLyricParser(prev => {\r\n        prev && prev.stop();\r\n        return new LyricParser(playingSong.lyric, handleLyric);\r\n      });\r\n    }\r\n  }, [playingSong]);\r\n\r\n  useEffect(() => {\r\n    if (lyricParser) {\r\n      lyricParser.togglePlay();\r\n    }\r\n  }, [lyricParser, isPlaying]);\r\n\r\n  useEffect(() => {\r\n    if (audioRef.current) {\r\n      if (isPlaying && isAudioReady) {\r\n        audioRef.current.play();\r\n      } else if (isAudioReady) {\r\n        audioRef.current.pause();\r\n      }\r\n    }\r\n  }, [isPlaying, isAudioReady]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <FullScreenPlayer\r\n        visible={isPlayerFullScreen}\r\n        lyric={playingLyric}\r\n        playMode={playMode}\r\n        currentTime={currentPlayingTime}\r\n        isPlaying={isPlaying}\r\n        playingSong={playingSong}\r\n        onBack={onFullScreenPlayerBack}\r\n        onPlayingToggle={togglePlaying}\r\n        onPercentChange={onPercentChange}\r\n        onPlayModeChange={setPlayMode}\r\n        onPrevClick={playPrevSong}\r\n        onNextClick={playNextSong}\r\n      />\r\n      <MiniPlayer\r\n        visible={!isPlayerFullScreen && !!playingSong}\r\n        isPlaying={isPlaying}\r\n        percent={currentPercent}\r\n        playingSong={playingSong}\r\n        onPlayingToggle={togglePlaying}\r\n        onPlayerClick={onMiniPlayerClick}\r\n        onPlayListShow={() => setIsPlayListVisible(true)}\r\n      />\r\n      <PlayListModal\r\n        visible={isPlayListVisible}\r\n        playMode={playMode}\r\n        playList={playListWithFavorite}\r\n        playingSongId={playingSong?.songId}\r\n        onClose={() => setIsPlayListVisible(false)}\r\n        onClear={() => setIsConfirmVisible(true)}\r\n        onFavoriteSave={saveFavorite}\r\n        onFavoriteDelete={deleteFavorite}\r\n      />\r\n      <Confirm\r\n        visible={isConfirmVisible}\r\n        content=\"是否清空播放列表\"\r\n        confirmText=\"清空\"\r\n        onCancel={() => setIsConfirmVisible(false)}\r\n        onConfirm={confirmClear}\r\n      />\r\n      <audio\r\n        ref={audioRef}\r\n        src={playingSong?.playUrl}\r\n        onCanPlay={onAudioReady}\r\n        onTimeUpdate={updatePlayingTime}\r\n        onEnded={playingCompleted}\r\n        onError={handleAudioError}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nimport Container from 'shared/container';\r\n\r\nimport SongUsecase from 'shared/domain/song';\r\nimport { FulfilledRecommendSong } from 'shared/domain/song/typings';\r\n\r\nimport message from 'shared/lib/message';\r\n\r\nimport styles from './index.module.scss';\r\n\r\nconst Recommend: React.FC<RouteComponentProps> = props => {\r\n  const { addAndPlaySong } = Container.useContainer();\r\n  const [recommendList, setRecommendList] = useState<FulfilledRecommendSong[]>(\r\n    []\r\n  );\r\n\r\n  const getRecommendList = async () => {\r\n    try {\r\n      const result = await SongUsecase.getRecommendList();\r\n      setRecommendList(result);\r\n    } catch (e) {\r\n      message.error(e.message);\r\n    }\r\n  };\r\n\r\n  const selectSong = (song: FulfilledRecommendSong) => () => {\r\n    addAndPlaySong({\r\n      songId: song.songId,\r\n      songName: song.songName,\r\n      singerName: song.singerName,\r\n      image: song.hugeSongPic\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getRecommendList();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.content}>\r\n        <h1 className={styles.listTitle}>热门歌单推荐</h1>\r\n        <ul>\r\n          {recommendList.map(item => (\r\n            <li\r\n              key={item.songId}\r\n              className={styles.item}\r\n              onClick={selectSong(item)}\r\n            >\r\n              <div className={styles.icon}>\r\n                <img\r\n                  src={item.smallSongPic}\r\n                  width=\"60\"\r\n                  height=\"60\"\r\n                  alt={item.songName}\r\n                />\r\n              </div>\r\n              <div className={styles.text}>\r\n                <h2 className={styles.name}>{item.singerName}</h2>\r\n                <span className={styles.desc}>{item.songName}</span>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recommend;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nimport SongUsecase from 'shared/domain/song';\r\nimport { FulfilledSinger } from 'shared/domain/song/typings';\r\nimport { LOCAL_PATHS } from 'shared/constants';\r\n\r\nimport message from 'shared/lib/message';\r\n\r\nimport styles from './index.module.scss';\r\n\r\nconst SingerList: React.FC<RouteComponentProps> = props => {\r\n  const [singerList, setSingerList] = useState<FulfilledSinger[]>([]);\r\n\r\n  const searchSingerList = async () => {\r\n    try {\r\n      const result = await SongUsecase.searchSingerList('c');\r\n      setSingerList(result);\r\n    } catch (e) {\r\n      message.error(e.message);\r\n    }\r\n  };\r\n\r\n  const onSingerClick = (singer: FulfilledSinger) => () => {\r\n    props.history.push(\r\n      LOCAL_PATHS.singer.detail.getPathByParams(singer.singerId)\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    searchSingerList();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <ul className={styles.list}>\r\n        {singerList.map(singer => (\r\n          <li\r\n            key={singer.singerId}\r\n            className={styles.item}\r\n            onClick={onSingerClick(singer)}\r\n          >\r\n            <img\r\n              src={singer.singerPic}\r\n              alt={singer.singerName}\r\n              className={styles.avatar}\r\n            />\r\n            <span className={styles.name}>{singer.singerName}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingerList;\r\n","import { useState, useCallback } from 'react';\r\n\r\nconst useAsyncTask = <T extends any[], U>(\r\n  task: (...args: T) => Promise<U>\r\n): [(...args: T) => Promise<U>, boolean, boolean] => {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [isPending, setIsPending] = useState(false);\r\n\r\n  const finalTask = useCallback(\r\n    async (...args: T) => {\r\n      setIsPending(true);\r\n      const result = await task(...args);\r\n      setIsLoaded(true);\r\n      setIsPending(false);\r\n      return result;\r\n    },\r\n    [task]\r\n  );\r\n\r\n  return [finalTask, isLoaded, isPending];\r\n};\r\n\r\nexport default useAsyncTask;\r\n","import {\r\n  RollApiPaginationQuery,\r\n  RollApiPaginationResult\r\n} from 'shared/typings';\r\nimport { StrategyParams, FetcherStategy } from '../typings';\r\n\r\nclass RollStrategy implements FetcherStategy {\r\n  public async fetch<T, U>(params: StrategyParams<T>) {\r\n    const { fetcher, pageNo, queryData } = params;\r\n    const rollFetcher = fetcher as (\r\n      query: RollApiPaginationQuery<T>\r\n    ) => Promise<RollApiPaginationResult<U[]>>;\r\n    const result = await rollFetcher({\r\n      ...queryData,\r\n      page: pageNo\r\n    } as RollApiPaginationQuery<T>);\r\n\r\n    return result.list;\r\n  }\r\n}\r\n\r\nfunction createStrategy() {\r\n  return new RollStrategy();\r\n}\r\n\r\nexport default createStrategy();\r\n","import rollStrategy from './roll';\r\n\r\nconst getFetcherStrategy = (type: 'ROLL') => {\r\n  return rollStrategy;\r\n};\r\n\r\nexport default getFetcherStrategy;\r\n","import { useState, useEffect, useRef } from 'react';\r\n\r\nimport useAsyncTask from '../useAsyncTask';\r\nimport getFetcherStrategy from './fetcher-strategies';\r\n\r\nimport { Option } from './typings';\r\n\r\n/**\r\n * 依赖图：\r\n *\r\n *         disabled (可能由 query 影响)\r\n *       /                             \\\r\n * query ------------------------------- task\r\n *       \\                             /\r\n *                    page\r\n *\r\n * 解释：\r\n *\r\n * 1. query 变化，需要重置 page\r\n * 2. disabled 可能由 query 决定，也可能由其他因素决定\r\n * 3. 只有 page 与 disabled 稳定后，才能执行 task\r\n * 4. 为何一开始设置 page 为 undefined？因为监听 query 时会设置\r\n *    一开始就设置了，那加上 useEffect query 就设两次了，task 就会被执行两次\r\n *    执行 task 之前先判断 page 是否 undefined，就可以避免多余的一次执行\r\n * 5. 为何 disabled 要设为状态，而不用 option 的？\r\n *    有的场景是 query 影响 disabled 与 page 的，所以如果直接用 disabled\r\n *    那么 useEffect 监听 disabled 时，page 还没重设，就会出现问题\r\n *    为何不用 ref，因为无法保证：\r\n *    query -> setPage 的 useEffect 会比 disabled -> task 的 useEffect 先执行\r\n */\r\nconst usePagination = <T, U>(option: Option<T, U>) => {\r\n  const {\r\n    type,\r\n    fetcher,\r\n    pageSize = 10,\r\n    query,\r\n    initialPageNo = 1,\r\n    defaultValue = [],\r\n    onError,\r\n    disabled = false\r\n  } = option || {};\r\n  const [isDisabled, setIsDisabled] = useState(disabled);\r\n  const [page, setPage] = useState<{ pageNo: number; pageSize: number }>();\r\n  const [data, setData] = useState(defaultValue);\r\n  const dataRef = useRef(defaultValue);\r\n  dataRef.current = data;\r\n\r\n  const hasMore = page ? data.length >= pageSize * page.pageNo : true;\r\n\r\n  const task = async (option: {\r\n    pageNo: number;\r\n    pageSize: number;\r\n    queryData?: T;\r\n    isRefetch?: boolean;\r\n  }) => {\r\n    const { pageNo, pageSize, queryData, isRefetch } = option;\r\n    try {\r\n      // 根据 type 获取对应 fetcher 策略\r\n      const strategy = getFetcherStrategy(type);\r\n      const result = await strategy.fetch<T, U>({\r\n        fetcher,\r\n        pageNo,\r\n        pageSize,\r\n        queryData\r\n      });\r\n      const fulfilledResult = result || [];\r\n      // 具体 setData 策略\r\n      const curData = dataRef.current;\r\n      if (!isRefetch) {\r\n        const shouldReset = pageNo === initialPageNo;\r\n        setData(\r\n          shouldReset ? fulfilledResult : curData.concat(fulfilledResult)\r\n        );\r\n      } else {\r\n        const previousPageData = curData.slice(0, (pageNo - 1) * pageSize);\r\n        const nextPageData = curData.slice(pageNo * pageSize);\r\n        setData([...previousPageData, ...fulfilledResult, ...nextPageData]);\r\n      }\r\n    } catch (e) {\r\n      if (onError) {\r\n        onError(e);\r\n      } else {\r\n        throw e;\r\n      }\r\n    }\r\n  };\r\n\r\n  const loadMore = () => {\r\n    if (!isDisabled && hasMore) {\r\n      setPage(prev => ({\r\n        pageSize,\r\n        pageNo: prev ? prev.pageNo + 1 : initialPageNo\r\n      }));\r\n    }\r\n  };\r\n\r\n  const [finalTask, isLoaded, isPending] = useAsyncTask(task);\r\n\r\n  const refetchTask = async (pageNo: number) => {\r\n    if (isDisabled || !page || initialPageNo > pageNo || pageNo > page.pageNo) {\r\n      return;\r\n    }\r\n    finalTask({\r\n      pageNo,\r\n      pageSize: page.pageSize,\r\n      queryData: query,\r\n      isRefetch: true\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsDisabled(disabled);\r\n  }, [disabled]);\r\n\r\n  useEffect(() => {\r\n    setPage({ pageSize, pageNo: initialPageNo });\r\n  }, [query, initialPageNo, pageSize]);\r\n\r\n  useEffect(() => {\r\n    if (!isDisabled && page) {\r\n      finalTask({\r\n        pageNo: page.pageNo,\r\n        pageSize: page.pageSize,\r\n        queryData: query\r\n      });\r\n    }\r\n  }, [page, isDisabled]);\r\n\r\n  return {\r\n    data,\r\n    refetch: refetchTask,\r\n    hasMore,\r\n    loadMore,\r\n    isLoaded,\r\n    isPending\r\n  };\r\n};\r\n\r\nexport default usePagination;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport { FulfilledSingerSong } from 'shared/domain/song/typings';\r\n\r\nimport styles from './index.module.scss';\r\n\r\ninterface SongListProps {\r\n  className?: string;\r\n  songList?: FulfilledSingerSong[];\r\n  onSongSelect?: (song: FulfilledSingerSong, index: number) => void;\r\n}\r\n\r\nconst SongList: React.FC<SongListProps> = props => {\r\n  const { className = '', songList, onSongSelect } = props;\r\n\r\n  const onSelect = (song: FulfilledSingerSong, index: number) => () => {\r\n    onSongSelect && onSongSelect(song, index);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={classNames({\r\n        [styles.container]: true,\r\n        [className]: true\r\n      })}\r\n    >\r\n      <ul>\r\n        {songList?.map((song, index) => (\r\n          <li\r\n            key={song.songId}\r\n            className={styles.item}\r\n            onClick={onSelect(song, index)}\r\n          >\r\n            <div className={styles.rank}>\r\n              <span className={styles.text}>{index + 1}</span>\r\n            </div>\r\n            <div className={styles.content}>\r\n              <h2 className={styles.name}>{song.songName}</h2>\r\n              <span className={styles.desc}>{song.singerName}</span>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SongList;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport SongList from 'shared/components/SongList';\r\nimport { FulfilledSingerSong } from 'shared/domain/song/typings';\r\n\r\nimport styles from './index.module.scss';\r\n\r\ninterface MusicListProps {\r\n  className?: string;\r\n  title?: string;\r\n  cover?: string;\r\n  songList?: FulfilledSingerSong[];\r\n  onBack?: () => void;\r\n  onRandomPlay?: () => void;\r\n  onSongSelect?: (song: FulfilledSingerSong, index: number) => void;\r\n}\r\n\r\nconst MusicList: React.FC<MusicListProps> = props => {\r\n  const {\r\n    className = '',\r\n    title,\r\n    cover,\r\n    songList,\r\n    onRandomPlay,\r\n    onSongSelect,\r\n    onBack\r\n  } = props;\r\n\r\n  return (\r\n    <div\r\n      className={classNames({\r\n        [styles.container]: true,\r\n        [className]: true\r\n      })}\r\n    >\r\n      <header className={styles.header}>\r\n        <i\r\n          className={classNames({\r\n            'icon-back': true,\r\n            [styles.backIcon]: true\r\n          })}\r\n          onClick={onBack}\r\n        />\r\n        <h1 className={styles.title}>{title}</h1>\r\n      </header>\r\n      <div\r\n        className={styles.cover}\r\n        style={{\r\n          backgroundImage: `url(${cover})`\r\n        }}\r\n      >\r\n        <div className={styles.mask}></div>\r\n        <div className={styles.playerWrapper}>\r\n          <div className={styles.play}>\r\n            <i\r\n              className={classNames({\r\n                'icon-play': true,\r\n                [styles.playIcon]: true\r\n              })}\r\n            />\r\n            <span className={styles.text} onClick={onRandomPlay}>\r\n              随机播放全部\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <SongList\r\n          className={styles.songListContainer}\r\n          songList={songList}\r\n          onSongSelect={onSongSelect}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MusicList;\r\n","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport InfiniteScroller from 'react-infinite-scroller';\r\n\r\nimport Container from 'shared/container';\r\nimport usePagination from 'shared/hooks/usePagination';\r\n\r\nimport SongUsecase from 'shared/domain/song';\r\nimport {\r\n  FulfilledSingerDetail,\r\n  FulfilledSingerSong\r\n} from 'shared/domain/song/typings';\r\nimport MusicList from 'shared/components/MusicList';\r\n\r\nimport message from 'shared/lib/message';\r\n\r\nimport styles from './index.module.scss';\r\n\r\ninterface RouteParams {\r\n  id?: string;\r\n}\r\n\r\nconst SingerDetail: React.FC<RouteComponentProps<RouteParams>> = props => {\r\n  const singerId = props.match.params.id;\r\n  const { addAndPlaySong } = Container.useContainer();\r\n\r\n  const [singer, setSinger] = useState<FulfilledSingerDetail>();\r\n\r\n  const query = useMemo(() => (singerId ? { singerId } : undefined), [\r\n    singerId\r\n  ]);\r\n\r\n  const { data: songList, loadMore, hasMore } = usePagination({\r\n    type: 'ROLL',\r\n    fetcher: SongUsecase.getSingerSongList,\r\n    query,\r\n    onError: e => message.error(e.message),\r\n    disabled: !singerId\r\n  });\r\n\r\n  const getSingerDetail = async (singerId: string) => {\r\n    try {\r\n      const result = await SongUsecase.getSingerDetail(singerId);\r\n      setSinger(result);\r\n    } catch (e) {\r\n      message.error(e.message);\r\n    }\r\n  };\r\n\r\n  const onBack = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  const onSongSelect = (song: FulfilledSingerSong) => {\r\n    addAndPlaySong({\r\n      singerName: song.singerName,\r\n      songId: song.songId,\r\n      songName: song.songName,\r\n      image: song.songPic\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (singerId) {\r\n      getSingerDetail(singerId);\r\n    }\r\n  }, [singerId]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <InfiniteScroller\r\n        loadMore={loadMore}\r\n        hasMore={hasMore}\r\n        initialLoad={false}\r\n        threshold={10}\r\n        useWindow={false}\r\n      >\r\n        <MusicList\r\n          title={singer && singer.singerName}\r\n          cover={singer && singer.avatar}\r\n          songList={songList}\r\n          onBack={onBack}\r\n          onSongSelect={onSongSelect}\r\n        />\r\n      </InfiniteScroller>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingerDetail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nimport SongUsecase from 'shared/domain/song';\r\nimport { FulfilledRank } from 'shared/domain/song/typings';\r\nimport { LOCAL_PATHS } from 'shared/constants';\r\n\r\nimport message from 'shared/lib/message';\r\n\r\nimport styles from './index.module.scss';\r\n\r\nconst RankList: React.FC<RouteComponentProps> = props => {\r\n  const [rankList, setRankList] = useState<FulfilledRank[]>([]);\r\n\r\n  const getRankList = async () => {\r\n    try {\r\n      const result = await SongUsecase.getRankList();\r\n      setRankList(result);\r\n    } catch (e) {\r\n      message.error(e.message);\r\n    }\r\n  };\r\n\r\n  const onRankClick = (rank: FulfilledRank) => () => {\r\n    props.history.push(LOCAL_PATHS.rank.detail.getPathByParams(rank.type));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getRankList();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.list}>\r\n        <ul>\r\n          {rankList.map(rank => (\r\n            <li\r\n              key={rank.type}\r\n              className={styles.item}\r\n              onClick={onRankClick(rank)}\r\n            >\r\n              <div className={styles.icon}>\r\n                <img\r\n                  width=\"100\"\r\n                  height=\"100\"\r\n                  src={rank.thirdPic}\r\n                  alt={rank.name}\r\n                />\r\n              </div>\r\n              <div className={styles.info}>\r\n                <span className={styles.name}>{rank.name}</span>\r\n                <span className={styles.comment}>{rank.comment}</span>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RankList;\r\n","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport InfiniteScroller from 'react-infinite-scroller';\r\n\r\nimport MusicList from 'shared/components/MusicList';\r\n\r\nimport SongUsecase from 'shared/domain/song';\r\n\r\nimport Container from 'shared/container';\r\nimport usePagination from 'shared/hooks/usePagination';\r\n\r\nimport message from 'shared/lib/message';\r\n\r\nimport { FulfilledRank, FulfilledSingerSong } from 'shared/domain/song/typings';\r\n\r\nimport styles from './index.module.scss';\r\n\r\ninterface RankDetailRouteParamProps {\r\n  type: string;\r\n}\r\n\r\nconst RankDetail: React.FC<RouteComponentProps<\r\n  RankDetailRouteParamProps\r\n>> = props => {\r\n  const rankType = Number(props.match.params.type);\r\n  const { addAndPlaySong } = Container.useContainer();\r\n  const [rank, setRank] = useState<FulfilledRank>();\r\n\r\n  const getRankList = async (rankType: number) => {\r\n    try {\r\n      const result = await SongUsecase.getRankList();\r\n      const matched = result.find(item => item.type === rankType);\r\n      setRank(matched);\r\n    } catch (e) {\r\n      message.error(e.message);\r\n    }\r\n  };\r\n\r\n  const query = useMemo(() => ({ type: rankType }), [rankType]);\r\n\r\n  const { data: songList, loadMore, hasMore } = usePagination({\r\n    type: 'ROLL',\r\n    fetcher: SongUsecase.getRankSongList,\r\n    query,\r\n    onError: e => message.error(e.message)\r\n  });\r\n\r\n  const onBack = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  const onSongSelect = (song: FulfilledSingerSong) => {\r\n    addAndPlaySong({\r\n      singerName: song.singerName,\r\n      songId: song.songId,\r\n      songName: song.songName,\r\n      image: song.songPic\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getRankList(rankType);\r\n  }, [rankType]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <InfiniteScroller\r\n        loadMore={loadMore}\r\n        hasMore={hasMore}\r\n        initialLoad={false}\r\n        threshold={10}\r\n        useWindow={false}\r\n      >\r\n        <MusicList\r\n          title={rank && rank.name}\r\n          cover={rank && rank.secondPic}\r\n          songList={songList}\r\n          onBack={onBack}\r\n          onSongSelect={onSongSelect}\r\n        />\r\n      </InfiniteScroller>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RankDetail;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport { LOCAL_PATHS } from 'shared/constants';\r\n\r\nimport Recommend from './Recommend';\r\nimport SingerList from './singer/List';\r\nimport SingerDetail from './singer/Detail';\r\nimport RankList from './rank/List';\r\nimport RankDetail from './rank/Detail';\r\n\r\nconst Routes: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Route\r\n        path={LOCAL_PATHS.recommend.routePath}\r\n        exact\r\n        component={Recommend}\r\n      />\r\n      <Route\r\n        path={LOCAL_PATHS.singer.list.routePath}\r\n        exact\r\n        component={SingerList}\r\n      />\r\n      <Route\r\n        path={LOCAL_PATHS.singer.detail.routePath}\r\n        exact\r\n        component={SingerDetail}\r\n      />\r\n      <Route\r\n        path={LOCAL_PATHS.rank.list.routePath}\r\n        exact\r\n        component={RankList}\r\n      />\r\n      <Route\r\n        path={LOCAL_PATHS.rank.detail.routePath}\r\n        exact\r\n        component={RankDetail}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from 'react-router-dom';\r\n\r\nimport Container from 'shared/container';\r\n\r\nimport Header from 'shared/components/Header';\r\nimport Tabs from 'shared/components/Tabs';\r\nimport Player from 'business/Player';\r\nimport Routes from 'pages/Routes';\r\n\r\nimport { LOCAL_PATHS, BASE_NAME } from 'shared/constants';\r\n\r\nimport 'assets/styles/reset.scss';\r\nimport 'assets/styles/base.scss';\r\nimport 'assets/styles/icon.scss';\r\n\r\nconst VConsole = require('vconsole/dist/vconsole.min.js');\r\nnew VConsole();\r\n\r\nconst App: React.FC = () => {\r\n  const tabs = [\r\n    { label: '推荐', path: LOCAL_PATHS.recommend.routePath },\r\n    { label: '歌手', path: LOCAL_PATHS.singer.list.routePath },\r\n    { label: '排行', path: LOCAL_PATHS.rank.list.routePath },\r\n    { label: '搜索', path: LOCAL_PATHS.search.routePath }\r\n  ];\r\n\r\n  return (\r\n    <Container.Provider>\r\n      <Header />\r\n      <Router basename={BASE_NAME}>\r\n        <Tabs tabs={tabs} />\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={() => <Redirect to={LOCAL_PATHS.recommend.routePath} />}\r\n          />\r\n          <Routes />\r\n        </Switch>\r\n      </Router>\r\n      <Player />\r\n    </Container.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}