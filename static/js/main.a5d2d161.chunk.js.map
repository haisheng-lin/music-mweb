{"version":3,"sources":["shared/components/MusicList/index.module.scss","shared/components/Confirm/index.module.scss","pages/Recommend/index.module.scss","shared/components/SongList/index.module.scss","pages/rank/List/index.module.scss","shared/components/Header/index.module.scss","business/Player/FullScreenPlayer/ProgressBar/index.module.scss","pages/singer/List/index.module.scss","shared/lib/message/styles.module.scss","shared/components/Tabs/index.module.scss","business/Player/MiniPlayer/ProgressCircle/index.module.scss","pages/singer/Detail/index.module.scss","pages/rank/Detail/index.module.scss","business/Player/FullScreenPlayer/index.module.scss","business/Player/PlayListModal/index.module.scss","business/Player/MiniPlayer/index.module.scss","shared/hooks/storage/useStorage.ts","shared/hooks/storage/useLocalStorage.ts","shared/typings/index.ts","shared/constants/local.ts","shared/request/http.ts","shared/request/index.ts","shared/constants/external.ts","shared/domain/song/repo.ts","shared/domain/song/index.ts","shared/domain/song/usecase.ts","shared/lib/message/MessageItem.tsx","shared/lib/message/Container.tsx","shared/lib/message/utils.ts","shared/lib/message/index.tsx","shared/container/index.ts","shared/utils/index.ts","shared/components/Header/index.tsx","shared/components/Tabs/index.tsx","business/Player/FullScreenPlayer/ProgressBar/index.tsx","business/Player/common.ts","business/Player/FullScreenPlayer/index.tsx","business/Player/MiniPlayer/ProgressCircle/index.tsx","business/Player/MiniPlayer/index.tsx","business/Player/PlayListModal/index.tsx","shared/components/Confirm/index.tsx","shared/lyric-parser/index.ts","business/Player/index.tsx","pages/Recommend/index.tsx","pages/singer/List/index.tsx","shared/hooks/useAsyncTask/index.ts","shared/hooks/usePagination/fetcher-strategies/roll.ts","shared/hooks/usePagination/fetcher-strategies/index.ts","shared/hooks/usePagination/index.ts","shared/components/SongList/index.tsx","shared/components/MusicList/index.tsx","pages/singer/Detail/index.tsx","pages/rank/List/index.tsx","pages/rank/Detail/index.tsx","pages/Routes.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","isFunction","obj","useStorage","storage","key","defaultValue","useState","getStoredValue","state","setState","raw","getItem","JSON","parse","value","removeItem","currentState","setItem","stringify","useLocalStorage","PlayMode","localStorage","LOCAL_PATHS","routePath","getPathByParams","list","detail","singerId","type","ResponseError","code","message","Error","request","defaults","interceptors","instance","this","Axios","create","timeout","use","cfg","err","Promise","reject","response","onFulfilled","res","onRejected","status","ret","success","data","url","head","params","config","get","handleResponse","delete","post","put","patch","promises","all","callback","spread","baseURL","API_DOMAIN","headers","common","app_id","process","app_secret","resData","responseType","result","msg","getRecommendList","getRankList","getRankSongList","query","searchSingerList","keyWord","getSingerDetail","getSingerSongList","searchSongList","getSongDetail","songId","getLyric","lyricLink","usecase","a","SongRepo","responseList","map","song","song_id","songName","title","ting_uid","singerPic","pic_singer","singerName","author","albumTitle","album_title","language","proxyCompany","si_proxycompany","info","hugeSongPic","pic_huge","bigSongPic","pic_big","premiumSongPic","pic_premium","smallSongPic","pic_small","publishTime","publishtime","name","comment","firstPic","pic_s192","secondPic","pic_s444","thirdPic","pic_s260","forthPic","pic_s210","fulfilledList","duration","file_duration","lrcLink","lrclink","country","songPic","artistId","artist_id","stature","avatar","constellation","intro","company","birth","id","albumName","artistName","time","songLink","format","rate","size","MessageItem","props","className","content","option","onDestroy","useEffect","timer","setTimeout","clearTimeout","classNames","styles","MessageContainer","forwardRef","_","ref","setMessage","generateMessageId","Date","now","length","characters","charactersLength","Array","fill","charAt","Math","floor","random","join","generateRandomString","useImperativeHandle","createMessage","messageId","destroyMessage","useCallback","undefined","container","containerRef","createRef","document","createElement","body","appendChild","ReactDOM","render","current","createContainer","isPlaying","setIsPlaying","isPlayerFullScreen","setIsPlayerFullScreen","playList","setPlayList","playingSong","setPlayingSong","sequenceList","setSequenceList","Sequence","playMode","setPlayMode","songIndex","setSongIndex","historyTerms","setHistoryTerms","SongUsecase","lyric","image","playUrl","selectPlay","index","randomPlay","Random","randomPlayList","array","min","max","slice","i","j","temp","shuffle","addAndPlaySong","prev","Header","onUserIconClick","header","icon","text","mine","iconMine","onClick","Tabs","tabs","tab","path","to","item","link","label","ProgressBar","percent","onPercentChange","useRef","progressRef","progressBtnRef","touch","initiated","startX","left","containerWidth","clientWidth","progressMaxWidth","progressCurrentWidth","offset","offsetWidth","style","width","transform","inner","progress","progressBtnWrapper","onTouchStart","e","touches","pageX","onTouchMove","deltaX","newOffsetWidth","onTouchEnd","progressBtn","syncWrapperTransform","wrapper","transformStyle","getComputedStyle","getPropertyValue","FullScreenPlayer","visible","currentTime","onBack","onPlayingToggle","onPlayModeChange","onPrevClick","onNextClick","cdWrapperRef","cdImageRef","pad","val","n","toString","timeFormat","minute","second","background","height","src","alt","top","back","backIcon","subtitle","middle","middleLeft","cdWrapper","cdImage","playing","lyricWrapper","bottom","progressWrapper","progressBar","right","operations","leftIcon","Loop","modes","Object","values","nextIndex","findIndex","mode","centerIcon","rightIcon","ProgressCircle","radius","children","dashArray","PI","dashOffset","viewBox","version","cx","cy","r","strokeDasharray","strokeDashoffset","MiniPlayer","onPlayerClick","onPlayListShow","cd","cdImageWrapper","desc","control","playIcon","stopPropagation","listIcon","playModeDescMap","PlayListModal","onClose","onSelect","onFavoriteToggle","onRemove","onClear","selectSong","toggleFavorite","removeSong","modeIcon","modeText","clear","clearIcon","like","close","Confirm","maskClosable","confirmText","cancelText","onConfirm","onCancel","mask","footer","footerBtn","closeBtn","timeExp","tagRegMap","artist","album","by","noop","LyricParser","handler","tags","lines","curNum","startStamp","pauseStamp","init","startTime","skipLast","findCurNum","callHandler","playRest","stop","play","initTag","initLines","tag","hasOwnProperty","matches","match","RegExp","split","line","exec","lyricText","replace","trim","push","sort","b","lineNum","delay","Player","Container","useContainer","isConfirmVisible","setIsConfirmVisible","isPlayListVisible","setIsPlayListVisible","isAudioReady","setIsAudioReady","lyricParser","setLyricParser","playingLyric","setPlayingLyric","audioRef","currentPlayingTime","setCurrentPlayingTime","currentPercent","togglePlaying","loop","seek","handleLyric","togglePlay","pause","onCanPlay","onTimeUpdate","target","onEnded","listLength","next","onError","Recommend","recommendList","setRecommendList","listTitle","SingerList","singerList","setSingerList","onSingerClick","singer","history","useAsyncTask","task","isLoaded","setIsLoaded","isPending","setIsPending","createStrategy","fetcher","pageNo","queryData","rollFetcher","page","getFetcherStrategy","rollStrategy","usePagination","pageSize","initialPageNo","disabled","isDisabled","setIsDisabled","setPage","setData","dataRef","hasMore","isRefetch","strategy","fetch","fulfilledResult","curData","previousPageData","nextPageData","concat","finalTask","refetchTask","refetch","loadMore","SongList","songList","onSongSelect","rank","MusicList","cover","backgroundImage","playerWrapper","songListContainer","SingerDetail","setSinger","useMemo","initialLoad","threshold","useWindow","goBack","RankList","rankList","setRankList","onRankClick","RankDetail","rankType","Number","setRank","matched","find","Routes","exact","component","App","Provider","basename","Boolean","window","location","hostname","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.a5d2d161.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MusicList_header__2DSAu\",\"backIcon\":\"MusicList_backIcon__ePdxO\",\"title\":\"MusicList_title__37IYn\",\"cover\":\"MusicList_cover__vrLrC\",\"mask\":\"MusicList_mask__3Z-Vc\",\"playerWrapper\":\"MusicList_playerWrapper__3wUJP\",\"play\":\"MusicList_play__tskpk\",\"playIcon\":\"MusicList_playIcon__1Ln_z\",\"text\":\"MusicList_text__3jabf\",\"songListContainer\":\"MusicList_songListContainer__1KQLk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mask\":\"Confirm_mask__2URXs\",\"visible\":\"Confirm_visible__GxLGs\",\"body\":\"Confirm_body__3F1Jn\",\"content\":\"Confirm_content__2c74C\",\"footer\":\"Confirm_footer__3gJ17\",\"footerBtn\":\"Confirm_footerBtn__1UKhk\",\"closeBtn\":\"Confirm_closeBtn__2Q5QL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Recommend_container__1_pE7\",\"content\":\"Recommend_content__3O6lw\",\"listTitle\":\"Recommend_listTitle__22osE\",\"item\":\"Recommend_item__VMkzA\",\"icon\":\"Recommend_icon__2aP8r\",\"text\":\"Recommend_text__3uP3k\",\"name\":\"Recommend_name__2WM6a\",\"desc\":\"Recommend_desc__2c1DP\",\"loading-container\":\"Recommend_loading-container__3ctAi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"SongList_item__1boDc\",\"rank\":\"SongList_rank__Ff-ju\",\"icon\":\"SongList_icon__2Z1k4\",\"text\":\"SongList_text__bwiI0\",\"content\":\"SongList_content__coXSI\",\"name\":\"SongList_name__1R3FQ\",\"desc\":\"SongList_desc__3LlhI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"List_container__28AaT\",\"list\":\"List_list__2O6T7\",\"item\":\"List_item__2T6I7\",\"icon\":\"List_icon__IDvQM\",\"info\":\"List_info__3TZOt\",\"name\":\"List_name__1hi-u\",\"comment\":\"List_comment__H9sM8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3VPBX\",\"icon\":\"Header_icon__3K7p0\",\"text\":\"Header_text__2nUCj\",\"mine\":\"Header_mine__1ifKZ\",\"iconMine\":\"Header_iconMine__1ynUa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProgressBar_container__-ZAvS\",\"inner\":\"ProgressBar_inner__1EIxV\",\"progress\":\"ProgressBar_progress__3mEJg\",\"progressBtnWrapper\":\"ProgressBar_progressBtnWrapper__1O2X1\",\"progressBtn\":\"ProgressBar_progressBtn__1OCt0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"List_container__189Un\",\"list\":\"List_list__3dnNW\",\"item\":\"List_item__iZXqJ\",\"avatar\":\"List_avatar__1hjoO\",\"name\":\"List_name__26KdE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3PIvH\",\"message\":\"styles_message__2w9kq\",\"content\":\"styles_content__TvzOl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab\":\"Tabs_tab__2UsYl\",\"item\":\"Tabs_item__3ZvGw\",\"link\":\"Tabs_link__PNMpC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProgressCircle_container__1W7ZF\",\"background\":\"ProgressCircle_background__2bFqW\",\"progress\":\"ProgressCircle_progress__1rjw9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Detail_container__3Z3sL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Detail_container__35C0U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FullScreenPlayer_container__1WBCF\",\"visible\":\"FullScreenPlayer_visible__3wYjU\",\"background\":\"FullScreenPlayer_background__EhGlJ\",\"top\":\"FullScreenPlayer_top__3dxkU\",\"back\":\"FullScreenPlayer_back__24XoF\",\"backIcon\":\"FullScreenPlayer_backIcon__nl8Za\",\"title\":\"FullScreenPlayer_title__2whcd\",\"subtitle\":\"FullScreenPlayer_subtitle__15SDT\",\"middle\":\"FullScreenPlayer_middle__3mfhj\",\"middleLeft\":\"FullScreenPlayer_middleLeft__3jXL2\",\"cdWrapper\":\"FullScreenPlayer_cdWrapper__9QpDm\",\"cdImage\":\"FullScreenPlayer_cdImage__2Tir_\",\"playing\":\"FullScreenPlayer_playing__PlMf-\",\"rotate\":\"FullScreenPlayer_rotate__2o1sX\",\"lyricWrapper\":\"FullScreenPlayer_lyricWrapper__3QkAU\",\"lyric\":\"FullScreenPlayer_lyric__u2TmU\",\"bottom\":\"FullScreenPlayer_bottom__Qn1G5\",\"progressWrapper\":\"FullScreenPlayer_progressWrapper__3bjBe\",\"time\":\"FullScreenPlayer_time__G0wxb\",\"left\":\"FullScreenPlayer_left__AQYyE\",\"right\":\"FullScreenPlayer_right__1g-nO\",\"progressBar\":\"FullScreenPlayer_progressBar__2RYdW\",\"operations\":\"FullScreenPlayer_operations__1zkkf\",\"icon\":\"FullScreenPlayer_icon__3g624\",\"disable\":\"FullScreenPlayer_disable__1UPqk\",\"leftIcon\":\"FullScreenPlayer_leftIcon__3xJ0-\",\"centerIcon\":\"FullScreenPlayer_centerIcon__3Xqyh\",\"rightIcon\":\"FullScreenPlayer_rightIcon__14U9V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PlayListModal_container__374-Z\",\"visible\":\"PlayListModal_visible__36jZw\",\"body\":\"PlayListModal_body__34_-S\",\"header\":\"PlayListModal_header__S-RLN\",\"modeIcon\":\"PlayListModal_modeIcon__1ENBU\",\"modeText\":\"PlayListModal_modeText__2l8oY\",\"clear\":\"PlayListModal_clear__2gMK6\",\"clearIcon\":\"PlayListModal_clearIcon__ZtDnR\",\"list\":\"PlayListModal_list__3qi0u\",\"item\":\"PlayListModal_item__2Caa-\",\"current\":\"PlayListModal_current__2r4d2\",\"songName\":\"PlayListModal_songName__1qGO5\",\"like\":\"PlayListModal_like__1o4kB\",\"delete\":\"PlayListModal_delete__7ohBb\",\"close\":\"PlayListModal_close__lqFSM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MiniPlayer_container__1fcGD\",\"visible\":\"MiniPlayer_visible__3Dz5A\",\"cd\":\"MiniPlayer_cd__3HsXL\",\"cdImageWrapper\":\"MiniPlayer_cdImageWrapper__2tfuC\",\"cdImage\":\"MiniPlayer_cdImage__3M2rJ\",\"playing\":\"MiniPlayer_playing__2EPEA\",\"rotate\":\"MiniPlayer_rotate__2jjF3\",\"text\":\"MiniPlayer_text__1UzVX\",\"name\":\"MiniPlayer_name__nSDYy\",\"desc\":\"MiniPlayer_desc__2I3fU\",\"control\":\"MiniPlayer_control__2t91O\",\"playIcon\":\"MiniPlayer_playIcon__28-Nl\",\"listIcon\":\"MiniPlayer_listIcon__2ASrg\"};","import { useState } from 'react';\r\n\r\ninterface IFuncUpdater<T> {\r\n  (previousState?: T): T;\r\n}\r\n\r\nfunction isFunction<T>(obj: any): obj is T {\r\n  return typeof obj === 'function';\r\n}\r\n\r\nconst useStorage = <T>(\r\n  storage: Storage,\r\n  key: string,\r\n  defaultValue?: T | IFuncUpdater<T>\r\n) => {\r\n  const [state, setState] = useState<T | undefined>(() => getStoredValue());\r\n\r\n  function getStoredValue() {\r\n    const raw = storage.getItem(key);\r\n    if (raw) {\r\n      return JSON.parse(raw);\r\n    }\r\n    if (isFunction<IFuncUpdater<T>>(defaultValue)) {\r\n      return defaultValue();\r\n    }\r\n\r\n    return defaultValue;\r\n  }\r\n\r\n  const updateState = (value?: T | IFuncUpdater<T>) => {\r\n    if (typeof value === 'undefined') {\r\n      storage.removeItem(key);\r\n      setState(defaultValue);\r\n    } else if (isFunction<IFuncUpdater<T>>(value)) {\r\n      const previousState = getStoredValue();\r\n      const currentState = value(previousState);\r\n      storage.setItem(key, JSON.stringify(currentState));\r\n      setState(currentState);\r\n    } else {\r\n      storage.setItem(key, JSON.stringify(value));\r\n      setState(value);\r\n    }\r\n  };\r\n  return [state, updateState];\r\n};\r\n\r\nexport default useStorage;\r\n","import useStorage from './useStorage';\r\n\r\nfunction useLocalStorage<T = undefined>(\r\n  key: string\r\n): [T | undefined, (value?: T | ((previousState?: T) => T)) => void];\r\n\r\nfunction useLocalStorage<T>(\r\n  key: string,\r\n  defaultValue: T | (() => T)\r\n): [T, (value?: T | ((previousState?: T) => T)) => void];\r\n\r\nfunction useLocalStorage<T>(key: string, defaultValue?: T | (() => T)) {\r\n  return useStorage(localStorage, key, defaultValue);\r\n}\r\n\r\nexport default useLocalStorage;\r\n","/**\r\n * 分页查询基本参数\r\n * https://github.com/MZCretin/RollToolsApi\r\n */\r\ninterface RollApiBasicPaginationQuery {\r\n  page: number;\r\n}\r\n\r\n/**\r\n * 分页查询参数\r\n */\r\nexport type RollApiPaginationQuery<T> = T extends\r\n  | void\r\n  | undefined\r\n  | null\r\n  | never\r\n  ? RollApiBasicPaginationQuery\r\n  : T & RollApiBasicPaginationQuery;\r\n\r\n/**\r\n * 分页查询结果\r\n */\r\nexport interface RollApiPaginationResult<T> {\r\n  page: number; // 当前页数\r\n  totalCount: number; // 总数量\r\n  totalPage: number; // 总页数\r\n  list: T; // 具体数据模型\r\n  limit: number; // 每页数量\r\n}\r\n\r\n/**\r\n * 播放模式\r\n */\r\nexport enum PlayMode {\r\n  Sequence = 'SEQUENCE', // 顺序播放\r\n  Loop = 'LOOP', // 单曲循环\r\n  Random = 'RANDOM' // 随机播放\r\n}\r\n","export const LOCAL_PATHS = {\r\n  recommend: {\r\n    routePath: '/recommend',\r\n    getPathByParams: () => '/recommend'\r\n  },\r\n  singer: {\r\n    list: {\r\n      routePath: '/singer/list',\r\n      getPathByParams: () => '/singer/list'\r\n    },\r\n    detail: {\r\n      routePath: '/singer/detail/:id',\r\n      getPathByParams: (singerId: string) => `/singer/detail/${singerId}`\r\n    }\r\n  },\r\n  rank: {\r\n    list: {\r\n      routePath: '/rank/list',\r\n      getPathByParams: () => '/rank/list'\r\n    },\r\n    detail: {\r\n      routePath: '/rank/detail/:type',\r\n      getPathByParams: (type: number) => `/rank/detail/${type}`\r\n    }\r\n  },\r\n  search: {\r\n    routePath: '/search',\r\n    getPathByParams: () => '/search'\r\n  }\r\n};\r\n\r\nexport const STORAGE_HISTORY_TERMS_KEY = 'music_mweb:history_terms';\r\n","import Axios, {\r\n  AxiosInstance,\r\n  AxiosRequestConfig,\r\n  AxiosResponse,\r\n  AxiosError\r\n} from 'axios';\r\n\r\nimport {\r\n  RES_FAILED_DEFAULT_CODE,\r\n  RES_FAILED_DEFAULT_MSG\r\n} from 'shared/constants';\r\n\r\ninterface ResponseErrorOption {\r\n  code: string | number;\r\n  message: string;\r\n}\r\n\r\n/**\r\n * 封装请求响应 Error\r\n */\r\nexport class ResponseError extends Error {\r\n  code: string | number;\r\n\r\n  constructor({ code = '', message = '' }: ResponseErrorOption) {\r\n    super(message);\r\n    this.code = code;\r\n  }\r\n}\r\n\r\nexport interface Response<T> {\r\n  data: T;\r\n  code: number;\r\n  message: string;\r\n  success: boolean;\r\n}\r\n\r\ninterface RequestOption {\r\n  defaults?: AxiosRequestConfig;\r\n  interceptors?: {\r\n    onFulfilled?: (\r\n      value: AxiosResponse\r\n    ) => AxiosResponse | Promise<AxiosResponse>;\r\n    onRejected?: (err: AxiosError) => Promise<ResponseError>;\r\n  };\r\n}\r\n\r\nclass Request {\r\n  private instance: AxiosInstance;\r\n\r\n  constructor({ defaults = {}, interceptors = {} }: RequestOption) {\r\n    this.instance = Axios.create({\r\n      ...defaults,\r\n      timeout: 50000\r\n    });\r\n\r\n    this.instance.interceptors.request.use(\r\n      cfg => cfg,\r\n      err => Promise.reject(err)\r\n    );\r\n\r\n    const defaultOnFulFilled = (res: AxiosResponse) => res;\r\n    const defaultOnRejected = (err: AxiosError) => {\r\n      return !err.response\r\n        ? Promise.reject(\r\n            new ResponseError({\r\n              code: RES_FAILED_DEFAULT_CODE,\r\n              message: RES_FAILED_DEFAULT_MSG\r\n            })\r\n          )\r\n        : Promise.reject(\r\n            new ResponseError({\r\n              code: err.response.status,\r\n              message: err.message\r\n            })\r\n          );\r\n    };\r\n\r\n    this.instance.interceptors.response.use(\r\n      interceptors.onFulfilled || defaultOnFulFilled,\r\n      interceptors.onRejected || defaultOnRejected\r\n    );\r\n  }\r\n\r\n  private handleResponse<T>(ret: Response<T>) {\r\n    return ret.success\r\n      ? ret.data\r\n      : Promise.reject(\r\n          new ResponseError({\r\n            code: ret.code,\r\n            message: ret.message\r\n          })\r\n        );\r\n  }\r\n\r\n  public static async all<T>(promises: Promise<T>[]) {\r\n    return Axios.all<T>(promises);\r\n  }\r\n\r\n  public static async spread<T, R>(callback: (...args: T[]) => R) {\r\n    return Axios.spread<T, R>(callback);\r\n  }\r\n\r\n  public async head(url: string) {\r\n    const res = await this.instance.head(url);\r\n\r\n    return res.data;\r\n  }\r\n\r\n  public async get<T = any>(\r\n    url: string,\r\n    params?: object,\r\n    config: AxiosRequestConfig = {}\r\n  ) {\r\n    const { data: ret } = await this.instance.get<Response<T>>(url, {\r\n      ...config,\r\n      params\r\n    });\r\n\r\n    return this.handleResponse(ret);\r\n  }\r\n\r\n  public async delete(url: string) {\r\n    const res = await this.instance.delete(url);\r\n\r\n    return res.data;\r\n  }\r\n\r\n  public async post<T = any>(\r\n    url: string,\r\n    data?: any,\r\n    config?: AxiosRequestConfig\r\n  ) {\r\n    const { data: ret } = await this.instance.post<Response<T>>(\r\n      url,\r\n      data,\r\n      config\r\n    );\r\n\r\n    return this.handleResponse(ret);\r\n  }\r\n\r\n  public async put<T = any>(\r\n    url: string,\r\n    data?: any,\r\n    config?: AxiosRequestConfig\r\n  ) {\r\n    const { data: ret } = await this.instance.put<Response<T>>(\r\n      url,\r\n      data,\r\n      config\r\n    );\r\n\r\n    return this.handleResponse(ret);\r\n  }\r\n\r\n  public async patch<T = any>(\r\n    url: string,\r\n    data?: any,\r\n    config?: AxiosRequestConfig\r\n  ) {\r\n    const { data: ret } = await this.instance.patch<Response<T>>(\r\n      url,\r\n      data,\r\n      config\r\n    );\r\n\r\n    return this.handleResponse(ret);\r\n  }\r\n}\r\n\r\nexport default Request;\r\n","import { AxiosResponse } from 'axios';\r\n\r\nimport Request, { Response, ResponseError } from './http';\r\nimport {\r\n  REQ_BASE_PATH,\r\n  RES_FAILED_DEFAULT_CODE,\r\n  RES_FAILED_DEFAULT_MSG,\r\n  RES_SUCCESS_DEFAULT_CODE,\r\n  RES_SUCCESS_DEFAULT_MSG,\r\n  API_APP_ID,\r\n  API_APP_SECRET\r\n} from 'shared/constants';\r\n\r\n/**\r\n * 服务器返回数据统一格式\r\n */\r\ninterface ServerResponse {\r\n  code: 0 | 1; // 0 返回失败，1 返回成功\r\n  msg: string; // 当 code 返回 0 时候包含错误提示\r\n  data?: any; // 具体接口数据信息\r\n}\r\n\r\nconst request = new Request({\r\n  defaults: {\r\n    baseURL: REQ_BASE_PATH,\r\n    headers: {\r\n      common: {\r\n        app_id: API_APP_ID,\r\n        app_secret: API_APP_SECRET\r\n      }\r\n    }\r\n  },\r\n  interceptors: {\r\n    onFulfilled: (res: AxiosResponse<ServerResponse>) => {\r\n      const {\r\n        data: resData,\r\n        config: { responseType }\r\n      } = res;\r\n      let result: Response<any> = {\r\n        data: null,\r\n        code: RES_SUCCESS_DEFAULT_CODE,\r\n        message: RES_SUCCESS_DEFAULT_MSG,\r\n        success: true\r\n      };\r\n\r\n      if (resData === null || resData === void 0) {\r\n        result.data = {};\r\n      } else if (\r\n        typeof resData !== 'object' ||\r\n        (responseType && responseType !== 'json')\r\n      ) {\r\n        result.data = resData;\r\n      } else {\r\n        result = {\r\n          data: resData.data,\r\n          code: resData.code,\r\n          message: resData.msg,\r\n          success: resData.code === RES_SUCCESS_DEFAULT_CODE\r\n        };\r\n      }\r\n\r\n      return {\r\n        ...res,\r\n        data: result\r\n      };\r\n    },\r\n    onRejected: err => {\r\n      if (!err.response) {\r\n        return Promise.reject(\r\n          new ResponseError({\r\n            code: RES_FAILED_DEFAULT_CODE,\r\n            message: RES_FAILED_DEFAULT_MSG\r\n          })\r\n        );\r\n      }\r\n\r\n      const { code, msg } = err.response.data as ServerResponse;\r\n\r\n      return Promise.reject(\r\n        new ResponseError({\r\n          code: code || err.response.status,\r\n          message: msg || ''\r\n        })\r\n      );\r\n    }\r\n  }\r\n});\r\n\r\nexport default request;\r\n","export const BASE_NAME = process.env.REACT_APP_BASE_NAME as string;\r\n\r\n// request\r\nconst API_DOMAIN = process.env.REACT_APP_API_DOMAIN as string;\r\nconst API_PREFIX_PATH = process.env.REACT_APP_API_PREFIX_PATH as string;\r\nexport const REQ_BASE_PATH = API_DOMAIN + API_PREFIX_PATH;\r\nexport const RES_SUCCESS_DEFAULT_CODE = 1;\r\nexport const RES_FAILED_DEFAULT_CODE = 0;\r\nexport const RES_SUCCESS_DEFAULT_MSG = 'success';\r\nexport const RES_FAILED_DEFAULT_MSG = 'uncaught exception';\r\n\r\n// request secret\r\nexport const API_APP_ID = process.env.REACT_APP_API_APP_ID as string;\r\nexport const API_APP_SECRET = process.env.REACT_APP_API_APP_SECRET as string;\r\n","import request from 'shared/request';\r\n\r\nimport {\r\n  RollApiPaginationQuery,\r\n  RollApiPaginationResult\r\n} from 'shared/typings';\r\nimport {\r\n  ResponseRecommendSong,\r\n  ResponseRank,\r\n  ResponseListSong,\r\n  ResponseSingerDetail,\r\n  ResponseSingerSong,\r\n  ResponseSongDetail,\r\n  ResponseSinger\r\n} from './typings';\r\n\r\nexport default {\r\n  /**\r\n   * 获取每日音乐推荐列表\r\n   */\r\n  getRecommendList: () => {\r\n    return request.get<ResponseRecommendSong[]>('/music/recommend/list');\r\n  },\r\n  /**\r\n   * 获取榜单列表\r\n   */\r\n  getRankList: () => {\r\n    return request.get<ResponseRank[]>('/music/order/list');\r\n  },\r\n  /**\r\n   * 获取指定榜单类型的歌曲列表\r\n   */\r\n  getRankSongList: (query: RollApiPaginationQuery<{ type: number }>) => {\r\n    return request.get<RollApiPaginationResult<ResponseSingerSong[]>>(\r\n      '/music/order/song/list',\r\n      query\r\n    );\r\n  },\r\n  /**\r\n   * 搜索歌手列表\r\n   */\r\n  searchSingerList: (keyWord: string) => {\r\n    return request.get<ResponseSinger[]>('/music/singer/search', { keyWord });\r\n  },\r\n  /**\r\n   * 获取歌手详情\r\n   */\r\n  getSingerDetail: (singerId: string) => {\r\n    return request.get<ResponseSingerDetail>('/music/singer/detail', {\r\n      singerId\r\n    });\r\n  },\r\n  /**\r\n   * 获取歌手的歌曲列表\r\n   */\r\n  getSingerSongList: (query: RollApiPaginationQuery<{ singerId: string }>) => {\r\n    return request.get<RollApiPaginationResult<ResponseSingerSong[]>>(\r\n      '/music/singer/song/list',\r\n      query\r\n    );\r\n  },\r\n  /**\r\n   * 搜索歌曲列表\r\n   */\r\n  searchSongList: (query: RollApiPaginationQuery<{ keyWord: string }>) => {\r\n    return request.get<RollApiPaginationResult<ResponseListSong[]>>(\r\n      '/music/song/search',\r\n      query\r\n    );\r\n  },\r\n  /**\r\n   * 获取歌曲详情\r\n   */\r\n  getSongDetail: (songId: string) => {\r\n    return request.get<ResponseSongDetail>('/music/song/detail', { songId });\r\n  },\r\n  /**\r\n   * 获取歌词\r\n   */\r\n  getLyric: (lyricLink: string) => {\r\n    return request.get<string>(lyricLink, { responseType: 'text' });\r\n  }\r\n};\r\n","import usecase from './usecase';\r\n\r\nexport default usecase;\r\n","import SongRepo from './repo';\r\nimport {\r\n  RollApiPaginationQuery,\r\n  RollApiPaginationResult\r\n} from 'shared/typings';\r\nimport {\r\n  FulfilledRecommendSong,\r\n  FulfilledRank,\r\n  FulfilledSingerSong,\r\n  FulfilledSinger,\r\n  FulfilledSingerDetail,\r\n  FulfilledListSong,\r\n  FulfilledSongDetail\r\n} from './typings';\r\n\r\nexport default {\r\n  getRecommendList: async () => {\r\n    const responseList = await SongRepo.getRecommendList();\r\n    return responseList.map(song => {\r\n      const fulfilledSong: FulfilledRecommendSong = {\r\n        songId: song.song_id,\r\n        songName: song.title,\r\n        singerId: song.ting_uid,\r\n        singerPic: song.pic_singer,\r\n        singerName: song.author,\r\n        albumTitle: song.album_title,\r\n        language: song.language,\r\n        proxyCompany: song.si_proxycompany,\r\n        info: song.info,\r\n        hugeSongPic: song.pic_huge,\r\n        bigSongPic: song.pic_big,\r\n        premiumSongPic: song.pic_premium,\r\n        smallSongPic: song.pic_small,\r\n        publishTime: song.publishtime\r\n      };\r\n\r\n      return fulfilledSong;\r\n    });\r\n  },\r\n  getRankList: async () => {\r\n    const responseList = await SongRepo.getRankList();\r\n    return responseList.map(song => {\r\n      const fulfilledSong: FulfilledRank = {\r\n        name: song.name,\r\n        type: song.type,\r\n        comment: song.comment,\r\n        firstPic: song.pic_s192,\r\n        secondPic: song.pic_s444,\r\n        thirdPic: song.pic_s260,\r\n        forthPic: song.pic_s210\r\n      };\r\n\r\n      return fulfilledSong;\r\n    });\r\n  },\r\n  getRankSongList: async (query: RollApiPaginationQuery<{ type: number }>) => {\r\n    const response = await SongRepo.getRankSongList(query);\r\n    const fulfilledList = response.list.map(song => {\r\n      const fulfilledSong: FulfilledSingerSong = {\r\n        songId: song.song_id,\r\n        songName: song.title,\r\n        singerId: song.ting_uid,\r\n        singerName: song.author,\r\n        proxyCompany: song.si_proxycompany,\r\n        duration: song.file_duration,\r\n        lrcLink: song.lrclink,\r\n        country: song.country,\r\n        songPic: song.pic_big,\r\n        language: song.language,\r\n        publishTime: song.publishtime\r\n      };\r\n\r\n      return fulfilledSong;\r\n    });\r\n    const ret: RollApiPaginationResult<FulfilledSingerSong[]> = {\r\n      ...response,\r\n      list: fulfilledList\r\n    };\r\n\r\n    return ret;\r\n  },\r\n  searchSingerList: async (keyWord: string) => {\r\n    const responseList = await SongRepo.searchSingerList(keyWord);\r\n    return responseList as FulfilledSinger[];\r\n  },\r\n  getSingerDetail: async (singerId: string) => {\r\n    const response = await SongRepo.getSingerDetail(singerId);\r\n    const ret: FulfilledSingerDetail = {\r\n      artistId: response.artist_id,\r\n      singerId: response.singerId,\r\n      singerName: response.name,\r\n      stature: response.stature,\r\n      avatar: response.avatar,\r\n      constellation: response.constellation,\r\n      intro: response.intro,\r\n      company: response.company,\r\n      country: response.country,\r\n      birth: response.birth\r\n    };\r\n\r\n    return ret;\r\n  },\r\n  getSingerSongList: async (\r\n    query: RollApiPaginationQuery<{ singerId: string }>\r\n  ) => {\r\n    const response = await SongRepo.getSingerSongList(query);\r\n    const fulfilledList = response.list.map(song => {\r\n      const fulfilledSong: FulfilledSingerSong = {\r\n        songId: song.song_id,\r\n        songName: song.title,\r\n        singerId: song.ting_uid,\r\n        singerName: song.author,\r\n        proxyCompany: song.si_proxycompany,\r\n        duration: song.file_duration,\r\n        lrcLink: song.lrclink,\r\n        country: song.country,\r\n        songPic: song.pic_big,\r\n        language: song.language,\r\n        publishTime: song.publishtime\r\n      };\r\n\r\n      return fulfilledSong;\r\n    });\r\n    const ret: RollApiPaginationResult<FulfilledSingerSong[]> = {\r\n      ...response,\r\n      list: fulfilledList\r\n    };\r\n\r\n    return ret;\r\n  },\r\n  searchSongList: async (\r\n    query: RollApiPaginationQuery<{ keyWord: string }>\r\n  ) => {\r\n    const response = await SongRepo.searchSongList(query);\r\n    return response as RollApiPaginationResult<FulfilledListSong[]>;\r\n  },\r\n  getSongDetail: async (songId: string) => {\r\n    const response = await SongRepo.getSongDetail(songId);\r\n    const ret: FulfilledSongDetail = {\r\n      songId: response.id,\r\n      songName: response.songName,\r\n      albumName: response.albumName,\r\n      singerName: response.artistName,\r\n      songPic: response.songPic,\r\n      lrcLink: response.lrcLink,\r\n      time: response.time,\r\n      songLink: response.songLink,\r\n      format: response.format,\r\n      rate: response.rate,\r\n      size: response.size\r\n    };\r\n\r\n    return ret;\r\n  },\r\n  getLyric: SongRepo.getLyric\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport { Message } from './typings';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\ninterface Props {\r\n  className?: string;\r\n  message: Message;\r\n  onDestroy: (messageId: string) => void;\r\n}\r\n\r\nconst MessageItem: React.FC<Props> = props => {\r\n  const {\r\n    className = '',\r\n    message: { id, content, option },\r\n    onDestroy\r\n  } = props;\r\n\r\n  const duration = option?.duration || 3000;\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      onDestroy(id);\r\n    }, duration);\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [onDestroy, id, duration]);\r\n\r\n  return (\r\n    <div\r\n      className={classNames({\r\n        [styles.message]: true,\r\n        [className]: true\r\n      })}\r\n    >\r\n      <main className={styles.content}>{content}</main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageItem;\r\n","import React, {\r\n  useState,\r\n  useCallback,\r\n  forwardRef,\r\n  useImperativeHandle\r\n} from 'react';\r\n\r\nimport MessageItem from './MessageItem';\r\nimport { MessageType, Message, MessageOption } from './typings';\r\nimport { generateRandomString } from './utils';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nexport interface MessageContainerRef {\r\n  createMessage: (\r\n    type: MessageType,\r\n    content: React.ReactNode,\r\n    option?: MessageOption\r\n  ) => void;\r\n}\r\n\r\nconst MessageContainer = forwardRef<MessageContainerRef>((_, ref) => {\r\n  const [message, setMessage] = useState<Message>();\r\n\r\n  const generateMessageId = () => {\r\n    return `${Date.now()}-${generateRandomString()}`;\r\n  };\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    createMessage: (\r\n      type: MessageType,\r\n      content: React.ReactNode,\r\n      option?: MessageOption\r\n    ) => {\r\n      const messageId = generateMessageId();\r\n      setMessage({\r\n        id: messageId,\r\n        type,\r\n        content,\r\n        option\r\n      });\r\n    }\r\n  }));\r\n\r\n  const destroyMessage = useCallback((messageId: string) => {\r\n    setMessage(undefined);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {message && <MessageItem message={message} onDestroy={destroyMessage} />}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MessageContainer;\r\n","/**\r\n * 生成随机字符串\r\n */\r\nexport const generateRandomString = (length: number = 5) => {\r\n  const characters =\r\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n  const charactersLength = characters.length;\r\n\r\n  return Array(length)\r\n    .fill(null)\r\n    .map(() => characters.charAt(Math.floor(Math.random() * charactersLength)))\r\n    .join('');\r\n};\r\n","import React, { createRef } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport MessageContainer, { MessageContainerRef } from './Container';\r\n\r\nimport { MessageType, MessageOption } from './typings';\r\n\r\nconst containerRef = createRef<MessageContainerRef>();\r\n\r\nconst container = document.createElement('div');\r\ndocument.body.appendChild(container);\r\n\r\nReactDOM.render(<MessageContainer ref={containerRef} />, container);\r\n\r\nconst createMessage = (\r\n  type: MessageType,\r\n  content: React.ReactNode,\r\n  option?: MessageOption\r\n) => {\r\n  if (containerRef.current) {\r\n    containerRef.current.createMessage(type, content, option);\r\n  }\r\n};\r\n\r\nexport default {\r\n  success: (content: string, option?: MessageOption) => {\r\n    createMessage('SUCCESS', content, option);\r\n  },\r\n  error: (content: string, option?: MessageOption) => {\r\n    createMessage('ERROR', content, option);\r\n  },\r\n  info: (content: string, option?: MessageOption) => {\r\n    createMessage('INFO', content, option);\r\n  },\r\n  warning: (content: string, option?: MessageOption) => {\r\n    createMessage('WARNING', content, option);\r\n  }\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { createContainer } from 'unstated-next';\r\n\r\nimport useLocalStorage from 'shared/hooks/storage/useLocalStorage';\r\n\r\nimport SongUsecase from 'shared/domain/song';\r\nimport { shuffle } from 'shared/utils';\r\nimport { STORAGE_HISTORY_TERMS_KEY } from 'shared/constants';\r\nimport { PlayerSong, PlayingSong } from 'shared/domain/song/typings';\r\nimport { PlayMode } from 'shared/typings';\r\n\r\nimport message from 'shared/lib/message';\r\n\r\nexport default createContainer(() => {\r\n  // 是否在播放音乐\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  // 播放器是否全屏\r\n  const [isPlayerFullScreen, setIsPlayerFullScreen] = useState(false);\r\n  // 播放列表，当循环播放与随机播放时会跟 sequenceList 不同\r\n  const [playList, setPlayList] = useState<PlayerSong[]>([]);\r\n  // 播放中的歌曲，需要额外获取详情的歌词与播放地址\r\n  const [playingSong, setPlayingSong] = useState<PlayingSong>();\r\n  // 顺序播放列表\r\n  const [sequenceList, setSequenceList] = useState<PlayerSong[]>([]);\r\n  // 播放模式\r\n  const [playMode, setPlayMode] = useState<PlayMode>(PlayMode.Sequence);\r\n  // 播放的音乐在列表的索引\r\n  const [songIndex, setSongIndex] = useState(-1);\r\n  // 搜索历史\r\n  const [historyTerms, setHistoryTerms] = useLocalStorage<string[]>(\r\n    STORAGE_HISTORY_TERMS_KEY,\r\n    []\r\n  );\r\n\r\n  /**\r\n   * 将歌曲添加至播放列表，并自动播放\r\n   */\r\n  const addAndPlaySong = (song: PlayerSong) => {\r\n    setPlayList(prev => [...prev, song]);\r\n    setSongIndex(playList.length);\r\n    setIsPlayerFullScreen(true);\r\n  };\r\n\r\n  /**\r\n   * 选择播放\r\n   */\r\n  const selectPlay = (list: PlayerSong[], index: number) => {\r\n    setSequenceList(list);\r\n    // setPlayMode('SEQUENCE');\r\n    setPlayList(list);\r\n    setSongIndex(index);\r\n    setIsPlayerFullScreen(true);\r\n  };\r\n\r\n  /**\r\n   * 随机播放\r\n   */\r\n  const randomPlay = (list: PlayerSong[]) => {\r\n    setSequenceList(list);\r\n    setPlayMode(PlayMode.Random);\r\n    const randomPlayList = shuffle(list);\r\n    setPlayList(randomPlayList);\r\n    setSongIndex(0);\r\n    setIsPlayerFullScreen(true);\r\n  };\r\n\r\n  const getSongDetail = async (songId: string) => {\r\n    try {\r\n      const result = await SongUsecase.getSongDetail(songId);\r\n      const lyric = await SongUsecase.getLyric(result.lrcLink);\r\n      setPlayingSong({\r\n        songId,\r\n        songName: result.songName,\r\n        singerName: result.singerName,\r\n        image: result.songPic,\r\n        lyric,\r\n        playUrl: result.songLink,\r\n        duration: result.time\r\n      });\r\n      setIsPlaying(true);\r\n    } catch (e) {\r\n      message.error(e.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (0 <= songIndex && songIndex < playList.length) {\r\n      const playSong = playList[songIndex];\r\n      const songId = playSong.songId;\r\n      getSongDetail(songId);\r\n    }\r\n  }, [playList, songIndex]);\r\n\r\n  return {\r\n    isPlaying,\r\n    setIsPlaying,\r\n    isPlayerFullScreen,\r\n    setIsPlayerFullScreen,\r\n    playList,\r\n    setPlayList,\r\n    sequenceList,\r\n    setSequenceList,\r\n    playMode,\r\n    setPlayMode,\r\n    songIndex,\r\n    setSongIndex,\r\n    historyTerms,\r\n    setHistoryTerms,\r\n    selectPlay,\r\n    randomPlay,\r\n    playingSong,\r\n    addAndPlaySong\r\n  };\r\n});\r\n","/**\r\n * 随机抽取（包含） min 到 max 之间的数\r\n */\r\nfunction getRandomInt(min: number, max: number): number {\r\n  return Math.floor(Math.random() * (max - min + 1) + min); // +1 是保证能取到上限的值\r\n}\r\n\r\n/**\r\n * 把数组元素打乱，经典的 shuffle 算法\r\n */\r\nexport function shuffle<T extends any[]>(array: T): T {\r\n  const res = array.slice() as T;\r\n\r\n  for (let i = 0; i < res.length; i++) {\r\n    const j = getRandomInt(0, i);\r\n    const temp = res[i];\r\n    res[i] = array[j];\r\n    res[j] = temp;\r\n  }\r\n\r\n  return res;\r\n}\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport styles from './index.module.scss';\r\n\r\ninterface HeaderProps {\r\n  onUserIconClick?: () => void;\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = props => {\r\n  const { onUserIconClick } = props;\r\n\r\n  const onClick = () => {\r\n    onUserIconClick && onUserIconClick();\r\n  };\r\n\r\n  return (\r\n    <header className={styles.header}>\r\n      <i className={styles.icon} />\r\n      <h1 className={styles.text}>大力音乐</h1>\r\n      <div className={styles.mine}>\r\n        <i\r\n          className={classNames({\r\n            'icon-mine': true,\r\n            [styles.iconMine]: true\r\n          })}\r\n          onClick={onClick}\r\n        />\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport styles from './index.module.scss';\r\n\r\ninterface Tab {\r\n  label: string;\r\n  path: string;\r\n}\r\n\r\ninterface TabsProps {\r\n  tabs: Tab[];\r\n}\r\n\r\nconst Tabs: React.FC<TabsProps> = props => {\r\n  const { tabs } = props;\r\n\r\n  return (\r\n    <div className={styles.tab}>\r\n      {tabs.map(tab => (\r\n        <NavLink key={tab.path} to={tab.path} className={styles.item}>\r\n          <span className={styles.link}>{tab.label}</span>\r\n        </NavLink>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tabs;\r\n","import React, { useEffect, useRef, TouchEvent } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport styles from './index.module.scss';\r\n\r\ninterface ProgressBarProps {\r\n  className?: string;\r\n  percent?: number;\r\n  onPercentChange?: (percent: number) => void;\r\n}\r\n\r\nconst ProgressBar: React.FC<ProgressBarProps> = props => {\r\n  const { className = '', percent = 0, onPercentChange } = props;\r\n\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const progressRef = useRef<HTMLDivElement>(null);\r\n  const progressBtnRef = useRef<HTMLDivElement>(null);\r\n  const touch = useRef({\r\n    initiated: false, // 是否在拖动模式中\r\n    startX: -1, // 触发 touchstart 时候鼠标 X 轴位置\r\n    left: -1 // 触发 touchstart 时候进度条长度\r\n  });\r\n\r\n  const progressBtnWidth = 16;\r\n  const containerWidth = containerRef.current?.clientWidth || 0;\r\n  const progressMaxWidth = containerWidth - progressBtnWidth; // 因按钮占 16px，故 100% 的长度也只能是总的扣去 16\r\n  const progressCurrentWidth = progressRef.current?.clientWidth || 0; // 当前进度条长度\r\n\r\n  const progressTouchStart = (e: TouchEvent<HTMLDivElement>) => {\r\n    touch.current.initiated = true;\r\n    touch.current.startX = e.touches[0].pageX;\r\n    touch.current.left = progressCurrentWidth;\r\n  };\r\n\r\n  const progressTouchMove = (e: TouchEvent<HTMLDivElement>) => {\r\n    const currentX = e.touches[0].pageX;\r\n    const deltaX = currentX - touch.current.startX; // 如果用户向右拖则为正数，向左则为负数\r\n    const newOffsetWidth = Math.min(\r\n      Math.max(0, touch.current.left + deltaX),\r\n      containerWidth - progressBtnWidth\r\n    );\r\n    offset(newOffsetWidth);\r\n  };\r\n\r\n  const progressTouchEnd = () => {\r\n    touch.current.initiated = false;\r\n    const newPercent = progressCurrentWidth / progressMaxWidth;\r\n    onPercentChange && onPercentChange(newPercent);\r\n  };\r\n\r\n  const offset = (offsetWidth: number) => {\r\n    if (progressRef.current) {\r\n      progressRef.current.style.width = `${offsetWidth}px`;\r\n    }\r\n    if (progressBtnRef.current) {\r\n      progressBtnRef.current.style.transform = `translate3d(${offsetWidth}px, 0, 0)`;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 不在拖动模式时，才自动更新播放条进度\r\n    if (percent >= 0 && !touch.current.initiated) {\r\n      offset(progressMaxWidth * percent);\r\n    }\r\n  }, [percent, touch, progressMaxWidth]);\r\n\r\n  return (\r\n    <div\r\n      className={classNames({\r\n        [styles.container]: true,\r\n        [className]: true\r\n      })}\r\n      ref={containerRef}\r\n    >\r\n      <div className={styles.inner}>\r\n        <div className={styles.progress} ref={progressRef}></div>\r\n        <div\r\n          className={styles.progressBtnWrapper}\r\n          ref={progressBtnRef}\r\n          onTouchStart={progressTouchStart}\r\n          onTouchMove={progressTouchMove}\r\n          onTouchEnd={progressTouchEnd}\r\n        >\r\n          <span className={styles.progressBtn}></span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","/**\r\n * 同步内层 transform 到外层容器\r\n */\r\nexport function syncWrapperTransform(wrapper: HTMLElement, inner: HTMLElement) {\r\n  const innerStyle = getComputedStyle(inner);\r\n  const transformStyle = innerStyle.getPropertyValue('transform');\r\n  wrapper.style.transform = transformStyle;\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport ProgressBar from './ProgressBar';\r\n\r\nimport { syncWrapperTransform } from '../common';\r\nimport { PlayingSong } from 'shared/domain/song/typings';\r\nimport { PlayMode } from 'shared/typings';\r\n\r\nimport styles from './index.module.scss';\r\n\r\ninterface FullScreenPlayerProps {\r\n  className?: string;\r\n  visible?: boolean; // 是否可见\r\n  lyric?: string; // 当前展示的歌词\r\n  playMode?: PlayMode; // 播放模式\r\n  playingSong?: PlayingSong; // 播放中的歌曲\r\n  currentTime?: number; // 当前播放时间\r\n  isPlaying?: boolean; // 是否播放中\r\n  onBack?: () => void; // 回退按钮回调\r\n  onPlayingToggle?: () => void; // 切换播放\r\n  onPercentChange?: (percent: number) => void; // 播放时间进度改变的回调\r\n  onPlayModeChange?: (mode: PlayMode) => void; // 播放模式改变的回调\r\n  onPrevClick?: () => void; // 左箭头图标点击的回调\r\n  onNextClick?: () => void; // 右箭头图标点击的回调\r\n}\r\n\r\nconst FullScreenPlayer: React.FC<FullScreenPlayerProps> = props => {\r\n  const {\r\n    className = '',\r\n    visible,\r\n    lyric,\r\n    playMode,\r\n    currentTime,\r\n    playingSong,\r\n    isPlaying,\r\n    onBack,\r\n    onPlayingToggle,\r\n    onPercentChange,\r\n    onPlayModeChange,\r\n    onPrevClick,\r\n    onNextClick\r\n  } = props;\r\n\r\n  const cdWrapperRef = useRef<HTMLDivElement>(null);\r\n  const cdImageRef = useRef<HTMLImageElement>(null);\r\n\r\n  const percent =\r\n    currentTime && playingSong ? currentTime / playingSong.duration : 0;\r\n\r\n  const pad = (val: string | number, n = 2) => {\r\n    let length = val.toString().length;\r\n    while (length < n) {\r\n      val = '0' + val;\r\n      length++;\r\n    }\r\n\r\n    return val;\r\n  };\r\n\r\n  const timeFormat = (time: number = 0) => {\r\n    time = Math.floor(time);\r\n    const minute = Math.floor(time / 60);\r\n    const second = pad(time % 60);\r\n\r\n    return `${minute}:${second}`;\r\n  };\r\n\r\n  const onModeChange = () => {\r\n    const modes = Object.values(PlayMode);\r\n    const index = modes.findIndex(mode => mode === playMode);\r\n    const nextIndex = (index + 1) % modes.length;\r\n    onPlayModeChange && onPlayModeChange(modes[nextIndex]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isPlaying && cdWrapperRef.current && cdImageRef.current) {\r\n      syncWrapperTransform(cdWrapperRef.current, cdImageRef.current);\r\n    }\r\n  }, [isPlaying, cdWrapperRef, cdImageRef]);\r\n\r\n  return (\r\n    <div\r\n      className={classNames({\r\n        [styles.container]: true,\r\n        [styles.visible]: visible,\r\n        [className]: true\r\n      })}\r\n    >\r\n      <div className={styles.background}>\r\n        <img\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          src={playingSong?.image}\r\n          alt={playingSong?.songName}\r\n        />\r\n      </div>\r\n      <header\r\n        className={classNames({\r\n          [styles.top]: true,\r\n          [styles.visible]: visible\r\n        })}\r\n      >\r\n        <div className={styles.back} onClick={onBack}>\r\n          <i\r\n            className={classNames({\r\n              'icon-back': true,\r\n              [styles.backIcon]: true\r\n            })}\r\n          />\r\n        </div>\r\n        <h1 className={styles.title}>{playingSong?.songName}</h1>\r\n        <h2 className={styles.subtitle}>{playingSong?.singerName}</h2>\r\n      </header>\r\n      <main className={styles.middle}>\r\n        <section className={styles.middleLeft}>\r\n          <div className={styles.cdWrapper} ref={cdWrapperRef}>\r\n            <img\r\n              className={classNames({\r\n                [styles.cdImage]: true,\r\n                [styles.playing]: isPlaying\r\n              })}\r\n              src={playingSong?.image}\r\n              alt={playingSong?.songName}\r\n              ref={cdImageRef}\r\n            />\r\n          </div>\r\n          <div className={styles.lyricWrapper}>\r\n            <span className={styles.lyric}>{lyric}</span>\r\n          </div>\r\n        </section>\r\n      </main>\r\n      <footer\r\n        className={classNames({\r\n          [styles.bottom]: true,\r\n          [styles.visible]: visible\r\n        })}\r\n      >\r\n        <div className={styles.progressWrapper}>\r\n          <span\r\n            className={classNames({\r\n              [styles.time]: true,\r\n              [styles.left]: true\r\n            })}\r\n          >\r\n            {timeFormat(currentTime)}\r\n          </span>\r\n          <ProgressBar\r\n            className={styles.progressBar}\r\n            percent={percent}\r\n            onPercentChange={onPercentChange}\r\n          />\r\n          <span\r\n            className={classNames({\r\n              [styles.time]: true,\r\n              [styles.right]: true\r\n            })}\r\n          >\r\n            {timeFormat(playingSong?.duration)}\r\n          </span>\r\n        </div>\r\n        <div className={styles.operations}>\r\n          <div\r\n            className={classNames({\r\n              'icon-left': true,\r\n              [styles.icon]: true,\r\n              [styles.leftIcon]: true\r\n            })}\r\n          >\r\n            <i\r\n              className={classNames({\r\n                'icon-sequence': playMode === PlayMode.Sequence,\r\n                'icon-loop': playMode === PlayMode.Loop,\r\n                'icon-random': playMode === PlayMode.Random\r\n              })}\r\n              onClick={onModeChange}\r\n            />\r\n          </div>\r\n          <div\r\n            className={classNames({\r\n              [styles.icon]: true,\r\n              [styles.leftIcon]: true\r\n            })}\r\n          >\r\n            <i className=\"icon-prev\" onClick={onPrevClick} />\r\n          </div>\r\n          <div\r\n            className={classNames({\r\n              [styles.icon]: true,\r\n              [styles.centerIcon]: true\r\n            })}\r\n          >\r\n            <i\r\n              className={classNames({\r\n                'icon-pause': isPlaying,\r\n                'icon-play': !isPlaying\r\n              })}\r\n              onClick={onPlayingToggle}\r\n            />\r\n          </div>\r\n          <div\r\n            className={classNames({\r\n              [styles.icon]: true,\r\n              [styles.rightIcon]: true\r\n            })}\r\n          >\r\n            <i className=\"icon-next\" onClick={onNextClick} />\r\n          </div>\r\n          <div\r\n            className={classNames({\r\n              [styles.icon]: true,\r\n              [styles.rightIcon]: true\r\n            })}\r\n          >\r\n            <i\r\n              className={classNames({\r\n                'icon-favorite': false,\r\n                'icon-not-favorite': true\r\n              })}\r\n            />\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FullScreenPlayer;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport styles from './index.module.scss';\r\n\r\ninterface ProgressCircleProps {\r\n  className?: string;\r\n  radius?: number;\r\n  percent?: number;\r\n}\r\n\r\nconst ProgressCircle: React.FC<ProgressCircleProps> = props => {\r\n  const { className = '', radius = 100, percent = 0, children } = props;\r\n\r\n  const dashArray = Math.PI * 100;\r\n  const dashOffset = (1 - percent) * dashArray;\r\n\r\n  return (\r\n    <div\r\n      className={classNames({\r\n        [styles.container]: true,\r\n        [className]: true\r\n      })}\r\n    >\r\n      <svg width={radius} height={radius} viewBox=\"0 0 100 100\" version=\"1.1\">\r\n        <circle\r\n          className={styles.background}\r\n          cx=\"50\"\r\n          cy=\"50\"\r\n          r=\"50\"\r\n          fill=\"transparent\"\r\n        />\r\n        <circle\r\n          className={styles.progress}\r\n          r=\"50\"\r\n          cx=\"50\"\r\n          cy=\"50\"\r\n          fill=\"transparent\"\r\n          strokeDasharray={dashArray}\r\n          strokeDashoffset={dashOffset}\r\n        />\r\n      </svg>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressCircle;\r\n","import React, { useEffect, useRef, MouseEvent } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport ProgressCircle from './ProgressCircle';\r\n\r\nimport { syncWrapperTransform } from '../common';\r\nimport { PlayingSong } from 'shared/domain/song/typings';\r\n\r\nimport styles from './index.module.scss';\r\n\r\ninterface MiniPlayerProps {\r\n  className?: string;\r\n  visible?: boolean; // 是否可见\r\n  percent?: number; // 播放进度\r\n  isPlaying?: boolean; // 是否播放中\r\n  playingSong?: PlayingSong; // 当前播放的歌曲\r\n  onPlayerClick?: () => void; // 点击整个播放器的回调\r\n  onPlayingToggle?: () => void; // 切换播放\r\n  onPlayListShow?: () => void; // 点击列表图标的回调\r\n}\r\n\r\nconst MiniPlayer: React.FC<MiniPlayerProps> = props => {\r\n  const {\r\n    className = '',\r\n    visible,\r\n    percent,\r\n    isPlaying,\r\n    playingSong,\r\n    onPlayerClick,\r\n    onPlayingToggle,\r\n    onPlayListShow\r\n  } = props;\r\n\r\n  const cdWrapperRef = useRef<HTMLDivElement>(null);\r\n  const cdImageRef = useRef<HTMLImageElement>(null);\r\n\r\n  const clickPlayIcon = (e: MouseEvent<HTMLElement>) => {\r\n    e.stopPropagation(); // 阻止触发 onPlayerClick\r\n    onPlayingToggle && onPlayingToggle();\r\n  };\r\n\r\n  const clickListIcon = (e: MouseEvent<HTMLElement>) => {\r\n    e.stopPropagation(); // 阻止触发 onPlayerClick\r\n    onPlayListShow && onPlayListShow();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isPlaying && cdWrapperRef.current && cdImageRef.current) {\r\n      syncWrapperTransform(cdWrapperRef.current, cdImageRef.current);\r\n    }\r\n  }, [isPlaying, cdWrapperRef, cdImageRef]);\r\n\r\n  return (\r\n    <div\r\n      className={classNames({\r\n        [styles.container]: true,\r\n        [styles.visible]: visible,\r\n        [className]: true\r\n      })}\r\n      onClick={onPlayerClick}\r\n    >\r\n      <div className={styles.cd}>\r\n        <div className={styles.cdImageWrapper} ref={cdWrapperRef}>\r\n          <img\r\n            className={classNames({\r\n              [styles.cdImage]: true,\r\n              [styles.playing]: isPlaying\r\n            })}\r\n            width=\"40\"\r\n            height=\"40\"\r\n            src={playingSong?.image}\r\n            alt={playingSong?.songName}\r\n            ref={cdImageRef}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={styles.text}>\r\n        <span className={styles.name}>{playingSong?.songName}</span>\r\n        <span className={styles.desc}>{playingSong?.singerName}</span>\r\n      </div>\r\n      <div className={styles.control}>\r\n        <ProgressCircle percent={percent} radius={32}>\r\n          <i\r\n            className={classNames({\r\n              [styles.playIcon]: true,\r\n              'icon-pause-mini': isPlaying,\r\n              'icon-play-mini': !isPlaying\r\n            })}\r\n            onClick={clickPlayIcon}\r\n          />\r\n        </ProgressCircle>\r\n      </div>\r\n      <div className={styles.control}>\r\n        <i\r\n          className={classNames({\r\n            [styles.listIcon]: true,\r\n            'icon-playlist': true\r\n          })}\r\n          onClick={clickListIcon}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MiniPlayer;\r\n","import React, { MouseEvent } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport { PlayMode } from 'shared/typings';\r\nimport { PlayerSong } from 'shared/domain/song/typings';\r\n\r\nimport styles from './index.module.scss';\r\n\r\ninterface PlayListModalProps {\r\n  className?: string;\r\n  visible?: boolean; // 是否可见\r\n  playMode?: PlayMode; // 播放模式\r\n  playList?: PlayerSong[]; // 播放列表\r\n  playingSong?: PlayerSong; // 当前播放歌曲\r\n  onClose?: () => void; // 关闭回调\r\n  onSelect?: (song: PlayerSong) => void; // 选择歌曲回调\r\n  onFavoriteToggle?: (song: PlayerSong) => void; // 反选歌曲收藏回调\r\n  onRemove?: (song: PlayerSong) => void; // 移除歌曲回调\r\n  onClear?: () => void; // 清空播放列表回调\r\n}\r\n\r\nconst playModeDescMap = {\r\n  [PlayMode.Sequence]: '顺序播放',\r\n  [PlayMode.Random]: '随机播放',\r\n  [PlayMode.Loop]: '单曲循环'\r\n};\r\n\r\nconst PlayListModal: React.FC<PlayListModalProps> = props => {\r\n  const {\r\n    className = '',\r\n    visible,\r\n    playMode,\r\n    playList = [],\r\n    playingSong,\r\n    onClose,\r\n    onSelect,\r\n    onFavoriteToggle,\r\n    onRemove,\r\n    onClear\r\n  } = props;\r\n\r\n  const stopPropagation = (e: MouseEvent<HTMLElement>) => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const selectSong = (song: PlayerSong) => () => {\r\n    onSelect && onSelect(song);\r\n  };\r\n\r\n  const toggleFavorite = (song: PlayerSong) => (e: MouseEvent<HTMLElement>) => {\r\n    e.stopPropagation();\r\n    onFavoriteToggle && onFavoriteToggle(song);\r\n  };\r\n\r\n  const removeSong = (song: PlayerSong) => (e: MouseEvent<HTMLElement>) => {\r\n    e.stopPropagation();\r\n    onRemove && onRemove(song);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={classNames({\r\n        [styles.container]: true,\r\n        [className]: true,\r\n        [styles.visible]: visible\r\n      })}\r\n      onClick={onClose}\r\n    >\r\n      <div className={styles.body} onClick={stopPropagation}>\r\n        <div className={styles.header}>\r\n          <i\r\n            className={classNames({\r\n              [styles.modeIcon]: true,\r\n              'icon-sequence': playMode === PlayMode.Sequence,\r\n              'icon-loop': playMode === PlayMode.Loop,\r\n              'icon-random': playMode === PlayMode.Random\r\n            })}\r\n          />\r\n          <span className={styles.modeText}>\r\n            {playMode ? playModeDescMap[playMode] : ''}\r\n          </span>\r\n          <span className={styles.clear} onClick={onClear}>\r\n            <i\r\n              className={classNames({\r\n                'icon-clear': true,\r\n                [styles.clearIcon]: true\r\n              })}\r\n            />\r\n          </span>\r\n        </div>\r\n        <ul className={styles.list}>\r\n          {playList.map(song => (\r\n            <li\r\n              key={song.songId}\r\n              className={styles.item}\r\n              onClick={selectSong(song)}\r\n            >\r\n              <i\r\n                className={classNames({\r\n                  [styles.current]: true,\r\n                  'icon-play': song.songId === playingSong?.songId\r\n                })}\r\n              />\r\n              <span className={styles.songName}>{song.songName}</span>\r\n              <span className={styles.like} onClick={toggleFavorite(song)}>\r\n                <i\r\n                  className={classNames({\r\n                    'icon-favorite': true, // TODO\r\n                    'icon-not-favorite': false\r\n                  })}\r\n                />\r\n              </span>\r\n              <span className={styles.delete} onClick={removeSong(song)}>\r\n                <i className=\"icon-delete\" />\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <span className={styles.close} onClick={onClose}>\r\n          关闭\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayListModal;\r\n","import React, { MouseEvent } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport styles from './index.module.scss';\r\n\r\ninterface ConfirmProps {\r\n  className?: string;\r\n  visible?: boolean;\r\n  maskClosable?: boolean;\r\n  content?: React.ReactNode;\r\n  confirmText?: string;\r\n  cancelText?: string;\r\n  onConfirm?: () => void;\r\n  onCancel?: () => void;\r\n}\r\n\r\nconst Confirm: React.FC<ConfirmProps> = props => {\r\n  const {\r\n    className = '',\r\n    visible,\r\n    maskClosable,\r\n    content,\r\n    confirmText = '确定',\r\n    cancelText = '取消',\r\n    onConfirm,\r\n    onCancel\r\n  } = props;\r\n\r\n  const onMaskClick = () => {\r\n    maskClosable && onConfirm && onConfirm();\r\n  };\r\n\r\n  const onFooterClick = (e: MouseEvent<HTMLDivElement>) => {\r\n    // 防止点击事件向 mask 层冒泡\r\n    e.stopPropagation();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={classNames({\r\n        [styles.mask]: true,\r\n        [className]: true,\r\n        [styles.visible]: visible\r\n      })}\r\n      onClick={onMaskClick}\r\n    >\r\n      <div className={styles.body}>\r\n        <div className={styles.content}>{content}</div>\r\n        <div className={styles.footer} onClick={onFooterClick}>\r\n          <span\r\n            className={classNames({\r\n              [styles.footerBtn]: true,\r\n              [styles.closeBtn]: true\r\n            })}\r\n            onClick={onCancel}\r\n          >\r\n            {cancelText}\r\n          </span>\r\n          <span className={styles.footerBtn} onClick={onConfirm}>\r\n            {confirmText}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Confirm;\r\n","/**\r\n * [ti:晴天]\r\n * [ar:周杰伦]\r\n * [al:叶惠美]\r\n * [by:]\r\n * [offset:0]\r\n * [00:00.00]晴天 - 周杰伦 (Jay Chou)\r\n * [00:07.34]词：周杰伦\r\n * [00:14.69]曲：周杰伦\r\n * [00:22.04]编曲：周杰伦\r\n * [00:29.39]故事的小黄花\r\n * [00:32.64]从出生那年就飘着\r\n * [00:36.19]童年的荡秋千\r\n * [00:39.93]随记忆一直晃到现在\r\n * [00:42.99]Re So So Si Do Si La\r\n * [00:46.11]So La Si Si Si Si La Si La So\r\n * [00:49.79]吹着前奏望着天空\r\n * [00:53.35]我想起花瓣试着掉落\r\n * [00:56.78]为你翘课的那一天\r\n * [00:59.03]花落的那一天\r\n * [01:00.65]教室的那一间\r\n * [01:02.21]我怎么看不见\r\n * [01:04.02]消失的下雨天\r\n * [01:05.71]我好想再淋一遍\r\n * [01:09.08]\r\n * [01:09.95]没想到失去的勇气我还留着\r\n * [01:15.01]\r\n * [01:16.13]好想再问一遍\r\n * [01:17.87]你会等待还是离开\r\n * [01:23.18]\r\n * [01:24.74]刮风这天我试过握着你手\r\n * [01:30.42]但偏偏雨渐渐大到我看你不见\r\n * [01:37.66]\r\n * [01:38.84]还要多久我才能在你身边\r\n * [01:44.65]\r\n * [01:45.40]等到放晴的那天也许我会比较好一点\r\n * [01:52.76]从前从前有个人爱你很久\r\n * [01:58.50]但偏偏风渐渐把距离吹得好远\r\n * [02:05.86]\r\n * [02:06.74]好不容易又能再多爱一天\r\n * [02:13.35]但故事的最后你好像还是说了拜拜\r\n * [02:21.46]\r\n * [02:35.00]为你翘课的那一天\r\n * [02:36.75]花落的那一天\r\n * [02:38.63]教室的那一间\r\n * [02:40.31]我怎么看不见\r\n * [02:42.05]消失的下雨天\r\n * [02:43.74]我好想再淋一遍\r\n * [02:46.99]\r\n * [02:47.98]没想到失去的勇气我还留着\r\n * [02:53.60]\r\n * [02:54.53]好想再问一遍\r\n * [02:55.97]你会等待还是离开\r\n * [03:01.77]\r\n * [03:02.77]刮风这天我试过握着你手\r\n * [03:08.45]但偏偏雨渐渐大到我看你不见\r\n * [03:15.94]\r\n * [03:16.87]还要多久我才能在你身边\r\n * [03:23.49]等到放晴的那天也许我会比较好一点\r\n * [03:30.91]从前从前有个人爱你很久\r\n * [03:37.03]偏偏风渐渐把距离吹得好远\r\n * [03:43.89]\r\n * [03:44.77]好不容易又能再多爱一天\r\n * [03:50.38]\r\n * [03:51.07]但故事的最后你好像还是说了拜拜\r\n * [03:59.62]刮风这天我试过握着你手\r\n * [04:02.05]但偏偏雨渐渐大到我看你不见\r\n * [04:05.44]还要多久我才能够在你身边\r\n * [04:08.99]等到放晴那天也许我会比较好一点\r\n * [04:12.86]从前从前有个人爱你很久\r\n * [04:15.86]但偏偏雨渐渐把距离吹得好远\r\n * [04:19.29]好不容易又能再多爱一天\r\n * [04:22.79]但故事的最后你好像还是说了拜\r\n */\r\n\r\n// 源码：https://github.com/ustbhuangyi/lyric-parser\r\n\r\ntype PlayState = 'PLAYING' | 'PAUSE';\r\ntype LyricHandler = (data: { lineNum: number; lyricText: string }) => void;\r\n\r\n/**\r\n * 对于每行歌词，匹配结果是四个：整行歌词，分，秒，毫秒\r\n * 要点：() 是分组符，把项目拆分成若干个单元\r\n */\r\nconst timeExp = /\\[(\\d{2,}):(\\d{2})(?:\\.(\\d{2,3}))?]/g;\r\n\r\nconst tagRegMap: { [key: string]: string } = {\r\n  // 根据例子可知，[] 中除了时间还有特殊标签\r\n  title: 'ti',\r\n  artist: 'ar',\r\n  album: 'al',\r\n  offset: 'offset',\r\n  by: 'by'\r\n};\r\n\r\nconst noop = () => undefined; // dummy 函数\r\n\r\nclass LyricParser {\r\n  private lyric: string; // 所有歌词\r\n  private tags: { [key: string]: string }; // 映射标签与标签内容，{ ti: '晴天' }\r\n  private lines: { time: number; lyricText: string }[]; // 我们需要的结构\r\n  private handler: LyricHandler; // 用户定义的事件回调函数\r\n  private state: PlayState; // 播放状态\r\n  private curNum!: number; // 当前的播放歌词的索引\r\n  private startStamp!: number; // 播放第一句歌词时的绝对时间\r\n  private pauseStamp!: number; // 暂停播放时的绝对时间\r\n  private timer!: NodeJS.Timeout;\r\n\r\n  constructor(lyric: string, handler: LyricHandler = noop) {\r\n    this.lyric = lyric;\r\n    this.tags = {};\r\n    this.lines = [];\r\n    this.handler = handler;\r\n    this.state = 'PAUSE';\r\n    this.init();\r\n  }\r\n\r\n  /**\r\n   * 播放歌词\r\n   *\r\n   * @param {number} startTime 开始播放时间（相对第一句歌词）\r\n   * @param {boolean} skipLast 是否跳过播放上一句歌词\r\n   * @returns {void}\r\n   */\r\n  public play(startTime: number = 0, skipLast?: boolean): void {\r\n    if (!this.lines.length) {\r\n      return;\r\n    }\r\n    this.state = 'PLAYING';\r\n    this.curNum = this.findCurNum(startTime);\r\n    // 由于 startTime 是相对时间，那么 startStamp 指的是播放第一句歌词的绝对时间戳\r\n    this.startStamp = +new Date() - startTime;\r\n    if (!skipLast) {\r\n      this.callHandler(this.curNum - 1);\r\n    }\r\n    if (this.curNum < this.lines.length) {\r\n      clearTimeout(this.timer);\r\n      this.playRest();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 切换播放状态\r\n   */\r\n  public togglePlay(): void {\r\n    const now = +new Date();\r\n    if (this.state === 'PLAYING') {\r\n      this.stop();\r\n      this.pauseStamp = now;\r\n    } else {\r\n      this.state = 'PLAYING';\r\n      this.play((this.pauseStamp || now) - (this.startStamp || now), true);\r\n      this.pauseStamp = 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 暂停播放\r\n   */\r\n  public stop(): void {\r\n    this.state = 'PAUSE';\r\n    clearTimeout(this.timer);\r\n  }\r\n\r\n  /**\r\n   * 跳至第 offset 行歌词\r\n   *\r\n   * @param {number} offset\r\n   * @returns {void}\r\n   */\r\n  public seek(offset: number = 0): void {\r\n    this.play(offset);\r\n  }\r\n\r\n  private init(): void {\r\n    this.initTag();\r\n    this.initLines();\r\n  }\r\n\r\n  private initTag(): void {\r\n    for (const tag in tagRegMap) {\r\n      if (tagRegMap.hasOwnProperty(tag)) {\r\n        // 寻找整个歌词字符串中每个标签对应的内容\r\n        const matches = this.lyric.match(\r\n          new RegExp(`\\\\[${tagRegMap[tag]}:([^\\\\]]*)]`, 'i')\r\n        );\r\n        this.tags[tag] = (matches && matches[1]) || '';\r\n      }\r\n    }\r\n  }\r\n\r\n  private initLines(): void {\r\n    const lines = this.lyric.split('\\n');\r\n    for (const line of lines) {\r\n      const result = timeExp.exec(line);\r\n      if (result) {\r\n        const lyricText = line.replace(timeExp, '').trim();\r\n        if (lyricText) {\r\n          this.lines.push({\r\n            time:\r\n              +result[1] * 60 * 1000 +\r\n              +result[2] * 1000 +\r\n              (+result[3] || 0) * 10,\r\n            lyricText\r\n          });\r\n        }\r\n      }\r\n    }\r\n    this.lines.sort((a, b) => {\r\n      // 按时间升序排序\r\n      return a.time - b.time;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 根据时间点返回相应的歌词索引\r\n   *\r\n   * @param {number} time 相对第一句歌词的时间\r\n   * @returns {number}\r\n   */\r\n  private findCurNum(time: number): number {\r\n    for (let i = 0; i < this.lines.length; i++) {\r\n      if (time <= this.lines[i].time) {\r\n        return i;\r\n      }\r\n    }\r\n    return this.lines.length - 1;\r\n  }\r\n\r\n  /**\r\n   * 调用用户传入的事件函数\r\n   *\r\n   * @param {number} i 当前歌词索引\r\n   * @returns {void}\r\n   */\r\n  private callHandler(i: number): void {\r\n    if (i < 0) {\r\n      return;\r\n    }\r\n    this.handler({ lineNum: i, lyricText: this.lines[i].lyricText });\r\n  }\r\n\r\n  private playRest(): void {\r\n    const line = this.lines[this.curNum];\r\n    const delay = line.time - (+new Date() - this.startStamp);\r\n    this.timer = setTimeout(() => {\r\n      this.callHandler(this.curNum++);\r\n      if (this.curNum < this.lines.length && this.state === 'PLAYING') {\r\n        this.playRest();\r\n      }\r\n    }, delay);\r\n  }\r\n}\r\n\r\nexport default LyricParser;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport Container from 'shared/container';\r\n\r\nimport FullScreenPlayer from './FullScreenPlayer';\r\nimport MiniPlayer from './MiniPlayer';\r\nimport PlayListModal from './PlayListModal';\r\nimport Confirm from 'shared/components/Confirm';\r\n\r\nimport LyricParser from 'shared/lyric-parser';\r\n\r\nimport { PlayMode } from 'shared/typings';\r\n\r\nimport message from 'shared/lib/message';\r\n\r\nimport styles from './index.module.scss';\r\n\r\nconst Player: React.FC = () => {\r\n  const {\r\n    isPlaying,\r\n    playMode,\r\n    setPlayMode,\r\n    playList,\r\n    songIndex,\r\n    setSongIndex,\r\n    setIsPlaying,\r\n    playingSong,\r\n    isPlayerFullScreen,\r\n    setIsPlayerFullScreen\r\n  } = Container.useContainer();\r\n  const [isConfirmVisible, setIsConfirmVisible] = useState(false);\r\n  const [isPlayListVisible, setIsPlayListVisible] = useState(false);\r\n  const [isAudioReady, setIsAudioReady] = useState(false);\r\n  const [lyricParser, setLyricParser] = useState<LyricParser>();\r\n  const [playingLyric, setPlayingLyric] = useState<string>();\r\n  const audioRef = useRef<HTMLAudioElement>(null);\r\n\r\n  const [currentPlayingTime, setCurrentPlayingTime] = useState(0);\r\n\r\n  const currentPercent = playingSong\r\n    ? currentPlayingTime / playingSong.duration\r\n    : 0;\r\n\r\n  const onFullScreenPlayerBack = () => {\r\n    setIsPlayerFullScreen(false);\r\n  };\r\n\r\n  const onMiniPlayerClick = () => {\r\n    setIsPlayerFullScreen(true);\r\n  };\r\n\r\n  const togglePlaying = () => {\r\n    setIsPlaying(prev => !prev);\r\n  };\r\n\r\n  const updatePlayingTime = (e: any) => {\r\n    // 这里没办法，只能用 any\r\n    setCurrentPlayingTime(e.target.currentTime);\r\n  };\r\n\r\n  const onPercentChange = (percent: number) => {\r\n    const time = (playingSong?.duration || 0) * percent;\r\n    if (audioRef.current) {\r\n      audioRef.current.currentTime = time;\r\n    }\r\n    if (!isPlaying) {\r\n      togglePlaying();\r\n    }\r\n    if (lyricParser) {\r\n      lyricParser.seek(time * 1000);\r\n    }\r\n  };\r\n\r\n  const onAudioReady = () => {\r\n    setIsAudioReady(true);\r\n  };\r\n\r\n  const handleAudioError = () => {\r\n    message.error('播放出错');\r\n  };\r\n\r\n  const loop = () => {\r\n    if (audioRef.current) {\r\n      audioRef.current.currentTime = 0;\r\n      audioRef.current.play();\r\n    }\r\n    if (lyricParser) {\r\n      lyricParser.seek();\r\n    }\r\n  };\r\n\r\n  const next = () => {\r\n    const listLength = playList.length;\r\n    if (listLength === 1) {\r\n      loop();\r\n    } else {\r\n      const nextIndex = (songIndex + 1) % listLength;\r\n      setSongIndex(nextIndex);\r\n      if (!isPlaying) {\r\n        togglePlaying();\r\n      }\r\n    }\r\n  };\r\n\r\n  const playingCompleted = () => {\r\n    if (playMode === PlayMode.Loop) {\r\n      loop();\r\n    } else {\r\n      next();\r\n    }\r\n  };\r\n\r\n  const handleLyric = (data: { lineNum: number; lyricText: string }) => {\r\n    setPlayingLyric(data.lyricText);\r\n  };\r\n\r\n  const playPrevSong = () => {\r\n    if (!isAudioReady) {\r\n      return;\r\n    }\r\n    if (playList.length === 1) {\r\n      loop();\r\n    } else {\r\n      setSongIndex(prev => {\r\n        let nextIndex = (prev - 1) % playList.length;\r\n        if (nextIndex === -1) {\r\n          nextIndex = playList.length - 1;\r\n        }\r\n        return nextIndex;\r\n      });\r\n      if (!isPlaying) {\r\n        togglePlaying();\r\n      }\r\n    }\r\n  };\r\n\r\n  const playNextSong = () => {\r\n    if (!isAudioReady) {\r\n      return;\r\n    }\r\n    if (playList.length === 1) {\r\n      loop();\r\n    } else {\r\n      setSongIndex(prev => (prev + 1) % playList.length);\r\n      if (!isPlaying) {\r\n        togglePlaying();\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCurrentPlayingTime(0);\r\n    setIsAudioReady(false);\r\n    if (playingSong) {\r\n      setLyricParser(prev => {\r\n        prev && prev.stop();\r\n        return new LyricParser(playingSong.lyric, handleLyric);\r\n      });\r\n    }\r\n  }, [playingSong]);\r\n\r\n  useEffect(() => {\r\n    if (lyricParser) {\r\n      lyricParser.togglePlay();\r\n    }\r\n  }, [lyricParser, isPlaying]);\r\n\r\n  useEffect(() => {\r\n    if (audioRef.current) {\r\n      if (isPlaying && isAudioReady) {\r\n        audioRef.current.play();\r\n      } else if (isAudioReady) {\r\n        audioRef.current.pause();\r\n      }\r\n    }\r\n  }, [isPlaying, isAudioReady]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <FullScreenPlayer\r\n        visible={isPlayerFullScreen}\r\n        lyric={playingLyric}\r\n        playMode={playMode}\r\n        currentTime={currentPlayingTime}\r\n        isPlaying={isPlaying}\r\n        playingSong={playingSong}\r\n        onBack={onFullScreenPlayerBack}\r\n        onPlayingToggle={togglePlaying}\r\n        onPercentChange={onPercentChange}\r\n        onPlayModeChange={setPlayMode}\r\n        onPrevClick={playPrevSong}\r\n        onNextClick={playNextSong}\r\n      />\r\n      <MiniPlayer\r\n        visible={!isPlayerFullScreen && !!playingSong}\r\n        isPlaying={isPlaying}\r\n        percent={currentPercent}\r\n        playingSong={playingSong}\r\n        onPlayingToggle={togglePlaying}\r\n        onPlayerClick={onMiniPlayerClick}\r\n        onPlayListShow={() => setIsPlayListVisible(true)}\r\n      />\r\n      <PlayListModal\r\n        visible={isPlayListVisible}\r\n        playMode={playMode}\r\n        playList={playList}\r\n        playingSong={playingSong}\r\n        onClose={() => setIsPlayListVisible(false)}\r\n      />\r\n      <Confirm\r\n        visible={isConfirmVisible}\r\n        confirmText=\"清空\"\r\n        onCancel={() => setIsConfirmVisible(false)}\r\n      />\r\n      <audio\r\n        ref={audioRef}\r\n        src={playingSong?.playUrl}\r\n        onCanPlay={onAudioReady}\r\n        onTimeUpdate={updatePlayingTime}\r\n        onEnded={playingCompleted}\r\n        onError={handleAudioError}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nimport Container from 'shared/container';\r\n\r\nimport SongUsecase from 'shared/domain/song';\r\nimport { FulfilledRecommendSong } from 'shared/domain/song/typings';\r\n\r\nimport message from 'shared/lib/message';\r\n\r\nimport styles from './index.module.scss';\r\n\r\nconst Recommend: React.FC<RouteComponentProps> = props => {\r\n  const { addAndPlaySong } = Container.useContainer();\r\n  const [recommendList, setRecommendList] = useState<FulfilledRecommendSong[]>(\r\n    []\r\n  );\r\n\r\n  const getRecommendList = async () => {\r\n    try {\r\n      const result = await SongUsecase.getRecommendList();\r\n      setRecommendList(result);\r\n    } catch (e) {\r\n      message.error(e.message);\r\n    }\r\n  };\r\n\r\n  const selectSong = (song: FulfilledRecommendSong) => () => {\r\n    addAndPlaySong({\r\n      songId: song.songId,\r\n      songName: song.songName,\r\n      singerName: song.singerName,\r\n      image: song.hugeSongPic\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getRecommendList();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.content}>\r\n        <h1 className={styles.listTitle}>热门歌单推荐</h1>\r\n        <ul>\r\n          {recommendList.map(item => (\r\n            <li\r\n              key={item.songId}\r\n              className={styles.item}\r\n              onClick={selectSong(item)}\r\n            >\r\n              <div className={styles.icon}>\r\n                <img\r\n                  src={item.smallSongPic}\r\n                  width=\"60\"\r\n                  height=\"60\"\r\n                  alt={item.songName}\r\n                />\r\n              </div>\r\n              <div className={styles.text}>\r\n                <h2 className={styles.name}>{item.singerName}</h2>\r\n                <span className={styles.desc}>{item.songName}</span>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recommend;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nimport SongUsecase from 'shared/domain/song';\r\nimport { FulfilledSinger } from 'shared/domain/song/typings';\r\nimport { LOCAL_PATHS } from 'shared/constants';\r\n\r\nimport message from 'shared/lib/message';\r\n\r\nimport styles from './index.module.scss';\r\n\r\nconst SingerList: React.FC<RouteComponentProps> = props => {\r\n  const [singerList, setSingerList] = useState<FulfilledSinger[]>([]);\r\n\r\n  const searchSingerList = async () => {\r\n    try {\r\n      const result = await SongUsecase.searchSingerList('c');\r\n      setSingerList(result);\r\n    } catch (e) {\r\n      message.error(e.message);\r\n    }\r\n  };\r\n\r\n  const onSingerClick = (singer: FulfilledSinger) => () => {\r\n    props.history.push(\r\n      LOCAL_PATHS.singer.detail.getPathByParams(singer.singerId)\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    searchSingerList();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <ul className={styles.list}>\r\n        {singerList.map(singer => (\r\n          <li\r\n            key={singer.singerId}\r\n            className={styles.item}\r\n            onClick={onSingerClick(singer)}\r\n          >\r\n            <img\r\n              src={singer.singerPic}\r\n              alt={singer.singerName}\r\n              className={styles.avatar}\r\n            />\r\n            <span className={styles.name}>{singer.singerName}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingerList;\r\n","import { useState, useCallback } from 'react';\r\n\r\nconst useAsyncTask = <T extends any[], U>(\r\n  task: (...args: T) => Promise<U>\r\n): [(...args: T) => Promise<U>, boolean, boolean] => {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [isPending, setIsPending] = useState(false);\r\n\r\n  const finalTask = useCallback(\r\n    async (...args: T) => {\r\n      setIsPending(true);\r\n      const result = await task(...args);\r\n      setIsLoaded(true);\r\n      setIsPending(false);\r\n      return result;\r\n    },\r\n    [task]\r\n  );\r\n\r\n  return [finalTask, isLoaded, isPending];\r\n};\r\n\r\nexport default useAsyncTask;\r\n","import {\r\n  RollApiPaginationQuery,\r\n  RollApiPaginationResult\r\n} from 'shared/typings';\r\nimport { StrategyParams, FetcherStategy } from '../typings';\r\n\r\nclass RollStrategy implements FetcherStategy {\r\n  public async fetch<T, U>(params: StrategyParams<T>) {\r\n    const { fetcher, pageNo, queryData } = params;\r\n    const rollFetcher = fetcher as (\r\n      query: RollApiPaginationQuery<T>\r\n    ) => Promise<RollApiPaginationResult<U[]>>;\r\n    const result = await rollFetcher({\r\n      ...queryData,\r\n      page: pageNo\r\n    } as RollApiPaginationQuery<T>);\r\n\r\n    return result.list;\r\n  }\r\n}\r\n\r\nfunction createStrategy() {\r\n  return new RollStrategy();\r\n}\r\n\r\nexport default createStrategy();\r\n","import rollStrategy from './roll';\r\n\r\nconst getFetcherStrategy = (type: 'ROLL') => {\r\n  return rollStrategy;\r\n};\r\n\r\nexport default getFetcherStrategy;\r\n","import { useState, useEffect, useRef } from 'react';\r\n\r\nimport useAsyncTask from '../useAsyncTask';\r\nimport getFetcherStrategy from './fetcher-strategies';\r\n\r\nimport { Option } from './typings';\r\n\r\n/**\r\n * 依赖图：\r\n *\r\n *         disabled (可能由 query 影响)\r\n *       /                             \\\r\n * query ------------------------------- task\r\n *       \\                             /\r\n *                    page\r\n *\r\n * 解释：\r\n *\r\n * 1. query 变化，需要重置 page\r\n * 2. disabled 可能由 query 决定，也可能由其他因素决定\r\n * 3. 只有 page 与 disabled 稳定后，才能执行 task\r\n * 4. 为何一开始设置 page 为 undefined？因为监听 query 时会设置\r\n *    一开始就设置了，那加上 useEffect query 就设两次了，task 就会被执行两次\r\n *    执行 task 之前先判断 page 是否 undefined，就可以避免多余的一次执行\r\n * 5. 为何 disabled 要设为状态，而不用 option 的？\r\n *    有的场景是 query 影响 disabled 与 page 的，所以如果直接用 disabled\r\n *    那么 useEffect 监听 disabled 时，page 还没重设，就会出现问题\r\n *    为何不用 ref，因为无法保证：\r\n *    query -> setPage 的 useEffect 会比 disabled -> task 的 useEffect 先执行\r\n */\r\nconst usePagination = <T, U>(option: Option<T, U>) => {\r\n  const {\r\n    type,\r\n    fetcher,\r\n    pageSize = 10,\r\n    query,\r\n    initialPageNo = 1,\r\n    defaultValue = [],\r\n    onError,\r\n    disabled = false\r\n  } = option || {};\r\n  const [isDisabled, setIsDisabled] = useState(disabled);\r\n  const [page, setPage] = useState<{ pageNo: number; pageSize: number }>();\r\n  const [data, setData] = useState(defaultValue);\r\n  const dataRef = useRef(defaultValue);\r\n  dataRef.current = data;\r\n\r\n  const hasMore = page ? data.length >= pageSize * page.pageNo : true;\r\n\r\n  const task = async (option: {\r\n    pageNo: number;\r\n    pageSize: number;\r\n    queryData?: T;\r\n    isRefetch?: boolean;\r\n  }) => {\r\n    const { pageNo, pageSize, queryData, isRefetch } = option;\r\n    try {\r\n      // 根据 type 获取对应 fetcher 策略\r\n      const strategy = getFetcherStrategy(type);\r\n      const result = await strategy.fetch<T, U>({\r\n        fetcher,\r\n        pageNo,\r\n        pageSize,\r\n        queryData\r\n      });\r\n      const fulfilledResult = result || [];\r\n      // 具体 setData 策略\r\n      const curData = dataRef.current;\r\n      if (!isRefetch) {\r\n        const shouldReset = pageNo === initialPageNo;\r\n        setData(\r\n          shouldReset ? fulfilledResult : curData.concat(fulfilledResult)\r\n        );\r\n      } else {\r\n        const previousPageData = curData.slice(0, (pageNo - 1) * pageSize);\r\n        const nextPageData = curData.slice(pageNo * pageSize);\r\n        setData([...previousPageData, ...fulfilledResult, ...nextPageData]);\r\n      }\r\n    } catch (e) {\r\n      if (onError) {\r\n        onError(e);\r\n      } else {\r\n        throw e;\r\n      }\r\n    }\r\n  };\r\n\r\n  const loadMore = () => {\r\n    if (!isDisabled && hasMore) {\r\n      setPage(prev => ({\r\n        pageSize,\r\n        pageNo: prev ? prev.pageNo + 1 : initialPageNo\r\n      }));\r\n    }\r\n  };\r\n\r\n  const [finalTask, isLoaded, isPending] = useAsyncTask(task);\r\n\r\n  const refetchTask = async (pageNo: number) => {\r\n    if (isDisabled || !page || initialPageNo > pageNo || pageNo > page.pageNo) {\r\n      return;\r\n    }\r\n    finalTask({\r\n      pageNo,\r\n      pageSize: page.pageSize,\r\n      queryData: query,\r\n      isRefetch: true\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsDisabled(disabled);\r\n  }, [disabled]);\r\n\r\n  useEffect(() => {\r\n    setPage({ pageSize, pageNo: initialPageNo });\r\n  }, [query, initialPageNo, pageSize]);\r\n\r\n  useEffect(() => {\r\n    if (!isDisabled && page) {\r\n      finalTask({\r\n        pageNo: page.pageNo,\r\n        pageSize: page.pageSize,\r\n        queryData: query\r\n      });\r\n    }\r\n  }, [page, isDisabled]);\r\n\r\n  return {\r\n    data,\r\n    refetch: refetchTask,\r\n    hasMore,\r\n    loadMore,\r\n    isLoaded,\r\n    isPending\r\n  };\r\n};\r\n\r\nexport default usePagination;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport { FulfilledSingerSong } from 'shared/domain/song/typings';\r\n\r\nimport styles from './index.module.scss';\r\n\r\ninterface SongListProps {\r\n  className?: string;\r\n  songList?: FulfilledSingerSong[];\r\n  onSongSelect?: (song: FulfilledSingerSong, index: number) => void;\r\n}\r\n\r\nconst SongList: React.FC<SongListProps> = props => {\r\n  const { className = '', songList, onSongSelect } = props;\r\n\r\n  const onSelect = (song: FulfilledSingerSong, index: number) => () => {\r\n    onSongSelect && onSongSelect(song, index);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={classNames({\r\n        [styles.container]: true,\r\n        [className]: true\r\n      })}\r\n    >\r\n      <ul>\r\n        {songList?.map((song, index) => (\r\n          <li\r\n            key={song.songId}\r\n            className={styles.item}\r\n            onClick={onSelect(song, index)}\r\n          >\r\n            <div className={styles.rank}>\r\n              <span className={styles.text}>{index + 1}</span>\r\n            </div>\r\n            <div className={styles.content}>\r\n              <h2 className={styles.name}>{song.songName}</h2>\r\n              <span className={styles.desc}>{song.singerName}</span>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SongList;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport SongList from 'shared/components/SongList';\r\nimport { FulfilledSingerSong } from 'shared/domain/song/typings';\r\n\r\nimport styles from './index.module.scss';\r\n\r\ninterface MusicListProps {\r\n  className?: string;\r\n  title?: string;\r\n  cover?: string;\r\n  songList?: FulfilledSingerSong[];\r\n  onBack?: () => void;\r\n  onSongSelect?: (song: FulfilledSingerSong, index: number) => void;\r\n}\r\n\r\nconst MusicList: React.FC<MusicListProps> = props => {\r\n  const {\r\n    className = '',\r\n    title,\r\n    cover,\r\n    songList,\r\n    onSongSelect,\r\n    onBack\r\n  } = props;\r\n\r\n  return (\r\n    <div\r\n      className={classNames({\r\n        [styles.container]: true,\r\n        [className]: true\r\n      })}\r\n    >\r\n      <header className={styles.header}>\r\n        <i\r\n          className={classNames({\r\n            'icon-back': true,\r\n            [styles.backIcon]: true\r\n          })}\r\n          onClick={onBack}\r\n        />\r\n        <h1 className={styles.title}>{title}</h1>\r\n      </header>\r\n      <div\r\n        className={styles.cover}\r\n        style={{\r\n          backgroundImage: `url(${cover})`\r\n        }}\r\n      >\r\n        <div className={styles.mask}></div>\r\n        <div className={styles.playerWrapper}>\r\n          <div className={styles.play}>\r\n            <i\r\n              className={classNames({\r\n                'icon-play': true,\r\n                [styles.playIcon]: true\r\n              })}\r\n            />\r\n            <span className={styles.text}>随机播放全部</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <SongList\r\n          className={styles.songListContainer}\r\n          songList={songList}\r\n          onSongSelect={onSongSelect}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MusicList;\r\n","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport InfiniteScroller from 'react-infinite-scroller';\r\n\r\nimport Container from 'shared/container';\r\nimport usePagination from 'shared/hooks/usePagination';\r\n\r\nimport SongUsecase from 'shared/domain/song';\r\nimport {\r\n  FulfilledSingerDetail,\r\n  FulfilledSingerSong\r\n} from 'shared/domain/song/typings';\r\nimport MusicList from 'shared/components/MusicList';\r\n\r\nimport message from 'shared/lib/message';\r\n\r\nimport styles from './index.module.scss';\r\n\r\ninterface RouteParams {\r\n  id?: string;\r\n}\r\n\r\nconst SingerDetail: React.FC<RouteComponentProps<RouteParams>> = props => {\r\n  const singerId = props.match.params.id;\r\n  const { addAndPlaySong } = Container.useContainer();\r\n\r\n  const [singer, setSinger] = useState<FulfilledSingerDetail>();\r\n\r\n  const query = useMemo(() => (singerId ? { singerId } : undefined), [\r\n    singerId\r\n  ]);\r\n\r\n  const { data: songList, loadMore, hasMore } = usePagination({\r\n    type: 'ROLL',\r\n    fetcher: SongUsecase.getSingerSongList,\r\n    query,\r\n    onError: e => message.error(e.message),\r\n    disabled: !singerId\r\n  });\r\n\r\n  const getSingerDetail = async (singerId: string) => {\r\n    try {\r\n      const result = await SongUsecase.getSingerDetail(singerId);\r\n      setSinger(result);\r\n    } catch (e) {\r\n      message.error(e.message);\r\n    }\r\n  };\r\n\r\n  const onBack = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  const onSongSelect = (song: FulfilledSingerSong) => {\r\n    addAndPlaySong({\r\n      singerName: song.singerName,\r\n      songId: song.songId,\r\n      songName: song.songName,\r\n      image: song.songPic\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (singerId) {\r\n      getSingerDetail(singerId);\r\n    }\r\n  }, [singerId]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <InfiniteScroller\r\n        loadMore={loadMore}\r\n        hasMore={hasMore}\r\n        initialLoad={false}\r\n        threshold={10}\r\n        useWindow={false}\r\n      >\r\n        <MusicList\r\n          title={singer && singer.singerName}\r\n          cover={singer && singer.avatar}\r\n          songList={songList}\r\n          onBack={onBack}\r\n          onSongSelect={onSongSelect}\r\n        />\r\n      </InfiniteScroller>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingerDetail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nimport SongUsecase from 'shared/domain/song';\r\nimport { FulfilledRank } from 'shared/domain/song/typings';\r\nimport { LOCAL_PATHS } from 'shared/constants';\r\n\r\nimport message from 'shared/lib/message';\r\n\r\nimport styles from './index.module.scss';\r\n\r\nconst RankList: React.FC<RouteComponentProps> = props => {\r\n  const [rankList, setRankList] = useState<FulfilledRank[]>([]);\r\n\r\n  const getRankList = async () => {\r\n    try {\r\n      const result = await SongUsecase.getRankList();\r\n      setRankList(result);\r\n    } catch (e) {\r\n      message.error(e.message);\r\n    }\r\n  };\r\n\r\n  const onRankClick = (rank: FulfilledRank) => () => {\r\n    props.history.push(LOCAL_PATHS.rank.detail.getPathByParams(rank.type));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getRankList();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.list}>\r\n        <ul>\r\n          {rankList.map(rank => (\r\n            <li\r\n              key={rank.type}\r\n              className={styles.item}\r\n              onClick={onRankClick(rank)}\r\n            >\r\n              <div className={styles.icon}>\r\n                <img\r\n                  width=\"100\"\r\n                  height=\"100\"\r\n                  src={rank.thirdPic}\r\n                  alt={rank.name}\r\n                />\r\n              </div>\r\n              <div className={styles.info}>\r\n                <span className={styles.name}>{rank.name}</span>\r\n                <span className={styles.comment}>{rank.comment}</span>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RankList;\r\n","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport InfiniteScroller from 'react-infinite-scroller';\r\n\r\nimport MusicList from 'shared/components/MusicList';\r\n\r\nimport SongUsecase from 'shared/domain/song';\r\nimport usePagination from 'shared/hooks/usePagination';\r\n\r\nimport message from 'shared/lib/message';\r\n\r\nimport { FulfilledRank } from 'shared/domain/song/typings';\r\n\r\nimport styles from './index.module.scss';\r\n\r\ninterface RankDetailRouteParamProps {\r\n  type: string;\r\n}\r\n\r\nconst RankDetail: React.FC<RouteComponentProps<\r\n  RankDetailRouteParamProps\r\n>> = props => {\r\n  const rankType = Number(props.match.params.type);\r\n  const [rank, setRank] = useState<FulfilledRank>();\r\n\r\n  const getRankList = async (rankType: number) => {\r\n    try {\r\n      const result = await SongUsecase.getRankList();\r\n      const matched = result.find(item => item.type === rankType);\r\n      setRank(matched);\r\n    } catch (e) {\r\n      message.error(e.message);\r\n    }\r\n  };\r\n\r\n  const query = useMemo(() => ({ type: rankType }), [rankType]);\r\n\r\n  const { data: songList, loadMore, hasMore } = usePagination({\r\n    type: 'ROLL',\r\n    fetcher: SongUsecase.getRankSongList,\r\n    query,\r\n    onError: e => message.error(e.message)\r\n  });\r\n\r\n  const onBack = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getRankList(rankType);\r\n  }, [rankType]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <InfiniteScroller\r\n        loadMore={loadMore}\r\n        hasMore={hasMore}\r\n        initialLoad={false}\r\n        threshold={10}\r\n        useWindow={false}\r\n      >\r\n        <MusicList\r\n          title={rank && rank.name}\r\n          cover={rank && rank.secondPic}\r\n          songList={songList}\r\n          onBack={onBack}\r\n        />\r\n      </InfiniteScroller>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RankDetail;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport { LOCAL_PATHS } from 'shared/constants';\r\n\r\nimport Recommend from './Recommend';\r\nimport SingerList from './singer/List';\r\nimport SingerDetail from './singer/Detail';\r\nimport RankList from './rank/List';\r\nimport RankDetail from './rank/Detail';\r\n\r\nconst Routes: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Route\r\n        path={LOCAL_PATHS.recommend.routePath}\r\n        exact\r\n        component={Recommend}\r\n      />\r\n      <Route\r\n        path={LOCAL_PATHS.singer.list.routePath}\r\n        exact\r\n        component={SingerList}\r\n      />\r\n      <Route\r\n        path={LOCAL_PATHS.singer.detail.routePath}\r\n        exact\r\n        component={SingerDetail}\r\n      />\r\n      <Route\r\n        path={LOCAL_PATHS.rank.list.routePath}\r\n        exact\r\n        component={RankList}\r\n      />\r\n      <Route\r\n        path={LOCAL_PATHS.rank.detail.routePath}\r\n        exact\r\n        component={RankDetail}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from 'react-router-dom';\r\n\r\nimport Container from 'shared/container';\r\n\r\nimport Header from 'shared/components/Header';\r\nimport Tabs from 'shared/components/Tabs';\r\nimport Player from 'business/Player';\r\nimport Routes from 'pages/Routes';\r\n\r\nimport { LOCAL_PATHS, BASE_NAME } from 'shared/constants';\r\n\r\nimport 'assets/styles/reset.scss';\r\nimport 'assets/styles/base.scss';\r\nimport 'assets/styles/icon.scss';\r\n\r\nconst App: React.FC = () => {\r\n  const tabs = [\r\n    { label: '推荐', path: LOCAL_PATHS.recommend.routePath },\r\n    { label: '歌手', path: LOCAL_PATHS.singer.list.routePath },\r\n    { label: '排行', path: LOCAL_PATHS.rank.list.routePath },\r\n    { label: '搜索', path: LOCAL_PATHS.search.routePath }\r\n  ];\r\n\r\n  return (\r\n    <Container.Provider>\r\n      <Header />\r\n      <Router basename={BASE_NAME}>\r\n        <Tabs tabs={tabs} />\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={() => <Redirect to={LOCAL_PATHS.recommend.routePath} />}\r\n          />\r\n          <Routes />\r\n        </Switch>\r\n      </Router>\r\n      <Player />\r\n    </Container.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}